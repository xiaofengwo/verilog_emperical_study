CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_rf.v
+++ b/rtl/verilog/mc_rf.v
@@ -252,18 +252,24 @@ always @(posedge clk)
 // WISHBONE Register Write logic
 //
 
-assign rf_we = `MC_REG_SEL & wb_we_i & wb_cyc_i & wb_stb_i;
+reg	[6:0]	wb_addr_r;
+
+always @(posedge clk)
+	wb_addr_r <= #1 wb_addr_i[6:0];
+
+always @(posedge clk)
+	rf_we <= #1 `MC_REG_SEL & wb_we_i & wb_cyc_i & wb_stb_i & !rf_we;
 
 always @(posedge clk or posedge rst)
 	if(rst)		csr_r2 <= #1 8'h0;
 	else
-	if(rf_we & (wb_addr_i[6:2] == 5'h0) )
+	if(rf_we & (wb_addr_r[6:2] == 5'h0) )
 			csr_r2 <= #1 wb_data_i[31:24];
 
 always @(posedge clk or posedge rst)
 	if(rst)		csr_r[10:1] <= #1 10'h0;
 	else
-	if(rf_we & (wb_addr_i[6:2] == 5'h0) )
+	if(rf_we & (wb_addr_r[6:2] == 5'h0) )
 			csr_r[10:1] <= #1 wb_data_i[10:1];
 
 always @(posedge clk)

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlValueId@@csc0 to sensitivity
    INS HdlValueId@@tms0 to sensitivity
    INS HdlValueId@@csc1 to sensitivity
    INS HdlValueId@@tms1 to sensitivity
    INS HdlValueId@@csc2 to sensitivity
    INS HdlValueId@@tms2 to sensitivity
    INS HdlValueId@@csc3 to sensitivity
    INS HdlValueId@@tms3 to sensitivity
    INS HdlValueId@@csc4 to sensitivity
    INS HdlValueId@@tms4 to sensitivity
    INS HdlValueId@@csc5 to sensitivity
    INS HdlValueId@@tms5 to sensitivity
    INS HdlValueId@@csc6 to sensitivity
    INS HdlValueId@@tms6 to sensitivity
    INS HdlValueId@@csc7 to sensitivity
    INS HdlValueId@@tms7 to sensitivity

DEL HdlIdDef@@sp_cs_sel from objs
HdlIdDef: sp_cs_sel
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 2
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_rf.v
+++ b/rtl/verilog/mc_rf.v
@@ -276,7 +282,7 @@ assign rfr_ps_val = csr_r2[7:0];
 always @(posedge clk or posedge rst)
 	if(rst)		csc_mask_r <= #1 11'h7ff;
 	else
-	if(rf_we & (wb_addr_i[6:2] == 5'h2) )
+	if(rf_we & (wb_addr_r[6:2] == 5'h2) )
 			csc_mask_r <= #1 wb_data_i[10:0];
 
 always @(posedge clk)

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlValueId@@csc0 to sensitivity
    INS HdlValueId@@tms0 to sensitivity
    INS HdlValueId@@csc1 to sensitivity
    INS HdlValueId@@tms1 to sensitivity
    INS HdlValueId@@csc2 to sensitivity
    INS HdlValueId@@tms2 to sensitivity
    INS HdlValueId@@csc3 to sensitivity
    INS HdlValueId@@tms3 to sensitivity
    INS HdlValueId@@csc4 to sensitivity
    INS HdlValueId@@tms4 to sensitivity
    INS HdlValueId@@csc5 to sensitivity
    INS HdlValueId@@tms5 to sensitivity
    INS HdlValueId@@csc6 to sensitivity
    INS HdlValueId@@tms6 to sensitivity
    INS HdlValueId@@csc7 to sensitivity
    INS HdlValueId@@tms7 to sensitivity


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_rf.v
+++ b/rtl/verilog/mc_rf.v
@@ -288,10 +294,6 @@ always @(posedge clk)
 //
 
 always @(posedge clk)
-	ack_r <= #1 `MC_REG_SEL & wb_cyc_i & wb_stb_i & !ack_r & !wb_ack_o;
-
-always @(posedge clk)
-	//wb_ack_o <= #1 (ack_r & wb_we_i) | (`MC_REG_SEL & wb_cyc_i & wb_stb_i & !wb_we_i & !wb_ack_o) ;
 	wb_ack_o <= #1 `MC_REG_SEL & wb_cyc_i & wb_stb_i & !wb_ack_o;
 
 ////////////////////////////////////////////////////////////////////

ParseResult:
UPD HdlStmIf@@body to body
    UPD HdlOp@@AND to AND
        UPD list@@ops to sensitivity
        MOV list@@ops to AND
        list: ops
            HdlOp: AND
                list: ops
                    HdlOp: AND
                        list: ops
                            HdlValueId: wb_cyc_i
                            HdlValueId: wb_stb_i
                    HdlOp: EQ
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: wb_addr_i
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 31
                                            HdlValueInt: 29
                            HdlValueInt: 011
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: wb_we_i
        UPD HdlOp@@AND to AND
            UPD HdlOp@@AND to AND
                UPD HdlValueId@@wb_cyc_i to wb_addr_i
                MOV HdlValueId@@wb_cyc_i to ops
                HdlValueId: wb_cyc_i
                UPD HdlValueId@@wb_stb_i to csr
                MOV HdlValueId@@wb_stb_i to ops
                HdlValueId: wb_stb_i
                DEL list@@ops from AND
            UPD HdlOp@@EQ to EQ
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlValueId@@wb_addr_i to poc
                    MOV HdlValueId@@wb_addr_i to ops
                    HdlValueId: wb_addr_i
                    DEL HdlOp@@DOWNTO from ops
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 29
                    DEL list@@ops from INDEX
                DEL HdlOp@@INDEX from ops
                DEL HdlValueInt@@011 from ops
                DEL list@@ops from EQ
            DEL HdlOp@@AND from ops
            DEL HdlOp@@EQ from ops
            DEL list@@ops from AND
        UPD HdlOp@@NEG_LOG to NEG_LOG
            UPD HdlValueId@@wb_we_i to csc_mask
            MOV HdlValueId@@wb_we_i to ops
            HdlValueId: wb_we_i
            DEL list@@ops from NEG_LOG
        DEL HdlOp@@AND from ops
        DEL HdlOp@@NEG_LOG from ops
    DEL HdlOp@@AND from body
    DEL list@@elifs from body

MOV HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['wb_addr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '2'}]}]}  to body
HdlStmCase: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]} 
    HdlStmCaseType: CASE
    HdlOp: INDEX
        list: ops
            HdlValueId: wb_addr_i
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 6
                    HdlValueInt: 2
    list: cases
        tuple
            HdlValueInt: 0
            HdlStmAssign
                HdlValueId: csr
                HdlValueId: rf_dout
                HdlValueInt: 1
        tuple
            HdlValueInt: 1
            HdlStmAssign
                HdlValueId: poc
                HdlValueId: rf_dout
                HdlValueInt: 1
        tuple
            HdlValueInt: 2
            HdlStmAssign
                HdlValueId: csc_mask
                HdlValueId: rf_dout
                HdlValueInt: 1
        tuple
            HdlValueInt: 4
            HdlStmAssign
                HdlValueId: csc0
                HdlValueId: rf_dout
                HdlValueInt: 1
        tuple
            HdlValueInt: 5
            HdlStmAssign
                HdlValueId: tms0
                HdlValueId: rf_dout
                HdlValueInt: 1
        tuple
            HdlValueInt: 6
            HdlStmAssign
                HdlValueId: csc1
                HdlValueId: rf_dout
                HdlValueInt: 1
        tuple
            HdlValueInt: 7
            HdlStmAssign
                HdlValueId: tms1
                HdlValueId: rf_dout
                HdlValueInt: 1
        tuple
            HdlValueInt: 8
            HdlStmAssign
                HdlValueId: csc2
                HdlValueId: rf_dout
                HdlValueInt: 1
        tuple
            HdlValueInt: 9
            HdlStmAssign
                HdlValueId: tms2
                HdlValueId: rf_dout
                HdlValueInt: 1
        tuple
            HdlValueInt: 10
            HdlStmAssign
                HdlValueId: csc3
                HdlValueId: rf_dout
                HdlValueInt: 1
        tuple
            HdlValueInt: 11
            HdlStmAssign
                HdlValueId: tms3
                HdlValueId: rf_dout
                HdlValueInt: 1
        tuple
            HdlValueInt: 12
            HdlStmAssign
                HdlValueId: csc4
                HdlValueId: rf_dout
                HdlValueInt: 1
        tuple
            HdlValueInt: 13
            HdlStmAssign
                HdlValueId: tms4
                HdlValueId: rf_dout
                HdlValueInt: 1
        tuple
            HdlValueInt: 14
            HdlStmAssign
                HdlValueId: csc5
                HdlValueId: rf_dout
                HdlValueInt: 1
        tuple
            HdlValueInt: 15
            HdlStmAssign
                HdlValueId: tms5
                HdlValueId: rf_dout
                HdlValueInt: 1
        tuple
            HdlValueInt: 16
            HdlStmAssign
                HdlValueId: csc6
                HdlValueId: rf_dout
                HdlValueInt: 1
        tuple
            HdlValueInt: 17
            HdlStmAssign
                HdlValueId: tms6
                HdlValueId: rf_dout
                HdlValueInt: 1
        tuple
            HdlValueInt: 18
            HdlStmAssign
                HdlValueId: csc7
                HdlValueId: rf_dout
                HdlValueInt: 1
        tuple
            HdlValueInt: 19
            HdlStmAssign
                HdlValueId: tms7
                HdlValueId: rf_dout
                HdlValueInt: 1

UPD HdlStmProcess@@ to 
    MOV list@@sensitivity to 
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk

UPD HdlStmProcess@@ to 
    INS HdlValueId@@csc0 to sensitivity
    INS HdlValueId@@tms0 to sensitivity
    INS HdlValueId@@csc1 to sensitivity
    INS HdlValueId@@tms1 to sensitivity
    INS HdlValueId@@csc2 to sensitivity
    INS HdlValueId@@tms2 to sensitivity
    INS HdlValueId@@csc3 to sensitivity
    INS HdlValueId@@tms3 to sensitivity
    INS HdlValueId@@csc4 to sensitivity
    INS HdlValueId@@tms4 to sensitivity
    INS HdlValueId@@csc5 to sensitivity
    INS HdlValueId@@tms5 to sensitivity
    INS HdlValueId@@csc6 to sensitivity
    INS HdlValueId@@tms6 to sensitivity
    INS HdlValueId@@csc7 to sensitivity
    INS HdlValueId@@tms7 to sensitivity

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['wb_addr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '2'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['wb_addr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '2'}]}]} 
    UPD HdlValueInt@@0 to 00
    UPD HdlValueInt@@1 to 01
    UPD HdlValueInt@@2 to 02
    UPD HdlValueInt@@4 to 04
    UPD HdlValueInt@@5 to 05
    UPD HdlValueInt@@6 to 06
    UPD HdlValueInt@@7 to 07
    UPD HdlValueInt@@8 to 08
    UPD HdlValueInt@@9 to 09
    UPD HdlValueInt@@10 to 0a
    UPD HdlValueInt@@11 to 0b
    UPD HdlValueInt@@12 to 0c
    UPD HdlValueInt@@13 to 0d
    UPD HdlValueInt@@14 to 0e
    UPD HdlValueInt@@15 to 0f
    UPD HdlValueInt@@16 to 10
    UPD HdlValueInt@@17 to 11
    UPD HdlValueInt@@18 to 12
    UPD HdlValueInt@@19 to 13

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: wb_err_o

DEL HdlStmIf@@body from 


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_rf.v
+++ b/rtl/verilog/mc_rf.v
@@ -405,14 +423,14 @@ always @(posedge clk)
 	sreq_cs_le <= #1 (!init_req & !lmr_req) | lmr_ack_fe | init_ack_fe;
 
 // Make sure only one is serviced at a time
-assign	spec_req_cs_d[0] =	spec_req_cs_t[0];
-assign	spec_req_cs_d[1] =	spec_req_cs_t[1] & !spec_req_cs_t[0];
-assign	spec_req_cs_d[2] =	spec_req_cs_t[2] & !( |spec_req_cs_t[1:0] );
-assign	spec_req_cs_d[3] =	spec_req_cs_t[3] & !( |spec_req_cs_t[2:0] );
-assign	spec_req_cs_d[4] =	spec_req_cs_t[4] & !( |spec_req_cs_t[3:0] );
-assign	spec_req_cs_d[5] =	spec_req_cs_t[5] & !( |spec_req_cs_t[4:0] );
-assign	spec_req_cs_d[6] =	spec_req_cs_t[6] & !( |spec_req_cs_t[5:0] );
-assign	spec_req_cs_d[7] =	spec_req_cs_t[7] & !( |spec_req_cs_t[6:0] );
+assign	spec_req_cs_d[0] = spec_req_cs_t[0];
+assign	spec_req_cs_d[1] = spec_req_cs_t[1] & !spec_req_cs_t[0];
+assign	spec_req_cs_d[2] = spec_req_cs_t[2] & !( |spec_req_cs_t[1:0] );
+assign	spec_req_cs_d[3] = spec_req_cs_t[3] & !( |spec_req_cs_t[2:0] );
+assign	spec_req_cs_d[4] = spec_req_cs_t[4] & !( |spec_req_cs_t[3:0] );
+assign	spec_req_cs_d[5] = spec_req_cs_t[5] & !( |spec_req_cs_t[4:0] );
+assign	spec_req_cs_d[6] = spec_req_cs_t[6] & !( |spec_req_cs_t[5:0] );
+assign	spec_req_cs_d[7] = spec_req_cs_t[7] & !( |spec_req_cs_t[6:0] );
 
 // Request Tracking
 always @(posedge clk)

ParseResult:
INS HdlStmIf@@body to 

INS HdlStmIf@@body to 

UPD HdlStmIf@@body to body
    INS HdlValueId@@cs_le to body
    INS HdlStmBlock@@SEQ to body
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@body to body
    INS HdlStmBlock@@SEQ to body
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@body to body
    MOV HdlValueId@@cs_le to body
    HdlValueId: cs_le
    MOV list@@elifs to body
    list: elifs

UPD HdlStmIf@@body to body
    INS HdlStmBlock@@SEQ to body
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@body to 

MOV HdlStmIf@@body to 
HdlStmIf: body
    HdlValueId: cs_le
    HdlStmCase: sp_cs_sel
        HdlStmCaseType: CASE
        HdlValueId: sp_cs_sel
        list: cases
            tuple
                HdlValueInt: 0
                HdlStmAssign
                    HdlValueId: csc0
                    HdlValueId: sp_csc
                    HdlValueInt: 1
            tuple
                HdlValueInt: 1
                HdlStmAssign
                    HdlValueId: csc1
                    HdlValueId: sp_csc
                    HdlValueInt: 1
            tuple
                HdlValueInt: 2
                HdlStmAssign
                    HdlValueId: csc2
                    HdlValueId: sp_csc
                    HdlValueInt: 1
            tuple
                HdlValueInt: 3
                HdlStmAssign
                    HdlValueId: csc3
                    HdlValueId: sp_csc
                    HdlValueInt: 1
            tuple
                HdlValueInt: 4
                HdlStmAssign
                    HdlValueId: csc4
                    HdlValueId: sp_csc
                    HdlValueInt: 1
            tuple
                HdlValueInt: 5
                HdlStmAssign
                    HdlValueId: csc5
                    HdlValueId: sp_csc
                    HdlValueInt: 1
            tuple
                HdlValueInt: 6
                HdlStmAssign
                    HdlValueId: csc6
                    HdlValueId: sp_csc
                    HdlValueInt: 1
            tuple
                HdlValueInt: 7
                HdlStmAssign
                    HdlValueId: csc7
                    HdlValueId: sp_csc
                    HdlValueInt: 1
    list: elifs

UPD HdlStmCase@@cs_sel to cs_sel
    UPD HdlValueId@@cs_sel to cs0
    MOV HdlValueId@@cs_sel to cs_sel
    HdlValueId: cs_sel
    UPD list@@cases to elifs
    MOV list@@cases to cs_sel
    list: cases
        tuple
            HdlValueInt: 0
            HdlStmAssign
                HdlValueId: tms0
                HdlValueId: tms
                HdlValueInt: 1
        tuple
            HdlValueInt: 1
            HdlStmAssign
                HdlValueId: tms1
                HdlValueId: tms
                HdlValueInt: 1
        tuple
            HdlValueInt: 2
            HdlStmAssign
                HdlValueId: tms2
                HdlValueId: tms
                HdlValueInt: 1
        tuple
            HdlValueInt: 3
            HdlStmAssign
                HdlValueId: tms3
                HdlValueId: tms
                HdlValueInt: 1
        tuple
            HdlValueInt: 4
            HdlStmAssign
                HdlValueId: tms4
                HdlValueId: tms
                HdlValueInt: 1
        tuple
            HdlValueInt: 5
            HdlStmAssign
                HdlValueId: tms5
                HdlValueId: tms
                HdlValueInt: 1
        tuple
            HdlValueInt: 6
            HdlStmAssign
                HdlValueId: tms6
                HdlValueId: tms
                HdlValueInt: 1
        tuple
            HdlValueInt: 7
            HdlStmAssign
                HdlValueId: tms7
                HdlValueId: tms
                HdlValueInt: 1
    DEL HdlValueInt@@0 from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@1 from 
    DEL HdlValueInt@@2 from 
    DEL HdlValueInt@@3 from 
    DEL HdlValueInt@@4 from 
    DEL HdlValueInt@@5 from 
    DEL HdlValueInt@@6 from 
    DEL HdlValueInt@@7 from 
    DEL tuple@@ from cases
    DEL HdlStmCaseType@@CASE from cs_sel

UPD HdlStmAssign@@ to if_true

MOV HdlStmAssign@@ to 
HdlStmAssign
    HdlValueId: tms0
    HdlValueId: tms
    HdlValueInt: 1

UPD HdlStmAssign@@ to if_false

MOV HdlStmAssign@@ to 
HdlStmAssign
    HdlValueId: tms7
    HdlValueId: tms
    HdlValueInt: 1

UPD HdlStmIf@@ to 
    INS HdlOp@@INDEX to 
    UPD HdlOp@@INDEX to INDEX
        INS list@@ops to INDEX
    INS HdlOp@@INDEX to 
    INS HdlOp@@INDEX to 
    UPD HdlOp@@INDEX to INDEX
        INS list@@ops to INDEX
        INS HdlValueId@@spec_req_cs to ops
    UPD HdlOp@@INDEX to INDEX
        INS list@@ops to INDEX
        INS HdlValueId@@spec_req_cs to ops

UPD HdlStmAssign@@ to if_true

MOV HdlStmAssign@@ to 
HdlStmAssign
    HdlValueId: csc0
    HdlValueId: sp_csc
    HdlValueInt: 1

UPD HdlStmCase@@sp_cs_sel to sp_cs_sel
    UPD list@@cases to elifs
    MOV list@@cases to sp_cs_sel
    list: cases
        tuple
            HdlValueInt: 0
            HdlStmAssign
                HdlValueId: csc0
                HdlValueId: sp_csc
                HdlValueInt: 1
        tuple
            HdlValueInt: 1
            HdlStmAssign
                HdlValueId: csc1
                HdlValueId: sp_csc
                HdlValueInt: 1
        tuple
            HdlValueInt: 2
            HdlStmAssign
                HdlValueId: csc2
                HdlValueId: sp_csc
                HdlValueInt: 1
        tuple
            HdlValueInt: 3
            HdlStmAssign
                HdlValueId: csc3
                HdlValueId: sp_csc
                HdlValueInt: 1
        tuple
            HdlValueInt: 4
            HdlStmAssign
                HdlValueId: csc4
                HdlValueId: sp_csc
                HdlValueInt: 1
        tuple
            HdlValueInt: 5
            HdlStmAssign
                HdlValueId: csc5
                HdlValueId: sp_csc
                HdlValueInt: 1
        tuple
            HdlValueInt: 6
            HdlStmAssign
                HdlValueId: csc6
                HdlValueId: sp_csc
                HdlValueInt: 1
        tuple
            HdlValueInt: 7
            HdlStmAssign
                HdlValueId: csc7
                HdlValueId: sp_csc
                HdlValueInt: 1
    UPD HdlValueId@@sp_cs_sel to spec_req_cs
    MOV HdlValueId@@sp_cs_sel to sp_cs_sel
    HdlValueId: sp_cs_sel
    MOV HdlValueInt@@0 to 
    HdlValueInt: 0
    MOV HdlValueInt@@2 to 
    HdlValueInt: 2
    MOV HdlValueInt@@4 to 
    HdlValueInt: 4
    DEL tuple@@ from cases
    DEL HdlValueInt@@1 from 
    DEL HdlValueInt@@3 from 
    DEL HdlValueInt@@5 from 
    DEL HdlValueInt@@6 from 
    DEL HdlValueInt@@7 from 
    DEL tuple@@ from cases
    DEL HdlStmCaseType@@CASE from sp_cs_sel

UPD HdlStmAssign@@ to if_false

MOV HdlStmAssign@@ to 
HdlStmAssign
    HdlValueId: csc7
    HdlValueId: sp_csc
    HdlValueInt: 1

UPD HdlStmAssign@@ to if_true

MOV HdlStmAssign@@ to 
HdlStmAssign
    HdlValueId: tms0
    HdlValueId: sp_tms
    HdlValueInt: 1

UPD HdlStmCase@@sp_cs_sel to sp_cs_sel
    UPD list@@cases to elifs
    MOV list@@cases to sp_cs_sel
    list: cases
        tuple
            HdlValueInt: 0
            HdlStmAssign
                HdlValueId: tms0
                HdlValueId: sp_tms
                HdlValueInt: 1
        tuple
            HdlValueInt: 1
            HdlStmAssign
                HdlValueId: tms1
                HdlValueId: sp_tms
                HdlValueInt: 1
        tuple
            HdlValueInt: 2
            HdlStmAssign
                HdlValueId: tms2
                HdlValueId: sp_tms
                HdlValueInt: 1
        tuple
            HdlValueInt: 3
            HdlStmAssign
                HdlValueId: tms3
                HdlValueId: sp_tms
                HdlValueInt: 1
        tuple
            HdlValueInt: 4
            HdlStmAssign
                HdlValueId: tms4
                HdlValueId: sp_tms
                HdlValueInt: 1
        tuple
            HdlValueInt: 5
            HdlStmAssign
                HdlValueId: tms5
                HdlValueId: sp_tms
                HdlValueInt: 1
        tuple
            HdlValueInt: 6
            HdlStmAssign
                HdlValueId: tms6
                HdlValueId: sp_tms
                HdlValueInt: 1
        tuple
            HdlValueInt: 7
            HdlStmAssign
                HdlValueId: tms7
                HdlValueId: sp_tms
                HdlValueInt: 1
    UPD HdlValueId@@sp_cs_sel to spec_req_cs
    MOV HdlValueId@@sp_cs_sel to sp_cs_sel
    HdlValueId: sp_cs_sel
    MOV HdlValueInt@@0 to 
    HdlValueInt: 0
    MOV HdlValueInt@@1 to 
    HdlValueInt: 1
    DEL tuple@@ from cases
    DEL HdlValueInt@@2 from 
    DEL HdlValueInt@@3 from 
    DEL HdlValueInt@@4 from 
    DEL HdlValueInt@@5 from 
    DEL HdlValueInt@@6 from 
    DEL HdlValueInt@@7 from 
    DEL tuple@@ from cases
    DEL HdlStmCaseType@@CASE from sp_cs_sel

UPD HdlStmAssign@@if_true to if_true
    INS HdlValueId@@tms0 to if_true

UPD HdlStmIf@@ to 
    INS HdlValueId@@cs2 to 
    INS HdlValueId@@cs3 to 
    INS HdlValueId@@cs4 to 
    INS HdlValueId@@cs5 to 
    INS HdlValueId@@cs6 to 

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@tms0 to cs1
    MOV HdlValueId@@tms0 to 
    HdlValueId: tms0

UPD HdlStmIf@@ to 
    INS HdlValueId@@cs2 to 
    INS HdlValueId@@cs3 to 
    INS HdlValueId@@cs4 to 
    INS HdlValueId@@cs5 to 
    INS HdlValueId@@cs6 to 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlOp@@OR to OR
            UPD HdlOp@@OR to OR
                MOV HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: spec_req_cs
                        HdlValueInt: 1
                MOV HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: spec_req_cs
                        HdlValueInt: 3
                DEL list@@ops from OR
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: spec_req_cs
                    HdlValueInt: 5
            DEL HdlOp@@OR from ops
            DEL list@@ops from OR
        DEL HdlOp@@OR from ops
        DEL HdlOp@@INDEX from ops
        HdlOp: INDEX
            list: ops
                HdlValueId: spec_req_cs
                HdlValueInt: 7
        DEL list@@ops from OR
    DEL HdlOp@@OR from 
    DEL HdlOp@@INDEX from 
    HdlOp: INDEX
        list: ops
            HdlValueId: sp_cs_sel
            HdlValueInt: 0

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlOp@@OR to OR
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: spec_req_cs
                    HdlValueInt: 6
            UPD HdlOp@@OR to OR
                MOV HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: spec_req_cs
                        HdlValueInt: 2
                MOV HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: spec_req_cs
                        HdlValueInt: 3
                DEL list@@ops from OR
            DEL HdlOp@@OR from ops
            DEL list@@ops from OR
        DEL HdlOp@@OR from ops
        DEL HdlOp@@INDEX from ops
        HdlOp: INDEX
            list: ops
                HdlValueId: spec_req_cs
                HdlValueInt: 7
        DEL list@@ops from OR
    DEL HdlOp@@OR from 
    DEL HdlOp@@INDEX from 
    HdlOp: INDEX
        list: ops
            HdlValueId: sp_cs_sel
            HdlValueInt: 1

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlOp@@OR to OR
            UPD HdlOp@@OR to OR
                MOV HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: spec_req_cs
                        HdlValueInt: 4
                MOV HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: spec_req_cs
                        HdlValueInt: 5
                DEL list@@ops from OR
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: spec_req_cs
                    HdlValueInt: 6
            DEL HdlOp@@OR from ops
            DEL list@@ops from OR
        DEL HdlOp@@OR from ops
        DEL HdlOp@@INDEX from ops
        HdlOp: INDEX
            list: ops
                HdlValueId: spec_req_cs
                HdlValueInt: 7
        DEL list@@ops from OR
    DEL HdlOp@@OR from 
    DEL HdlOp@@INDEX from 
    HdlOp: INDEX
        list: ops
            HdlValueId: sp_cs_sel
            HdlValueInt: 2

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@sp_tms to spec_req_cs
    MOV HdlValueId@@sp_tms to 
    HdlValueId: sp_tms

DEL HdlStmCase@@cs_sel from body

DEL HdlStmAssign@@ from objs

DEL HdlStmAssign@@ from objs

DEL HdlStmAssign@@ from objs

DEL HdlStmCase@@sp_cs_sel from body

DEL HdlStmCase@@sp_cs_sel from body


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_rf.v
+++ b/rtl/verilog/mc_rf.v
@@ -424,11 +442,11 @@ always @(posedge clk)
 			lmr_req4 | lmr_req5 | lmr_req6 | lmr_req7;
 
 assign spec_req_cs_t = !init_req ?	// Load Mode Register Requests
-					{lmr_req7, lmr_req6, lmr_req5, lmr_req4,
-					lmr_req3, lmr_req2, lmr_req1, lmr_req0 } :
-					// Initialize SDRAM Requests
-					{init_req7, init_req6, init_req5, init_req4,
-					init_req3, init_req2, init_req1, init_req0 };
+				{lmr_req7, lmr_req6, lmr_req5, lmr_req4,
+				lmr_req3, lmr_req2, lmr_req1, lmr_req0 } :
+				// Initialize SDRAM Requests
+				{init_req7, init_req6, init_req5, init_req4,
+				init_req3, init_req2, init_req1, init_req0 };
 
 // Ack distribution
 assign lmr_ack0 = spec_req_cs[0] & lmr_ack_fe;
ParseResult:
INS HdlStmIf@@body to 

UPD HdlStmIf@@body to body
    INS HdlStmBlock@@SEQ to body
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@INDEX to 
    UPD HdlOp@@INDEX to INDEX
        INS list@@ops to INDEX
    INS HdlOp@@INDEX to 
    UPD HdlOp@@INDEX to INDEX
        INS list@@ops to INDEX


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -512,10 +533,10 @@ always @(posedge clk)
 
 // Indicates when the row_same and bank_open lookups are done
 always @(posedge clk)
-	lookup_ready1 <= #1 cs_le;
+	lookup_ready1 <= #1 cs_le & wb_stb_i;
 
 always @(posedge clk)
-	lookup_ready2 <= #1 lookup_ready1;
+	lookup_ready2 <= #1 lookup_ready1 & wb_stb_i;
 
 // Keep Track if it is a SDRAM write cycle
 always @(posedge clk or posedge rst)

ParseResult:
MOV HdlStmProcess@@ to objs
HdlStmProcess
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk
    HdlStmAssign: body
        HdlValueId: err_d
        HdlValueId: err
        HdlValueInt: 1

UPD HdlStmAssign@@body to 

MOV HdlStmAssign@@body to 
HdlStmAssign: body
    HdlOp: AND
        list: ops
            HdlOp: OR
                list: ops
                    HdlValueId: mem_ack_d
                    HdlValueId: mem_ack_s
            HdlOp: OR
                list: ops
                    HdlValueId: wb_read_go
                    HdlValueId: wb_write_go
    HdlValueId: mem_ack
    HdlValueInt: 1

UPD HdlStmProcess@@ to 
    MOV list@@sensitivity to 
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk

UPD HdlStmAssign@@body to body
    UPD HdlValueId@@err_d to cs_le_d
    UPD HdlValueId@@err to cs_le

UPD HdlStmAssign@@body to body
    DEL HdlValueInt@@1 from body

DEL HdlStmProcess@@ from objs


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -636,7 +662,9 @@ always @(posedge clk or posedge rst)
 	else
 	if(tmr_ld_trfc)		timer <= #1 { 4'h0, tms_x[27:24]};
 	else
-	if(tmr_ld_txsr)		timer <= #1 8'd7;
+	if(tmr_ld_tavav)	timer <= #1 8'h3;
+	else
+	if(tmr_ld_txsr)		timer <= #1 8'h7;
 	else
 	if(!timer_is_zero & !mc_le)	timer <= #1 timer - 8'b1;
 

ParseResult:
INS HdlStmProcess@@ to objs
HdlStmProcess
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk
    HdlStmAssign: body
        HdlOp: AND
            list: ops
                HdlValueId: cs_le
                HdlValueId: wb_stb_i
        HdlValueId: lookup_ready1
        HdlValueInt: 1

INS HdlStmProcess@@ to objs

UPD HdlStmProcess@@ to 
    MOV list@@sensitivity to 
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk

INS HdlStmAssign@@body to 
HdlStmAssign: body
    HdlOp: AND
        list: ops
            HdlValueId: lookup_ready1
            HdlValueId: wb_stb_i
    HdlValueId: lookup_ready2
    HdlValueInt: 1

DEL HdlStmAssign@@body from 
HdlStmAssign: body
    HdlValueId: cs_le
    HdlValueId: lookup_ready1
    HdlValueInt: 1

DEL HdlStmProcess@@ from objs


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -657,23 +685,29 @@ always @(posedge clk)
 // Burst Counter
 always @(tms_x or page_size)
 	case(tms_x[2:0])		// synopsys full_case parallel_case
-	   3'h0: burst_val = 11'd1;
-	   3'h1: burst_val = 11'd2;
-	   3'h2: burst_val = 11'd4;
-	   3'h3: burst_val = 11'd8;
+	   3'h0: burst_val = 11'h1;
+	   3'h1: burst_val = 11'h2;
+	   3'h2: burst_val = 11'h4;
+	   3'h3: burst_val = 11'h8;
 	   3'h7: burst_val = page_size;
 	endcase
 
+assign bc_dec = wr_cycle ? mem_ack_d : dv;
+
 always @(posedge clk)
-	if(burst_cnt_ld_4)			burst_cnt <= #1 11'h4;
+	if(burst_cnt_ld_4)	burst_cnt <= #1 11'h4; // for SSRAM only
 	else
-	if(burst_cnt_ld)			burst_cnt <= #1 burst_val;
+	if(burst_cnt_ld)	burst_cnt <= #1 burst_val;
 	else
-	if(wr_cycle ? mem_ack_d : dv)		burst_cnt <= #1 burst_cnt - 11'h1;
+	if(bc_dec)		burst_cnt <= #1 burst_cnt - 11'h1;
 
 always @(posedge clk)
 	if(burst_cnt_ld)	burst_fp <= #1 (tms_x[2:0] == 3'h7);
 
+// Auto Precharge Enable
+always @(posedge clk)
+	if(burst_cnt_ld)	ap_en <= #1 (tms_x[2:0] == 3'h0) & !kro;
+
 assign burst_act = |burst_cnt & ( |tms_x[2:0] );
 
 always @(posedge clk)

ParseResult:
UPD HdlStmIf@@body to body
    MOV HdlOp@@AND to 
    HdlOp: AND
        list: ops
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: wb_read_go
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: wb_write_go

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@AND to AND
            UPD HdlOp@@AND to AND
                UPD HdlOp@@NEG_LOG to NEG_LOG
                    UPD HdlValueId@@mem_ack to mem_ack_r


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -682,10 +716,25 @@ always @(posedge clk)
 always @(posedge clk)
 	dv_r <= #1 dv;
 
+always @(posedge clk)	// Auto Precharge Holding Register
+	cmd_a10_r <= #1 cmd_a10;
+
 ////////////////////////////////////////////////////////////////////
 //
 // Main State Machine
 //
+reg		wb_write_go_r;
+
+always @(posedge clk)
+	wb_write_go_r <= #1 wb_write_go;
+
+
+always @(posedge clk or posedge rst)
+	if(rst)			wb_stb_first <= #1 1'b0;
+	else
+	if(mem_ack)		wb_stb_first <= #1 1'b0;
+	else
+	if(wb_first & wb_stb_i)	wb_stb_first <= #1 1'b1;
 
 always @(posedge clk or posedge rst)
 `ifdef MC_POR_DELAY

ParseResult:
UPD HdlStmAssign@@body to body
    INS HdlValueId@@no_wb_cycle to body
    INS HdlValueInt@@1 to body

UPD HdlStmIf@@body to body
    INS HdlValueId@@no_wb_cycle to 


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -695,23 +744,23 @@ always @(posedge clk or posedge rst)
 `endif
 	else		state <= #1 next_state;
 
-always @(state or cs_a or
-	twd_is_zero or wb_stb_i or
-	wb_first or wb_read_go or wb_write_go or wb_wait or mem_ack or wb_we_i or
-	ack_cnt_is_0 or wb_wait_r or cnt or wb_cycle or 
-	mem_type or kro or lookup_ready1 or lookup_ready2 or row_same or
+always @(state or cs_a or cs_le or cs_le_r or
+	twd_is_zero or wb_stb_i or wb_write_go_r or
+	wb_first or wb_read_go or wb_write_go or wb_wait or mem_ack_r or wb_we_i or
+	ack_cnt_is_0 or wb_wait_r or cnt or wb_cycle or wr_cycle or
+	mem_type or kro or lookup_ready2 or row_same or cmd_a10_r or
 	bank_open or single_write or
 	cmd_asserted or tmr_done or tmr2_done or ir_cnt_done or cmd_asserted2 or
 	burst_act or burst_act_rd or burst_fp or cke_ or cke_r or cke_o_del or
 	rfr_req or lmr_req or init_req or rfr_ack_r or susp_req_r or resume_req_r or
-	mc_br or bw8 or bw16 or dv_r or mc_adv_r or mc_ack
+	mc_br or bw8 or bw16 or dv_r or mc_adv_r or mc_ack or wb_stb_first or ap_en
 	)
    begin
 	next_state = state;	// Default keep current state
 	cnt_next = 1'b0;
 
 	cmd = `MC_CMD_NOP;
-	cmd_a10 = ~kro;
+	cmd_a10 = ap_en;
 	oe_d = 1'b0;
 	data_oe_d = 1'b0;
 	cke_d = 1'b1;

ParseResult:
MOV HdlIdDef@@twrp to objs
HdlIdDef: twrp
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 3
                    HdlValueInt: 0
    HdlDirection: INTERNAL

MOV HdlIdDef@@twd_is_zero to objs
HdlIdDef: twd_is_zero
    HdlDirection: INTERNAL

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@2 to 4

UPD HdlStmAssign@@ to 
    UPD HdlOp@@ADD to ADD
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: tms_x
                HdlOp: DOWNTO
                    list: ops
                        HdlValueInt: 16
                        HdlValueInt: 15


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -734,6 +783,7 @@ always @(state or cs_a or
 	tmr_ld_trdv = 1'b0;
 	tmr_ld_trdz = 1'b0;
 	tmr_ld_twr2 = 1'b0;
+	tmr_ld_tavav = 1'b0;
 
 	tmr2_ld_trdv = 1'b0;
 	tmr2_ld_trdz = 1'b0;

ParseResult:
INS HdlStmProcess@@ to objs
HdlStmProcess
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk
    HdlStmIf: body
        HdlValueId: burst_cnt_ld
        HdlStmAssign: if_true
            HdlOp: AND
                list: ops
                    HdlOp: EQ
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: tms_x
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 2
                                            HdlValueInt: 0
                            HdlValueInt: 0
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: kro
            HdlValueId: ap_en
            HdlValueInt: 1
        list: elifs


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -754,7 +804,7 @@ always @(state or cs_a or
 	ir_cnt_ld = 1'b0;
 
 	row_sel = 1'b0;
-	cs_le = 1'b0;
+	cs_le_d = 1'b0;
 	wr_clr = 1'b0;
 	wr_set = 1'b0;
 	wb_cycle_set = 1'b0;

ParseResult:
INS HdlStmProcess@@ to objs
HdlStmProcess
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk
    HdlStmAssign: body
        HdlValueId: cmd_a10
        HdlValueId: cmd_a10_r
        HdlValueInt: 1

UPD HdlStmIf@@body to body
    INS tuple@@ to elifs
    tuple
        HdlValueId: tmr_ld_tavav
        HdlStmAssign
            HdlValueInt: 3
            HdlValueId: timer
            HdlValueInt: 1


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -781,10 +831,14 @@ always @(state or cs_a or
 `endif
 	   IDLE:
 	      begin
-		cs_le = (wb_first & wb_stb_i) | lmr_req;
+		cs_le_d = wb_stb_first | lmr_req;
 		burst_cnt_ld = 1'b1;
 		wr_clr = 1'b1;
 
+		if(mem_type == `MC_MEM_TYPE_SCS)	tmr2_ld_tscsto = 1'b1;
+		if(mem_type == `MC_MEM_TYPE_SRAM)	tmr2_ld_tsrdv = 1'b1;
+
+
 		if(rfr_req)
 		   begin
 			rfr_ack = 1'b1;

ParseResult:
UPD HdlStmIf@@body to body
    MOV HdlOp@@TERNARY to 
    HdlOp: TERNARY
        list: ops
            HdlValueId: wr_cycle
            HdlValueId: mem_ack_d
            HdlValueId: dv

UPD HdlStmIf@@body to body
    INS tuple@@ to elifs
    tuple
        HdlValueId: tmr_ld_tavav
        HdlStmAssign
            HdlValueInt: 3
            HdlValueId: timer
            HdlValueInt: 1


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -793,30 +847,30 @@ always @(state or cs_a or
 		else
 		if(init_req)
 		   begin
-			cs_le = 1'b1;
+			cs_le_d = 1'b1;
 			next_state = INIT0;
 		   end
 		else
 		if(lmr_req & lookup_ready2)
 		   begin
 			lmr_ack = 1'b1;
-			cs_le = 1'b1;
+			cs_le_d = 1'b1;
 			next_state = LMR0;
 		   end
 		else
 		if(susp_req_r & !wb_cycle)
 		   begin
-			cs_le = 1'b1;
+			cs_le_d = 1'b1;
 			susp_sel_set = 1'b1;
 			next_state = SUSP1;
 		   end
 		else
-		if(cs_a & (wb_read_go | wb_write_go) & (lookup_ready1 | wb_cycle) )
+		if(cs_a & (wb_read_go | wb_write_go) & lookup_ready2)
 		  begin
 		   wb_cycle_set = 1'b1;
 		   case(mem_type)		// synopsys full_case parallel_case
 		     `MC_MEM_TYPE_SDRAM:		// SDRAM
-			if((lookup_ready2 | wb_cycle) & !wb_wait)
+			if((lookup_ready2) & !wb_wait)
 			   begin
 				if(wb_write_go | (wb_we_i & wb_stb_i))	wr_set = 1'b1;
 				if(kro & bank_open & row_same)	next_state = SD_RD_WR;

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlValueId@@bc_dec to 

UPD HdlStmIf@@body to body
    INS HdlValueId@@bc_dec to 

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlOp: NEG
                    list: ops
                        HdlValueId: kro
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 0


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -828,21 +882,20 @@ always @(state or cs_a or
 			begin				// Async Chip Select
 				if(!wb_wait)
 				   begin
-					cs_le = 1'b1;
+					cs_le_d = 1'b1;
 					if(wb_write_go)	
 					   begin
-								data_oe_d = 1'b1;
-								next_state = ACS_WR;
+							data_oe_d = 1'b1;
+							next_state = ACS_WR;
 					   end
-					else			next_state = ACS_RD;
+					else		next_state = ACS_RD;
 				   end
 			end
 		     `MC_MEM_TYPE_SCS:
 			begin				// Sync Chip Select
 				if(!wb_wait)
 				   begin
-					tmr2_ld_tscsto = 1'b1;
-					cs_le = 1'b1;
+					cs_le_d = 1'b1;
 					if(wb_write_go)	
 					   begin
 						cmd = `MC_CMD_XWR;

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk
        HdlOp: RISING
            list: ops
                HdlValueId: rst

UPD HdlStmIf@@body to body
    INS HdlValueId@@rst to body
    INS list@@elifs to body
    INS tuple@@ to elifs
    tuple
        HdlValueId: mem_ack
        HdlStmAssign
            HdlValueInt: 0
            HdlValueId: wb_stb_first
            HdlValueInt: 1
    INS tuple@@ to elifs

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlOp: NEG
                    list: ops
                        HdlValueId: kro
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 0


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -863,7 +916,7 @@ always @(state or cs_a or
 			begin		// SRAM
 				if(!wb_wait)
 				   begin
-					cs_le = 1'b1;
+					cs_le_d = 1'b1;
 					if(wb_write_go)	
 					   begin
 						data_oe_d = 1'b1;

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: cs_le
        HdlValueId: cs_le_r
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_write_go_r
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack_r
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: wr_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: cmd_a10_r
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
        HdlValueId: wb_stb_first
        HdlValueId: ap_en
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: ap_en
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr_ld_tavav
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 0

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlOp: NEG
                    list: ops
                        HdlValueId: kro
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 0


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -875,7 +928,6 @@ always @(state or cs_a or
 						cmd = `MC_CMD_XRD;
 						oe_d = 1'b1;
 						mc_adsc = 1'b1;
-						tmr2_ld_tsrdv = 1'b1;
 						next_state = SRAM_RD;
 					   end
 				   end

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: cs_le
        HdlValueId: cs_le_r
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_write_go_r
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack_r
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: wr_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: cmd_a10_r
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
        HdlValueId: wb_stb_first
        HdlValueId: ap_en
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: ap_en
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr_ld_tavav
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 0

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlOp: NEG
                    list: ops
                        HdlValueId: kro
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 0


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -885,19 +937,28 @@ always @(state or cs_a or
 		else
 		if(mc_br)
 		   begin
-			if(!cmd_asserted2)	next_state = BG0;
+			if(!cmd_asserted2)
+			   begin
+				next_state = BG0;
+				mc_c_oe_d = 1'b0;
+			   end
 		   end
 	      end
 
 	   IDLE_T:
 	      begin
-		cs_le = (wb_first & wb_stb_i) | lmr_req;
+		cmd_a10 = cmd_a10_r;	// Hold Auto Precharge 'til cycle finishes
+		if(tmr_done & wb_cycle & !wb_wait)	cs_le_d = 1'b1;
 		if(tmr_done)	next_state = IDLE;
 	      end
 
 	   IDLE_T2:
 	      begin
-		if(tmr2_done)	next_state = IDLE;
+		if(tmr2_done & (!wb_wait | !wb_cycle) )
+		   begin
+			cs_le_d = 1'b1;
+			if(cs_le_r)	next_state = IDLE;
+		   end
 	      end
 
 		/////////////////////////////////////////

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: cs_le
        HdlValueId: cs_le_r
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_write_go_r
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack_r
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: wr_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: cmd_a10_r
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
        HdlValueId: wb_stb_first
        HdlValueId: ap_en
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: ap_en
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr_ld_tavav
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlOp@@AND to ops
                HdlOp: AND
                    list: ops
                        HdlValueId: wb_first
                        HdlValueId: wb_stb_i
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@tmr_ld_tcl to tmr_ld_tavav
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@NEG to NEG_LOG
            MOV HdlOp@@NEG to ops
            HdlOp: NEG
                list: ops
                    HdlValueId: kro
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@AND to AND
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@wb_cycle to wr_cycle
                    UPD HdlOp@@AND to AND
                        UPD HdlOp@@AND to AND
                            UPD HdlOp@@NEG_LOG to NEG_LOG
                                UPD HdlValueId@@mem_ack to mem_ack_r
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueId@@IDLE_T from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlOp: OR
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: wb_first
                                HdlValueId: wb_stb_i
                        HdlValueId: lmr_req
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@IDLE_T2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@SD_RD_W2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

INS HdlStmIf@@ to body

INS HdlStmIf@@ to body

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlOp: NEG
                    list: ops
                        HdlValueId: kro
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 0


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -962,7 +1023,6 @@ always @(state or cs_a or
 		/////////////////////////////////////////
 		// SSRAM STATES ....
 		/////////////////////////////////////////
-
 	   SRAM_RD:
 	      begin
 		cmd = `MC_CMD_XRD;

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: cs_le
        HdlValueId: cs_le_r
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_write_go_r
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack_r
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: wr_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: cmd_a10_r
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
        HdlValueId: wb_stb_first
        HdlValueId: ap_en
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: ap_en
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr_ld_tavav
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlOp@@AND to ops
                HdlOp: AND
                    list: ops
                        HdlValueId: wb_first
                        HdlValueId: wb_stb_i
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@tmr_ld_tcl to tmr_ld_tavav
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@NEG to NEG_LOG
            MOV HdlOp@@NEG to ops
            HdlOp: NEG
                list: ops
                    HdlValueId: kro
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@AND to AND
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@wb_cycle to wr_cycle
                    UPD HdlOp@@AND to AND
                        UPD HdlOp@@AND to AND
                            UPD HdlOp@@NEG_LOG to NEG_LOG
                                UPD HdlValueId@@mem_ack to mem_ack_r
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueId@@IDLE_T from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlOp: OR
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: wb_first
                                HdlValueId: wb_stb_i
                        HdlValueId: lmr_req
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@IDLE_T2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@SD_RD_W2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: SD_RD_W2
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: OR
                        list: ops
                            HdlValueId: wb_write_go
                            HdlValueId: ack_cnt_is_0
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: AND
                                    list: ops
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: ap_en
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: kro
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: next_state
                                        HdlValueId: BT_W
                                list: elifs
                                    tuple
                                        HdlOp: AND
                                            list: ops
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlValueId: wb_wait
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlValueId: mem_ack_r
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: next_state
                                                HdlValueId: IDLE_T
                    list: elifs
    INS HdlValueId@@IDLE_T to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@IDLE_T2 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: cmd_a10_r
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@cmd_a10_r to ops
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 1
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mc_c_oe_d
                HdlValueId: mc_br
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            UPD HdlOp@@OR to OR
                INS list@@ops to OR
                INS HdlValueId@@ap_en to ops
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@single_write to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            UPD HdlOp@@OR to OR
                INS list@@ops to OR
                INS HdlValueId@@ap_en to ops
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@single_write to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlValueId@@wb_stb_first to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@OR to OR
            UPD HdlValueId@@lookup_ready1 to lookup_ready2
            MOV HdlValueId@@lookup_ready1 to ops
            HdlValueId: lookup_ready1
            DEL HdlValueId@@wb_cycle from ops
            DEL list@@ops from OR
        DEL HdlOp@@OR from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@OR to OR
            MOV HdlValueId@@lookup_ready2 to ops
            HdlValueId: lookup_ready2
            DEL HdlValueId@@wb_cycle from ops
            DEL list@@ops from OR
        DEL HdlOp@@OR from ops

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlOp: NEG
                    list: ops
                        HdlValueId: kro
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 0


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1014,7 +1074,7 @@ always @(state or cs_a or
 		else
 		if(!wb_wait)
 		   begin
-			cs_le = 1'b1;
+			cs_le_d = 1'b1;
 			next_state = SRAM_RD;
 		   end
 	      end

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: cs_le
        HdlValueId: cs_le_r
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_write_go_r
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack_r
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: wr_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: cmd_a10_r
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
        HdlValueId: wb_stb_first
        HdlValueId: ap_en
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: ap_en
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr_ld_tavav
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlOp@@AND to ops
                HdlOp: AND
                    list: ops
                        HdlValueId: wb_first
                        HdlValueId: wb_stb_i
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@tmr_ld_tcl to tmr_ld_tavav
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@NEG to NEG_LOG
            MOV HdlOp@@NEG to ops
            HdlOp: NEG
                list: ops
                    HdlValueId: kro
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@AND to AND
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@wb_cycle to wr_cycle
                    UPD HdlOp@@AND to AND
                        UPD HdlOp@@AND to AND
                            UPD HdlOp@@NEG_LOG to NEG_LOG
                                UPD HdlValueId@@mem_ack to mem_ack_r
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueId@@IDLE_T from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlOp: OR
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: wb_first
                                HdlValueId: wb_stb_i
                        HdlValueId: lmr_req
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@IDLE_T2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@SD_RD_W2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: SD_RD_W2
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: OR
                        list: ops
                            HdlValueId: wb_write_go
                            HdlValueId: ack_cnt_is_0
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: AND
                                    list: ops
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: ap_en
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: kro
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: next_state
                                        HdlValueId: BT_W
                                list: elifs
                                    tuple
                                        HdlOp: AND
                                            list: ops
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlValueId: wb_wait
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlValueId: mem_ack_r
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: next_state
                                                HdlValueId: IDLE_T
                    list: elifs
    INS HdlValueId@@IDLE_T to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@IDLE_T2 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: cmd_a10_r
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@cmd_a10_r to ops
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 1
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mc_c_oe_d
                HdlValueId: mc_br
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            UPD HdlOp@@OR to OR
                INS list@@ops to OR
                INS HdlValueId@@ap_en to ops
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@single_write to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            UPD HdlOp@@OR to OR
                INS list@@ops to OR
                INS HdlValueId@@ap_en to ops
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@single_write to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlValueId@@wb_stb_first to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr2_ld_tscsto
                HdlValueInt: 1
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@OR to OR
            UPD HdlValueId@@lookup_ready1 to lookup_ready2
            MOV HdlValueId@@lookup_ready1 to ops
            HdlValueId: lookup_ready1
            DEL HdlValueId@@wb_cycle from ops
            DEL list@@ops from OR
        DEL HdlOp@@OR from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlOp: NEG
                    list: ops
                        HdlValueId: kro
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 0


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1025,7 +1085,7 @@ always @(state or cs_a or
 		next_state = IDLE;
 	      end
 
-	   SRAM_WR: // 80
+	   SRAM_WR:
 	      begin
 		cmd = `MC_CMD_XWR;
 		mc_adsc = 1'b1;

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: cs_le
        HdlValueId: cs_le_r
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_write_go_r
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack_r
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: wr_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: cmd_a10_r
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
        HdlValueId: wb_stb_first
        HdlValueId: ap_en
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: ap_en
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr_ld_tavav
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlOp@@AND to ops
                HdlOp: AND
                    list: ops
                        HdlValueId: wb_first
                        HdlValueId: wb_stb_i
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@tmr_ld_tcl to tmr_ld_tavav
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@NEG to NEG_LOG
            MOV HdlOp@@NEG to ops
            HdlOp: NEG
                list: ops
                    HdlValueId: kro
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@AND to AND
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@wb_cycle to wr_cycle
                    UPD HdlOp@@AND to AND
                        UPD HdlOp@@AND to AND
                            UPD HdlOp@@NEG_LOG to NEG_LOG
                                UPD HdlValueId@@mem_ack to mem_ack_r
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueId@@IDLE_T from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlOp: OR
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: wb_first
                                HdlValueId: wb_stb_i
                        HdlValueId: lmr_req
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@IDLE_T2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@SD_RD_W2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: SD_RD_W2
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: OR
                        list: ops
                            HdlValueId: wb_write_go
                            HdlValueId: ack_cnt_is_0
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: AND
                                    list: ops
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: ap_en
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: kro
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: next_state
                                        HdlValueId: BT_W
                                list: elifs
                                    tuple
                                        HdlOp: AND
                                            list: ops
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlValueId: wb_wait
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlValueId: mem_ack_r
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: next_state
                                                HdlValueId: IDLE_T
                    list: elifs
    INS HdlValueId@@IDLE_T to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@IDLE_T2 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: cmd_a10_r
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@cmd_a10_r to ops
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 1
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mc_c_oe_d
                HdlValueId: mc_br
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            UPD HdlOp@@OR to OR
                INS list@@ops to OR
                INS HdlValueId@@ap_en to ops
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@single_write to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            UPD HdlOp@@OR to OR
                INS list@@ops to OR
                INS HdlValueId@@ap_en to ops
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@single_write to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlValueId@@wb_stb_first to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@OR to OR
            UPD HdlValueId@@lookup_ready1 to lookup_ready2
            MOV HdlValueId@@lookup_ready1 to ops
            HdlValueId: lookup_ready1
            DEL HdlValueId@@wb_cycle from ops
            DEL list@@ops from OR
        DEL HdlOp@@OR from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlOp: NEG
                    list: ops
                        HdlValueId: kro
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 0


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1042,12 +1102,12 @@ always @(state or cs_a or
 			else		
 			   begin
 				data_oe_d = 1'b1;
-				mem_ack_d = ~mem_ack;
+				mem_ack_d = ~mem_ack_r;
 			   end
 		   end
 	      end
 
-	   SRAM_WR0: // 81
+	   SRAM_WR0:
 	      begin
 		if(wb_wait)		next_state = SRAM_WR0;
 		else

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: cs_le
        HdlValueId: cs_le_r
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_write_go_r
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack_r
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: wr_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: cmd_a10_r
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
        HdlValueId: wb_stb_first
        HdlValueId: ap_en
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: ap_en
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr_ld_tavav
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlOp@@AND to ops
                HdlOp: AND
                    list: ops
                        HdlValueId: wb_first
                        HdlValueId: wb_stb_i
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@tmr_ld_tcl to tmr_ld_tavav
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@NEG to NEG_LOG
            MOV HdlOp@@NEG to ops
            HdlOp: NEG
                list: ops
                    HdlValueId: kro
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@AND to AND
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@wb_cycle to wr_cycle
                    UPD HdlOp@@AND to AND
                        UPD HdlOp@@AND to AND
                            UPD HdlOp@@NEG_LOG to NEG_LOG
                                UPD HdlValueId@@mem_ack to mem_ack_r
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueId@@IDLE_T from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlOp: OR
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: wb_first
                                HdlValueId: wb_stb_i
                        HdlValueId: lmr_req
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@IDLE_T2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@SD_RD_W2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: SD_RD_W2
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: OR
                        list: ops
                            HdlValueId: wb_write_go
                            HdlValueId: ack_cnt_is_0
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: AND
                                    list: ops
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: ap_en
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: kro
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: next_state
                                        HdlValueId: BT_W
                                list: elifs
                                    tuple
                                        HdlOp: AND
                                            list: ops
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlValueId: wb_wait
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlValueId: mem_ack_r
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: next_state
                                                HdlValueId: IDLE_T
                    list: elifs
    INS HdlValueId@@IDLE_T to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@IDLE_T2 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: cmd_a10_r
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@cmd_a10_r to ops
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 1
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mc_c_oe_d
                HdlValueId: mc_br
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            UPD HdlOp@@OR to OR
                INS list@@ops to OR
                INS HdlValueId@@ap_en to ops
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@single_write to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            UPD HdlOp@@OR to OR
                INS list@@ops to OR
                INS HdlValueId@@ap_en to ops
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@single_write to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlValueId@@wb_stb_first to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr2_ld_tsrdv
                HdlValueInt: 1

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@OR to OR
            UPD HdlValueId@@lookup_ready1 to lookup_ready2
            MOV HdlValueId@@lookup_ready1 to ops
            HdlValueId: lookup_ready1
            DEL HdlValueId@@wb_cycle from ops
            DEL list@@ops from OR
        DEL HdlOp@@OR from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlOp: NEG
                    list: ops
                        HdlValueId: kro
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 0


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1059,12 +1119,8 @@ always @(state or cs_a or
 		else		
 		   begin
 			data_oe_d = 1'b1;
-			//mem_ack_d = ~mem_ack;
 			next_state = SRAM_WR;
 		   end
-
-		//data_oe_d = 1'b1;
-		//if(!wb_wait)	next_state = SRAM_WR;
 	      end
 
 		/////////////////////////////////////////

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: cs_le
        HdlValueId: cs_le_r
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_write_go_r
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack_r
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: wr_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: cmd_a10_r
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
        HdlValueId: wb_stb_first
        HdlValueId: ap_en
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: ap_en
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr_ld_tavav
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlOp@@AND to ops
                HdlOp: AND
                    list: ops
                        HdlValueId: wb_first
                        HdlValueId: wb_stb_i
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@tmr_ld_tcl to tmr_ld_tavav
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@NEG to NEG_LOG
            MOV HdlOp@@NEG to ops
            HdlOp: NEG
                list: ops
                    HdlValueId: kro
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@AND to AND
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@wb_cycle to wr_cycle
                    UPD HdlOp@@AND to AND
                        UPD HdlOp@@AND to AND
                            UPD HdlOp@@NEG_LOG to NEG_LOG
                                UPD HdlValueId@@mem_ack to mem_ack_r
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueId@@IDLE_T from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlOp: OR
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: wb_first
                                HdlValueId: wb_stb_i
                        HdlValueId: lmr_req
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@IDLE_T2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@SD_RD_W2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: SD_RD_W2
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: OR
                        list: ops
                            HdlValueId: wb_write_go
                            HdlValueId: ack_cnt_is_0
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: AND
                                    list: ops
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: ap_en
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: kro
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: next_state
                                        HdlValueId: BT_W
                                list: elifs
                                    tuple
                                        HdlOp: AND
                                            list: ops
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlValueId: wb_wait
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlValueId: mem_ack_r
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: next_state
                                                HdlValueId: IDLE_T
                    list: elifs
    INS HdlValueId@@IDLE_T to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@IDLE_T2 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: cmd_a10_r
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@cmd_a10_r to ops
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 1
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mc_c_oe_d
                HdlValueId: mc_br
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            UPD HdlOp@@OR to OR
                INS list@@ops to OR
                INS HdlValueId@@ap_en to ops
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@single_write to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            UPD HdlOp@@OR to OR
                INS list@@ops to OR
                INS HdlValueId@@ap_en to ops
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@single_write to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlValueId@@wb_stb_first to ops

INS HdlStmIf@@ to body

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@OR to OR
            UPD HdlValueId@@lookup_ready1 to lookup_ready2
            MOV HdlValueId@@lookup_ready1 to ops
            HdlValueId: lookup_ready1
            DEL HdlValueId@@wb_cycle from ops
            DEL list@@ops from OR
        DEL HdlOp@@OR from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d

UPD HdlStmIf@@ to 
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: next_state
            HdlValueId: BG0

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlOp: NEG
                    list: ops
                        HdlValueId: kro
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 0


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1089,7 +1145,6 @@ always @(state or cs_a or
 			else
 			if(bw16)		next_state = ACS_RD_8_5;
 			else			next_state = ACS_RD2A;
-			//else			next_state = ACS_RD3;
 		   end
 	      end
 

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: cs_le
        HdlValueId: cs_le_r
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_write_go_r
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack_r
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: wr_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: cmd_a10_r
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
        HdlValueId: wb_stb_first
        HdlValueId: ap_en
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: ap_en
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr_ld_tavav
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlOp@@AND to ops
                HdlOp: AND
                    list: ops
                        HdlValueId: wb_first
                        HdlValueId: wb_stb_i
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@tmr_ld_tcl to tmr_ld_tavav
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@NEG to NEG_LOG
            MOV HdlOp@@NEG to ops
            HdlOp: NEG
                list: ops
                    HdlValueId: kro
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@AND to AND
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@wb_cycle to wr_cycle
                    UPD HdlOp@@AND to AND
                        UPD HdlOp@@AND to AND
                            UPD HdlOp@@NEG_LOG to NEG_LOG
                                UPD HdlValueId@@mem_ack to mem_ack_r
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueId@@IDLE_T from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlOp: OR
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: wb_first
                                HdlValueId: wb_stb_i
                        HdlValueId: lmr_req
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@IDLE_T2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@SD_RD_W2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: SD_RD_W2
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: OR
                        list: ops
                            HdlValueId: wb_write_go
                            HdlValueId: ack_cnt_is_0
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: AND
                                    list: ops
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: ap_en
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: kro
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: next_state
                                        HdlValueId: BT_W
                                list: elifs
                                    tuple
                                        HdlOp: AND
                                            list: ops
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlValueId: wb_wait
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlValueId: mem_ack_r
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: next_state
                                                HdlValueId: IDLE_T
                    list: elifs
    INS HdlValueId@@IDLE_T to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@IDLE_T2 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: cmd_a10_r
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@cmd_a10_r to ops
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 1
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mc_c_oe_d
                HdlValueId: mc_br
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            UPD HdlOp@@OR to OR
                INS list@@ops to OR
                INS HdlValueId@@ap_en to ops
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@single_write to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            UPD HdlOp@@OR to OR
                INS list@@ops to OR
                INS HdlValueId@@ap_en to ops
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@single_write to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlValueId@@wb_stb_first to ops

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlOp: NEG
                    list: ops
                        HdlValueId: kro
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 0


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1249,7 +1304,7 @@ always @(state or cs_a or
 		   end
 	      end
 
-	   ACTIVATE:	// 4
+	   ACTIVATE:
 	      begin
 		if(!wb_wait_r)
 		   begin

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: cs_le
        HdlValueId: cs_le_r
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_write_go_r
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack_r
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: wr_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: cmd_a10_r
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
        HdlValueId: wb_stb_first
        HdlValueId: ap_en
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: ap_en
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr_ld_tavav
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlOp@@AND to ops
                HdlOp: AND
                    list: ops
                        HdlValueId: wb_first
                        HdlValueId: wb_stb_i
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@tmr_ld_tcl to tmr_ld_tavav
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@NEG to NEG_LOG
            MOV HdlOp@@NEG to ops
            HdlOp: NEG
                list: ops
                    HdlValueId: kro
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@AND to AND
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@wb_cycle to wr_cycle
                    UPD HdlOp@@AND to AND
                        UPD HdlOp@@AND to AND
                            UPD HdlOp@@NEG_LOG to NEG_LOG
                                UPD HdlValueId@@mem_ack to mem_ack_r
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueId@@IDLE_T from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlOp: OR
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: wb_first
                                HdlValueId: wb_stb_i
                        HdlValueId: lmr_req
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@IDLE_T2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@SD_RD_W2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: SD_RD_W2
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: OR
                        list: ops
                            HdlValueId: wb_write_go
                            HdlValueId: ack_cnt_is_0
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: AND
                                    list: ops
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: ap_en
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: kro
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: next_state
                                        HdlValueId: BT_W
                                list: elifs
                                    tuple
                                        HdlOp: AND
                                            list: ops
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlValueId: wb_wait
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlValueId: mem_ack_r
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: next_state
                                                HdlValueId: IDLE_T
                    list: elifs
    INS HdlValueId@@IDLE_T to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@IDLE_T2 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: cmd_a10_r
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@cmd_a10_r to ops
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 1
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mc_c_oe_d
                HdlValueId: mc_br
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            UPD HdlOp@@OR to OR
                INS list@@ops to OR
                INS HdlValueId@@ap_en to ops
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@single_write to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            UPD HdlOp@@OR to OR
                INS list@@ops to OR
                INS HdlValueId@@ap_en to ops
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@single_write to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlValueId@@wb_stb_first to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@NEG to NEG
                UPD HdlValueId@@mem_ack to mem_ack_r

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlOp: NEG
                    list: ops
                        HdlValueId: kro
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 0


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1271,8 +1326,8 @@ always @(state or cs_a or
 		   begin
 			if(wb_write_go)
 			   begin
-				mem_ack_d = !mem_ack;
-				cmd_a10 = ~kro;
+				mem_ack_d = ~mem_ack_r;
+				cmd_a10 = ap_en | (single_write & !kro);
 				next_state = SD_WR;
 			   end
 			else

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: cs_le
        HdlValueId: cs_le_r
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_write_go_r
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack_r
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: wr_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: cmd_a10_r
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
        HdlValueId: wb_stb_first
        HdlValueId: ap_en
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: ap_en
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr_ld_tavav
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlOp@@AND to ops
                HdlOp: AND
                    list: ops
                        HdlValueId: wb_first
                        HdlValueId: wb_stb_i
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@tmr_ld_tcl to tmr_ld_tavav
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@NEG to NEG_LOG
            MOV HdlOp@@NEG to ops
            HdlOp: NEG
                list: ops
                    HdlValueId: kro
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@AND to AND
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@wb_cycle to wr_cycle
                    UPD HdlOp@@AND to AND
                        UPD HdlOp@@AND to AND
                            UPD HdlOp@@NEG_LOG to NEG_LOG
                                UPD HdlValueId@@mem_ack to mem_ack_r
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueId@@IDLE_T from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlOp: OR
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: wb_first
                                HdlValueId: wb_stb_i
                        HdlValueId: lmr_req
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@IDLE_T2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@SD_RD_W2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: SD_RD_W2
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: OR
                        list: ops
                            HdlValueId: wb_write_go
                            HdlValueId: ack_cnt_is_0
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: AND
                                    list: ops
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: ap_en
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: kro
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: next_state
                                        HdlValueId: BT_W
                                list: elifs
                                    tuple
                                        HdlOp: AND
                                            list: ops
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlValueId: wb_wait
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlValueId: mem_ack_r
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: next_state
                                                HdlValueId: IDLE_T
                    list: elifs
    INS HdlValueId@@IDLE_T to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@IDLE_T2 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: cmd_a10_r
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@cmd_a10_r to ops
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 1
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mc_c_oe_d
                HdlValueId: mc_br
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            UPD HdlOp@@OR to OR
                INS list@@ops to OR
                INS HdlValueId@@ap_en to ops
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@single_write to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            UPD HdlOp@@OR to OR
                INS list@@ops to OR
                INS HdlValueId@@ap_en to ops
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@single_write to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlValueId@@wb_stb_first to ops

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlOp: NEG
                    list: ops
                        HdlValueId: kro
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 0


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1280,15 +1335,15 @@ always @(state or cs_a or
 		   end
 	      end
 
-	   SD_RD_WR:	// 6
+	   SD_RD_WR:
 	      begin
 		if(wb_write_go | (wb_we_i & wb_stb_i))	wr_set = 1'b1;
 
 		if(wb_write_go & !wb_wait)
 		   begin	// Write
 			data_oe_d = 1'b1;
-			mem_ack_d = !mem_ack;
-			cmd_a10 = ~kro;
+			mem_ack_d = ~mem_ack_r;
+			cmd_a10 = ap_en | (single_write & !kro);
 			next_state = SD_WR;
 		   end
 		else

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: cs_le
        HdlValueId: cs_le_r
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_write_go_r
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack_r
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: wr_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: cmd_a10_r
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
        HdlValueId: wb_stb_first
        HdlValueId: ap_en
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: ap_en
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr_ld_tavav
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlOp@@AND to ops
                HdlOp: AND
                    list: ops
                        HdlValueId: wb_first
                        HdlValueId: wb_stb_i
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@tmr_ld_tcl to tmr_ld_tavav
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@NEG to NEG_LOG
            MOV HdlOp@@NEG to ops
            HdlOp: NEG
                list: ops
                    HdlValueId: kro
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@AND to AND
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@wb_cycle to wr_cycle
                    UPD HdlOp@@AND to AND
                        UPD HdlOp@@AND to AND
                            UPD HdlOp@@NEG_LOG to NEG_LOG
                                UPD HdlValueId@@mem_ack to mem_ack_r
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueId@@IDLE_T from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlOp: OR
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: wb_first
                                HdlValueId: wb_stb_i
                        HdlValueId: lmr_req
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@IDLE_T2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@SD_RD_W2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: SD_RD_W2
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: OR
                        list: ops
                            HdlValueId: wb_write_go
                            HdlValueId: ack_cnt_is_0
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: AND
                                    list: ops
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: ap_en
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: kro
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: next_state
                                        HdlValueId: BT_W
                                list: elifs
                                    tuple
                                        HdlOp: AND
                                            list: ops
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlValueId: wb_wait
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlValueId: mem_ack_r
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: next_state
                                                HdlValueId: IDLE_T
                    list: elifs
    INS HdlValueId@@IDLE_T to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@IDLE_T2 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: cmd_a10_r
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@cmd_a10_r to ops
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 1
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mc_c_oe_d
                HdlValueId: mc_br
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            UPD HdlOp@@OR to OR
                INS list@@ops to OR
                INS HdlValueId@@ap_en to ops
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@single_write to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            UPD HdlOp@@OR to OR
                INS list@@ops to OR
                INS HdlValueId@@ap_en to ops
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@single_write to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlValueId@@wb_stb_first to ops

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlOp: NEG
                    list: ops
                        HdlValueId: kro
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 0


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1302,32 +1357,35 @@ always @(state or cs_a or
 		   end
 	      end
 
-	   SD_WR:	// Write Command A
+	   SD_WR:	// Write Command
 	      begin	// Does the first single write
 		data_oe_d = 1'b1;
 		tmr_ld_twr = 1'b1;
 		cnt_next = ~cnt;
 		cmd = `MC_CMD_WR;
-		cmd_a10 = ~kro;
 
-		if(!cnt & wb_cycle & burst_act)	cke_d = !wb_wait;
+		cmd_a10 = ap_en | (single_write & !kro);
+
+		if(!cnt & wb_cycle & burst_act)	cke_d = ~wb_wait;
 		else				cke_d = cke_r;
 
 		if(cmd_asserted)
 		   begin
-			mem_ack_d = !mem_ack & wb_write_go & !wb_wait & wb_cycle & burst_act;
+			mem_ack_d = !mem_ack_r & wb_write_go & !wb_wait & wb_cycle & burst_act;
 
 			if(wb_cycle & !burst_act)	next_state = IDLE_T;
 			else
-			if(wb_cycle)			next_state = SD_WR_W;
+			if(wb_write_go)			next_state = SD_WR_W;
 			else
 			if(burst_act & !single_write)	next_state = BT;
+			else
+			if(!ap_en)			next_state = BT_W;
 			else				next_state = IDLE_T;
 		   end
 
 	      end
 
-	   SD_WR_W:	// B
+	   SD_WR_W:
 	      begin	// Does additional Writes or Times them
 		tmr_ld_twr = 1'b1;
 		cnt_next = ~cnt;

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: cs_le
        HdlValueId: cs_le_r
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_write_go_r
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack_r
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: wr_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: cmd_a10_r
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
        HdlValueId: wb_stb_first
        HdlValueId: ap_en
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: ap_en
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr_ld_tavav
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlOp@@AND to ops
                HdlOp: AND
                    list: ops
                        HdlValueId: wb_first
                        HdlValueId: wb_stb_i
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@tmr_ld_tcl to tmr_ld_tavav
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@NEG to NEG_LOG
            MOV HdlOp@@NEG to ops
            HdlOp: NEG
                list: ops
                    HdlValueId: kro
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@AND to AND
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@wb_cycle to wr_cycle
                    UPD HdlOp@@AND to AND
                        UPD HdlOp@@AND to AND
                            UPD HdlOp@@NEG_LOG to NEG_LOG
                                UPD HdlValueId@@mem_ack to mem_ack_r
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueId@@IDLE_T from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlOp: OR
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: wb_first
                                HdlValueId: wb_stb_i
                        HdlValueId: lmr_req
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@IDLE_T2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@SD_RD_W2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: SD_RD_W2
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: OR
                        list: ops
                            HdlValueId: wb_write_go
                            HdlValueId: ack_cnt_is_0
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: AND
                                    list: ops
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: ap_en
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: kro
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: next_state
                                        HdlValueId: BT_W
                                list: elifs
                                    tuple
                                        HdlOp: AND
                                            list: ops
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlValueId: wb_wait
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlValueId: mem_ack_r
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: next_state
                                                HdlValueId: IDLE_T
                    list: elifs
    INS HdlValueId@@IDLE_T to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@IDLE_T2 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: cmd_a10_r
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@cmd_a10_r to ops
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 1
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mc_c_oe_d
                HdlValueId: mc_br
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            UPD HdlOp@@OR to OR
                INS list@@ops to OR
                INS HdlValueId@@ap_en to ops
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@single_write to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            UPD HdlOp@@OR to OR
                INS list@@ops to OR
                INS HdlValueId@@ap_en to ops
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@single_write to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlValueId@@wb_stb_first to ops

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlOp: NEG
                    list: ops
                        HdlValueId: kro
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 0


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1335,46 +1393,48 @@ always @(state or cs_a or
 		if(single_write & wb_cycle)
 		   begin
 			cmd = `MC_CMD_WR;
-			if(burst_act)	cmd_a10 = 1'b0;
-			else		cmd_a10 = ~kro;
 		   end
+		cmd_a10 = ap_en | (single_write & !kro);
 
 		data_oe_d = 1'b1;
-		mem_ack_d = !mem_ack & wb_write_go & !wb_wait & wb_cycle & burst_act;
+		mem_ack_d = !mem_ack_r & wb_write_go & !wb_wait & wr_cycle & burst_act;
 
 		if(!cnt)	cke_d = ~wb_wait;
 		else		cke_d = cke_r;
-	
-		if(cke_r)
+
+		if( (single_write & cke_r) | (!single_write & !cnt & !wb_wait) | (!single_write & cnt & cke_r) )
 		   begin
 			if(single_write	& !wb_cycle)		next_state = IDLE_T;
 			else
-			if(burst_act & !single_write & !wb_write_go )
-								next_state = BT;
+			if(burst_act & !single_write & !wb_write_go_r)
+			   begin
+				cmd = `MC_CMD_BT;
+				next_state = BT;
+			   end
+			else
+			if(!burst_act & !ap_en)			next_state = BT_W;
 			else
 			if(!burst_act)				next_state = IDLE_T;
 			else
-			if(!wb_write_go & wb_read_go)		next_state = IDLE_T;	// Added for WMR
+			if(!wb_write_go_r & wb_read_go)		next_state = IDLE_T;	// Added for WMR
 		   end
 	      end
 
-	   SD_RD:	// Read Command 7
+	   SD_RD:	// Read Command
 	      begin
 		cmd = `MC_CMD_RD;
-		if(burst_fp)	cmd_a10 = 1'b0;
-		else		cmd_a10 = ~kro;
+		cmd_a10 = ap_en;
 		tmr_ld_tcl = 1'b1;
 		if(cmd_asserted)			next_state = SD_RD_W;
 	      end
 
-	   SD_RD_W: // 8
+	   SD_RD_W:
 	      begin
 		if(tmr_done)				next_state = SD_RD_LOOP;
 	      end
 
-	   SD_RD_LOOP: // 9
+	   SD_RD_LOOP:
 	      begin
-
 		cnt_next = ~cnt;
 
 		if(cnt & !(burst_act & !wb_cycle) & burst_act )		cke_rd = !wb_wait;

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: cs_le
        HdlValueId: cs_le_r
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_write_go_r
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack_r
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: wr_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: cmd_a10_r
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
        HdlValueId: wb_stb_first
        HdlValueId: ap_en
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: ap_en
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr_ld_tavav
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlOp@@AND to ops
                HdlOp: AND
                    list: ops
                        HdlValueId: wb_first
                        HdlValueId: wb_stb_i
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@tmr_ld_tcl to tmr_ld_tavav
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@NEG to NEG_LOG
            MOV HdlOp@@NEG to ops
            HdlOp: NEG
                list: ops
                    HdlValueId: kro
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@AND to AND
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@wb_cycle to wr_cycle
                    UPD HdlOp@@AND to AND
                        UPD HdlOp@@AND to AND
                            UPD HdlOp@@NEG_LOG to NEG_LOG
                                UPD HdlValueId@@mem_ack to mem_ack_r
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueId@@IDLE_T from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlOp: OR
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: wb_first
                                HdlValueId: wb_stb_i
                        HdlValueId: lmr_req
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@IDLE_T2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@SD_RD_W2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: SD_RD_W2
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: OR
                        list: ops
                            HdlValueId: wb_write_go
                            HdlValueId: ack_cnt_is_0
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: AND
                                    list: ops
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: ap_en
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: kro
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: next_state
                                        HdlValueId: BT_W
                                list: elifs
                                    tuple
                                        HdlOp: AND
                                            list: ops
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlValueId: wb_wait
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlValueId: mem_ack_r
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: next_state
                                                HdlValueId: IDLE_T
                    list: elifs
    INS HdlValueId@@IDLE_T to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@IDLE_T2 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: cmd_a10_r
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@cmd_a10_r to ops
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 1
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mc_c_oe_d
                HdlValueId: mc_br
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            UPD HdlOp@@OR to OR
                INS list@@ops to OR
                INS HdlValueId@@ap_en to ops
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@single_write to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            UPD HdlOp@@OR to OR
                INS list@@ops to OR
                INS HdlValueId@@ap_en to ops
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@single_write to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlValueId@@wb_stb_first to ops

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlOp: NEG
                    list: ops
                        HdlValueId: kro
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 0


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1389,39 +1449,46 @@ always @(state or cs_a or
 		if(!burst_act)				next_state = SD_RD_W2;
 	      end
 
-	   SD_RD_W2: //32
+	   SD_RD_W2:
 	      begin
-		if(wb_cycle & wb_write_go)		next_state = IDLE;
-		else
-		if(!wb_cycle | ack_cnt_is_0)		next_state = IDLE;
+		if(wb_write_go | ack_cnt_is_0)	
+		   begin
+			if(!ap_en & !kro)		next_state = BT_W;
+			else
+			if(!wb_wait & !mem_ack_r)	next_state = IDLE_T;
+		   end
 	      end
 
-	   BT:		// Burst Terminate  C
+	   BT:
 	      begin
 		cmd = `MC_CMD_BT;
 		tmr_ld_trp = 1'b1;
 		if(cmd_asserted)			next_state = BT_W;
 	      end
 
-	   BT_W:	// D
+	   BT_W:
 	      begin
-		if(kro)					next_state = IDLE;
-		else
-		if(tmr_done & (!burst_fp | kro))	next_state = IDLE;
+		cmd_a10 = cmd_a10_r;	// Hold Auto Precharge 'til cycle finishes
+
+		if(kro & tmr_done)
+		   begin
+			if(kro & !wb_wait & (wb_read_go | wb_write_go) )	cs_le_d = 1'b1;
+			next_state = IDLE;
+		   end
 		else
-		if(tmr_done & burst_fp & !kro)	// Must PRECHARGE Full Page Bursts
+		if(!kro & tmr_done)		// Must do a PRECHARGE after Burst Terminate
 		   begin
 			bank_clr = 1'b1;
 			cmd = `MC_CMD_PC;
 			cmd_a10 = `MC_SINGLE_BANK;
 			tmr_ld_trp = 1'b1;
-			if(cmd_asserted)		next_state = IDLE_T;
+			if(cmd_asserted)	next_state = IDLE_T;
 		   end
 	      end
 
 	   REFR:	// Refresh Cycle
 	      begin
-		cs_le = 1'b1;
+		cs_le_d = 1'b1;
 		cmd = `MC_CMD_ARFR;
 		tmr_ld_trfc = 1'b1;
 		rfr_ack = 1'b1;

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: cs_le
        HdlValueId: cs_le_r
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_write_go_r
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack_r
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: wr_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: cmd_a10_r
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
        HdlValueId: wb_stb_first
        HdlValueId: ap_en
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: ap_en
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr_ld_tavav
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlOp@@AND to ops
                HdlOp: AND
                    list: ops
                        HdlValueId: wb_first
                        HdlValueId: wb_stb_i
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@tmr_ld_tcl to tmr_ld_tavav
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@NEG to NEG_LOG
            MOV HdlOp@@NEG to ops
            HdlOp: NEG
                list: ops
                    HdlValueId: kro
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@AND to AND
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@wb_cycle to wr_cycle
                    UPD HdlOp@@AND to AND
                        UPD HdlOp@@AND to AND
                            UPD HdlOp@@NEG_LOG to NEG_LOG
                                UPD HdlValueId@@mem_ack to mem_ack_r
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueId@@IDLE_T from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlOp: OR
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: wb_first
                                HdlValueId: wb_stb_i
                        HdlValueId: lmr_req
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@IDLE_T2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@SD_RD_W2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: SD_RD_W2
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: OR
                        list: ops
                            HdlValueId: wb_write_go
                            HdlValueId: ack_cnt_is_0
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: AND
                                    list: ops
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: ap_en
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: kro
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: next_state
                                        HdlValueId: BT_W
                                list: elifs
                                    tuple
                                        HdlOp: AND
                                            list: ops
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlValueId: wb_wait
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlValueId: mem_ack_r
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: next_state
                                                HdlValueId: IDLE_T
                    list: elifs
    INS HdlValueId@@IDLE_T to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@IDLE_T2 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: cmd_a10_r
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@cmd_a10_r to ops
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 1
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mc_c_oe_d
                HdlValueId: mc_br
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            UPD HdlOp@@OR to OR
                INS list@@ops to OR
                INS HdlValueId@@ap_en to ops
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@single_write to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            UPD HdlOp@@OR to OR
                INS list@@ops to OR
                INS HdlValueId@@ap_en to ops
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@single_write to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlValueId@@wb_stb_first to ops

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlOp: NEG
                    list: ops
                        HdlValueId: kro
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 0


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1459,7 +1526,7 @@ always @(state or cs_a or
 
 	   INIT0:
 	      begin
-		cs_le = 1'b1;
+		cs_le_d = 1'b1;
 		next_state = INIT;
 	      end
 

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: cs_le
        HdlValueId: cs_le_r
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_write_go_r
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack_r
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: wr_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: cmd_a10_r
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
        HdlValueId: wb_stb_first
        HdlValueId: ap_en
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: ap_en
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr_ld_tavav
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlOp@@AND to ops
                HdlOp: AND
                    list: ops
                        HdlValueId: wb_first
                        HdlValueId: wb_stb_i
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@tmr_ld_tcl to tmr_ld_tavav
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@NEG to NEG_LOG
            MOV HdlOp@@NEG to ops
            HdlOp: NEG
                list: ops
                    HdlValueId: kro
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@AND to AND
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@wb_cycle to wr_cycle
                    UPD HdlOp@@AND to AND
                        UPD HdlOp@@AND to AND
                            UPD HdlOp@@NEG_LOG to NEG_LOG
                                UPD HdlValueId@@mem_ack to mem_ack_r
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueId@@IDLE_T from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlOp: OR
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: wb_first
                                HdlValueId: wb_stb_i
                        HdlValueId: lmr_req
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@IDLE_T2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@SD_RD_W2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: SD_RD_W2
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: OR
                        list: ops
                            HdlValueId: wb_write_go
                            HdlValueId: ack_cnt_is_0
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: AND
                                    list: ops
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: ap_en
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: kro
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: next_state
                                        HdlValueId: BT_W
                                list: elifs
                                    tuple
                                        HdlOp: AND
                                            list: ops
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlValueId: wb_wait
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlValueId: mem_ack_r
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: next_state
                                                HdlValueId: IDLE_T
                    list: elifs
    INS HdlValueId@@IDLE_T to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@IDLE_T2 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: cmd_a10_r
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@cmd_a10_r to ops
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 1
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mc_c_oe_d
                HdlValueId: mc_br
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            UPD HdlOp@@OR to OR
                INS list@@ops to OR
                INS HdlValueId@@ap_en to ops
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@single_write to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            UPD HdlOp@@OR to OR
                INS list@@ops to OR
                INS HdlValueId@@ap_en to ops
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@single_write to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlValueId@@wb_stb_first to ops

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlOp: NEG
                    list: ops
                        HdlValueId: kro
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 0


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1492,7 +1559,7 @@ always @(state or cs_a or
 		   end
 	      end
 
-	   INIT_REFR1_W:	// 21
+	   INIT_REFR1_W:
 	      begin
 		init_ack = 1'b1;
 		if(tmr_done)

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: cs_le
        HdlValueId: cs_le_r
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_write_go_r
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack_r
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: wr_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: cmd_a10_r
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
        HdlValueId: wb_stb_first
        HdlValueId: ap_en
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: ap_en
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr_ld_tavav
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlOp@@AND to ops
                HdlOp: AND
                    list: ops
                        HdlValueId: wb_first
                        HdlValueId: wb_stb_i
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@tmr_ld_tcl to tmr_ld_tavav
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@NEG to NEG_LOG
            MOV HdlOp@@NEG to ops
            HdlOp: NEG
                list: ops
                    HdlValueId: kro
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@AND to AND
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@wb_cycle to wr_cycle
                    UPD HdlOp@@AND to AND
                        UPD HdlOp@@AND to AND
                            UPD HdlOp@@NEG_LOG to NEG_LOG
                                UPD HdlValueId@@mem_ack to mem_ack_r
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueId@@IDLE_T from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlOp: OR
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: wb_first
                                HdlValueId: wb_stb_i
                        HdlValueId: lmr_req
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@IDLE_T2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@SD_RD_W2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: SD_RD_W2
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: OR
                        list: ops
                            HdlValueId: wb_write_go
                            HdlValueId: ack_cnt_is_0
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: AND
                                    list: ops
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: ap_en
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: kro
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: next_state
                                        HdlValueId: BT_W
                                list: elifs
                                    tuple
                                        HdlOp: AND
                                            list: ops
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlValueId: wb_wait
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlValueId: mem_ack_r
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: next_state
                                                HdlValueId: IDLE_T
                    list: elifs
    INS HdlValueId@@IDLE_T to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@IDLE_T2 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: cmd_a10_r
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@cmd_a10_r to ops
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 1
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mc_c_oe_d
                HdlValueId: mc_br
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            UPD HdlOp@@OR to OR
                INS list@@ops to OR
                INS HdlValueId@@ap_en to ops
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@single_write to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            UPD HdlOp@@OR to OR
                INS list@@ops to OR
                INS HdlValueId@@ap_en to ops
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@single_write to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlValueId@@wb_stb_first to ops

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    UPD HdlOp@@ASSIGN to AND
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: cke_d
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: wb_wait
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@cke_d to tmr_done
        MOV HdlValueId@@cke_d to ops
        HdlValueId: cke_d

UPD HdlStmIf@@ to 
    UPD HdlValueId@@wb_cycle to wb_write_go

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@AND to AND
                UPD HdlOp@@AND to AND
                    UPD HdlOp@@AND to AND
                        UPD HdlOp@@AND to AND
                            UPD HdlOp@@NEG_LOG to NEG_LOG
                                UPD HdlValueId@@mem_ack to mem_ack_r

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlOp: NEG
                    list: ops
                        HdlValueId: kro
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 0


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1523,18 +1590,19 @@ always @(state or cs_a or
 	   BG1:
 	      begin	// Bus Grant
 		mc_bg = 1'b1;
-		cs_le = 1'b1;
+		cs_le_d = 1'b1;
 		mc_c_oe_d = 1'b0;
 		next_state = BG2;
 	      end
 	   BG2:
 	      begin	// Bus Grant
+		cs_le_d = 1'b1;
 		mc_bg =	!wb_read_go & !wb_write_go &
 			!rfr_req & !init_req & !lmr_req &
 			!susp_req_r;
-		tmr_ld_tcl = 1'b1;
+		tmr_ld_tavav = 1'b1;
+		mc_c_oe_d = mc_br;
 		if(!mc_br)	next_state = IDLE_T;
-		else		mc_c_oe_d = 1'b0;
 	      end
 
 		/////////////////////////////////////////
ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: cs_le
        HdlValueId: cs_le_r
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_write_go_r
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack_r
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: wr_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: cmd_a10_r
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
        HdlValueId: wb_stb_first
        HdlValueId: ap_en
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: ap_en
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr_ld_tavav
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlOp@@AND to ops
                HdlOp: AND
                    list: ops
                        HdlValueId: wb_first
                        HdlValueId: wb_stb_i
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@cs_le to cs_le_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@tmr_ld_tcl to tmr_ld_tavav
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@NEG to NEG_LOG
            MOV HdlOp@@NEG to ops
            HdlOp: NEG
                list: ops
                    HdlValueId: kro
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@AND to AND
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@wb_cycle to wr_cycle
                    UPD HdlOp@@AND to AND
                        UPD HdlOp@@AND to AND
                            UPD HdlOp@@NEG_LOG to NEG_LOG
                                UPD HdlValueId@@mem_ack to mem_ack_r
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueId@@IDLE_T from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlOp: OR
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: wb_first
                                HdlValueId: wb_stb_i
                        HdlValueId: lmr_req
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@IDLE_T2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@SD_RD_W2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: SD_RD_W2
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: OR
                        list: ops
                            HdlValueId: wb_write_go
                            HdlValueId: ack_cnt_is_0
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: AND
                                    list: ops
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: ap_en
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: kro
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: next_state
                                        HdlValueId: BT_W
                                list: elifs
                                    tuple
                                        HdlOp: AND
                                            list: ops
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlValueId: wb_wait
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlValueId: mem_ack_r
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: next_state
                                                HdlValueId: IDLE_T
                    list: elifs
    INS HdlValueId@@IDLE_T to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@IDLE_T2 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlValueId: cmd_a10_r
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@cmd_a10_r to ops
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le_d
                HdlValueInt: 1
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mc_c_oe_d
                HdlValueId: mc_br
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            UPD HdlOp@@OR to OR
                INS list@@ops to OR
                INS HdlValueId@@ap_en to ops
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@single_write to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            UPD HdlOp@@OR to OR
                INS list@@ops to OR
                INS HdlValueId@@ap_en to ops
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@single_write to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlValueId@@wb_stb_first to ops

UPD HdlStmIf@@ to 
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: cmd_a10
            HdlOp: NEG
                list: ops
                    HdlValueId: kro
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@NEG to NEG
            UPD HdlValueId@@kro to ap_en
            MOV HdlValueId@@kro to ops
            HdlValueId: kro
            DEL list@@ops from NEG
        DEL HdlOp@@NEG from ops
    DEL HdlValueId@@burst_fp from 
    DEL HdlOp@@ASSIGN from 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: cmd_a10
            HdlValueInt: 0
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    MOV HdlValueId@@cke_r to 
    HdlValueId: cke_r

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            UPD HdlOp@@OR to OR
                INS list@@ops to OR
                INS HdlValueId@@ap_en to ops
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@single_write to ops

UPD HdlStmIf@@ to 
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: next_state
            HdlValueId: BT
    UPD HdlOp@@AND to AND
        UPD HdlOp@@NEG_LOG to NEG_LOG
            UPD HdlValueId@@wb_write_go to wb_write_go_r
    UPD HdlOp@@AND to AND
        UPD HdlOp@@NEG_LOG to NEG_LOG
            UPD HdlValueId@@wb_write_go to wb_write_go_r

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_a10
                HdlOp: NEG
                    list: ops
                        HdlValueId: kro
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 0

DEL HdlStmIf@@ from body


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_dp.v
+++ b/rtl/verilog/mc_dp.v
@@ -143,17 +150,13 @@ assign pen       = csc[11];
 // WB READ Data Path
 //
 
-always @(posedge clk)
-	if(mem_type == `MC_MEM_TYPE_SDRAM)	wb_data_o <= #1 rd_fifo_out[31:0];
-	else
-	if(mem_type == `MC_MEM_TYPE_SRAM)	wb_data_o <= #1 rd_fifo_out[31:0];
-	else					wb_data_o <= #1 mc_data_d;
-
-always @(posedge clk)
-	mc_data_del <= #1 {mc_dp_i, mc_data_i};
+always @(mem_type or rd_fifo_out or mc_data_d)
+	if( (mem_type == `MC_MEM_TYPE_SDRAM) |
+	    (mem_type == `MC_MEM_TYPE_SRAM)  )	wb_data_o = rd_fifo_out[31:0];
+	else					wb_data_o = mc_data_d;
 
-assign rd_fifo_clr = !rst & wb_cyc_i;
-assign re = mem_wb_ack_o & wb_read_go;
+assign rd_fifo_clr = !(rst | !wb_cyc_i | (wb_we_i & wb_stb_i) );
+assign re = wb_ack_o & wb_read_go;
 
 mc_rd_fifo u0(
 	.clk(	clk			),

ParseResult:
INS HdlStmAssign@@ to objs

UPD HdlStmProcess@@ to 
    UPD HdlOp@@RISING to RISING
        UPD HdlValueId@@clk to mem_type
        MOV HdlValueId@@clk to ops
        HdlValueId: clk
        DEL list@@ops from RISING
    DEL HdlOp@@RISING from sensitivity

UPD HdlStmProcess@@ to 
    INS HdlValueId@@rd_fifo_out to sensitivity
    INS HdlValueId@@mc_data_d to sensitivity

UPD HdlStmIf@@body to body
    INS HdlOp@@OR to body
    INS HdlOp@@ASSIGN to body
    INS list@@elifs to body
    INS HdlOp@@ASSIGN to body
    UPD HdlOp@@OR to OR
        INS list@@ops to OR
    UPD HdlOp@@ASSIGN to ASSIGN
        INS list@@ops to ASSIGN
        INS HdlValueId@@wb_data_o to ops
    UPD HdlOp@@ASSIGN to ASSIGN
        INS list@@ops to ASSIGN

UPD HdlStmIf@@body to body
    MOV HdlOp@@EQ to body
    HdlOp: EQ
        list: ops
            HdlValueId: mem_type
            HdlValueInt: 0
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: mem_type
            HdlValueInt: 1
    DEL tuple@@ from elifs
    DEL list@@elifs from body

UPD HdlStmAssign@@if_true to if_true
    MOV HdlOp@@INDEX to if_true
    HdlOp: INDEX
        list: ops
            HdlValueId: rd_fifo_out
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    DEL HdlValueId@@wb_data_o from if_true
    DEL HdlValueInt@@1 from if_true

DEL HdlStmAssign@@if_true from body


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_dp.v
+++ b/rtl/verilog/mc_dp.v
@@ -170,7 +173,7 @@ mc_rd_fifo u0(
 //
 
 always @(posedge clk)
-	if(mem_wb_ack_o | (mem_type != `MC_MEM_TYPE_SDRAM) )
+	if(wb_ack_o | (mem_type != `MC_MEM_TYPE_SDRAM) )
 		mc_data_o <= #1 wb_data_i;
 
 ////////////////////////////////////////////////////////////////////

ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlValueId@@rd_fifo_clr to 
    HdlValueId: rd_fifo_clr
    MOV HdlOp@@AND to 
    HdlOp: AND
        list: ops
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: rst
            HdlValueId: wb_cyc_i
    UPD HdlOp@@AND to AND
        UPD HdlOp@@NEG_LOG to NEG_LOG
            UPD HdlValueId@@rst to wb_we_i
            MOV HdlValueId@@rst to ops
            HdlValueId: rst
            DEL list@@ops from NEG_LOG
        UPD HdlValueId@@wb_cyc_i to wb_stb_i
        DEL HdlOp@@NEG_LOG from ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@mem_wb_ack_o to wb_ack_o

DEL HdlStmAssign@@ from objs


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_dp.v
+++ b/rtl/verilog/mc_dp.v
@@ -179,21 +182,21 @@ always @(posedge clk)
 //
 
 always @(posedge clk)
-	if(pack_le0)				byte0 <= #1 mc_data_i[7:0];
+	if(pack_le0)				byte0 <= #1 mc_data_del[7:0];
 
 always @(posedge clk)
-	if(pack_le1 & (bus_width == `MC_BW_8))	byte1 <= #1 mc_data_i[7:0];
+	if(pack_le1 & (bus_width == `MC_BW_8))	byte1 <= #1 mc_data_del[7:0];
 	else
-	if(pack_le0 & (bus_width == `MC_BW_16))	byte1 <= #1 mc_data_i[15:8];
+	if(pack_le0 & (bus_width == `MC_BW_16))	byte1 <= #1 mc_data_del[15:8];
 
 always @(posedge clk)
-	if(pack_le2)				byte2 <= #1 mc_data_i[7:0];
+	if(pack_le2)				byte2 <= #1 mc_data_del[7:0];
 
-always @(bus_width or mc_data_i or byte0 or byte1 or byte2)
-	if(bus_width == `MC_BW_8)	mc_data_d = {mc_data_i[7:0], byte2, byte1, byte0};
+always @(bus_width or mc_data_del or byte0 or byte1 or byte2)
+	if(bus_width == `MC_BW_8)	mc_data_d = {mc_data_del[7:0], byte2, byte1, byte0};
 	else
-	if(bus_width == `MC_BW_16)	mc_data_d = {mc_data_i[15:0], byte1, byte0};
-	else				mc_data_d = mc_data_i;
+	if(bus_width == `MC_BW_16)	mc_data_d = {mc_data_del[15:0], byte1, byte0};
+	else				mc_data_d = mc_data_del[31:0];
 
 ////////////////////////////////////////////////////////////////////
 //

ParseResult:
UPD HdlStmIf@@body to body
    UPD HdlOp@@OR to OR
        UPD HdlValueId@@mem_wb_ack_o to wb_ack_o


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_dp.v
+++ b/rtl/verilog/mc_dp.v
@@ -201,7 +204,7 @@ always @(bus_width or mc_data_i or byte0 or byte1 or byte2)
 //
 
 always @(posedge clk)
-	if(mem_wb_ack_o | (mem_type != `MC_MEM_TYPE_SDRAM) )
+	if(wb_ack_o | (mem_type != `MC_MEM_TYPE_SDRAM) )
 		mc_dp_o <= #1	{ ^wb_data_i[31:24], ^wb_data_i[23:16],
 				    ^wb_data_i[15:08], ^wb_data_i[07:00] };
 

ParseResult:
UPD HdlStmAssign@@if_true to if_true
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@mc_data_i to mc_data_del


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_dp.v
+++ b/rtl/verilog/mc_dp.v
@@ -210,10 +213,7 @@ always @(posedge clk)
 // Parity Checking
 //
 
-assign par_err = par_err_r & mem_wb_ack_o;
-
-always @(posedge clk)
-	par_err_r <= #1 pen & (
+assign	par_err = !wb_we_i & mem_ack & pen & (
 				(( ^rd_fifo_out[31:24] ^ rd_fifo_out[35] ) & byte_en[3] ) |
 				(( ^rd_fifo_out[23:16] ^ rd_fifo_out[34] ) & byte_en[2] ) |
 				(( ^rd_fifo_out[15:08] ^ rd_fifo_out[33] ) & byte_en[1] ) |
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlValueId@@mc_data_i to mc_data_del

UPD HdlStmAssign@@if_true to if_true
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@mc_data_i to mc_data_del

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@mc_data_i to mc_data_del

UPD HdlStmIf@@body to body
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@CONCAT to CONCAT
                UPD HdlOp@@CONCAT to CONCAT
                    UPD HdlOp@@INDEX to INDEX
                        UPD HdlValueId@@mc_data_i to mc_data_del
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@CONCAT to CONCAT
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlValueId@@mc_data_i to mc_data_del
    UPD HdlOp@@ASSIGN to ASSIGN
        DEL HdlValueId@@mc_data_i from ops


CommitId: 74a90dc44d9efa308e10a4a3396ecc5b39383ca4

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -393,13 +407,20 @@ assign single_write = tms[9];
 // Misc Logic
 //
 
+reg		rsts, rsts1;
+always @(posedge mc_clk)
+	rsts1 <= #1 rst;
+
+always @(posedge clk)
+	rsts <= #1 rsts1;
+
 // Control Signals Output Enable
-always @(posedge clk or negedge rst)
+always @(posedge clk)
 	if(!rst)	mc_c_oe <= #1 1'b0;
-	else		mc_c_oe <= mc_c_oe_d;
+	else		mc_c_oe <= #1 mc_c_oe_d;
 
-always @(posedge clk or negedge rst)
-	if(!rst)	mc_le <= #1 1'b0;
+always @(posedge clk or negedge rsts)
+	if(!rsts)	mc_le <= #1 1'b0;
 	else		mc_le <= #1 ~mc_le;
 
 always @(posedge clk)

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk
        HdlOp: FALLING
            list: ops
                HdlValueId: rsts

UPD HdlStmIf@@body to body
    INS HdlOp@@NEG_LOG to body
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: rsts

UPD HdlStmAssign@@if_false to if_false
    INS HdlValueInt@@1 to if_false


CommitId: 74a90dc44d9efa308e10a4a3396ecc5b39383ca4

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -538,30 +560,44 @@ always @(posedge clk)
 always @(posedge clk)
 	rfr_ack_r <= #1 rfr_ack;
 
+// Suspend Select Logic
+assign susp_sel = susp_sel_r | susp_sel_set;
+
+always @(posedge clk or negedge rst)
+	if(!rst)		susp_sel_r <= #1 0;
+	else
+	if(susp_sel_set)	susp_sel_r <= #1 1'b1;
+	else
+	if(susp_sel_clr)	susp_sel_r <= #1 1'b0;
+
 ////////////////////////////////////////////////////////////////////
 //
 // Timing Logic
 //
+wire	[31:0]	tms_x;
+
+// FIX_ME
+assign tms_x = (rfr_ack | rfr_ack_r | susp_sel | !mc_c_oe) ? 32'hffff_ffff : tms;
 
 always @(posedge clk)
-	if(tmr2_ld_tscsto)	timer2 <= #1 tms[24:16];
+	if(tmr2_ld_tscsto)	timer2 <= #1 tms_x[24:16];
 	else
 	if(tmr2_ld_tsrdv)	timer2 <= #1 9'd2;	// SSRAM RD->1st DATA VALID
 	else
-	if(tmr2_ld_twpw)	timer2 <= #1 { 5'h0, tms[15:12]};
+	if(tmr2_ld_twpw)	timer2 <= #1 { 5'h0, tms_x[15:12]};
 	else
-	if(tmr2_ld_twd)		timer2 <= #1 { 4'h0, tms[19:16],1'b0};
+	if(tmr2_ld_twd)		timer2 <= #1 { 4'h0, tms_x[19:16],1'b0};
 	else
-	if(tmr2_ld_twwd)	timer2 <= #1 { 3'h0, tms[25:20]};
+	if(tmr2_ld_twwd)	timer2 <= #1 { 3'h0, tms_x[25:20]};
 	else
-	if(tmr2_ld_trdz)	timer2 <= #1 { 4'h0, tms[11:8], 1'b1};
+	if(tmr2_ld_trdz)	timer2 <= #1 { 4'h0, tms_x[11:8], 1'b1};
 	else
-	if(tmr2_ld_trdv)	timer2 <= #1 { tms[7:0], 1'b1};
+	if(tmr2_ld_trdv)	timer2 <= #1 { tms_x[7:0], 1'b1};
 	else
 	if(!timer2_is_zero)	timer2 <= #1 timer2 - 9'b1;
 
 wire	twd_is_zero;
-assign twd_is_zero =  (tms[19:16] == 4'h0);
+assign twd_is_zero =  (tms_x[19:16] == 4'h0);
 
 assign timer2_is_zero = (timer2 == 9'h0);
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlOp@@NEG_LOG to body
    UPD HdlOp@@NEG_LOG to NEG_LOG
        INS list@@ops to NEG_LOG


CommitId: 74a90dc44d9efa308e10a4a3396ecc5b39383ca4

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -627,9 +668,9 @@ always @(posedge clk)
 	if(wr_cycle ? mem_ack_d : dv)		burst_cnt <= #1 burst_cnt - 11'h1;
 
 always @(posedge clk)
-	if(burst_cnt_ld)	burst_fp <= #1 (tms[2:0] == 3'h7);
+	if(burst_cnt_ld)	burst_fp <= #1 (tms_x[2:0] == 3'h7);
 
-assign burst_act = |burst_cnt & ( |tms[2:0] );
+assign burst_act = |burst_cnt & ( |tms_x[2:0] );
 
 always @(posedge clk)
 	burst_act_rd <= #1 |burst_cnt;

ParseResult:
INS HdlStmProcess@@ to objs

INS HdlIdDef@@tms_x to objs
HdlIdDef: tms_x
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: OR
                list: ops
                    HdlOp: OR
                        list: ops
                            HdlOp: OR
                                list: ops
                                    HdlValueId: rfr_ack
                                    HdlValueId: rfr_ack_r
                            HdlValueId: susp_sel
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: mc_c_oe
            HdlValueInt: ffffffff
            HdlValueId: tms
    HdlValueId: tms_x

INS HdlStmIf@@body to 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@NEG_LOG to NEG_LOG
            MOV list@@ops to NEG_LOG
            list: ops
                HdlValueId: wb_we_i


CommitId: 74a90dc44d9efa308e10a4a3396ecc5b39383ca4

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -651,7 +692,7 @@ always @(posedge clk or negedge rst)
 	else		state <= #1 next_state;
 
 always @(state or cs_a or
-	twd_is_zero or
+	twd_is_zero or wb_stb_i or
 	wb_first or wb_read_go or wb_write_go or wb_wait or mem_ack or wb_we_i or
 	ack_cnt_is_0 or wb_wait_r or cnt or wb_cycle or 
 	mem_type or kro or lookup_ready1 or lookup_ready2 or row_same or

ParseResult:
INS HdlIdDef@@twrp to objs
HdlIdDef: twrp
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 3
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlStmAssign@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@tms to tms_x

UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@tms to tms_x

UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@tms to tms_x

UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@tms to tms_x

UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@tms to tms_x

UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@tms to tms_x


CommitId: 74a90dc44d9efa308e10a4a3396ecc5b39383ca4

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -716,7 +757,8 @@ always @(state or cs_a or
 	dv = 1'b0;
 
 	suspended_d = 1'b0;
-	susp_sel = 1'b0;
+	susp_sel_set = 1'b0;
+	susp_sel_clr = 1'b0;
 	mc_bg = 1'b0;
 
 	next_adr = 1'b0;

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@CONCAT to 
    INS HdlValueId@@timer to 
    UPD HdlOp@@CONCAT to CONCAT
        INS list@@ops to CONCAT
        INS HdlValueId@@twrp to ops


CommitId: 74a90dc44d9efa308e10a4a3396ecc5b39383ca4

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -758,10 +800,10 @@ always @(state or cs_a or
 			next_state = LMR0;
 		   end
 		else
-		if(susp_req_r)
+		if(susp_req_r & !wb_cycle)
 		   begin
 			cs_le = 1'b1;
-			susp_sel = 1'b1;
+			susp_sel_set = 1'b1;
 			next_state = SUSP1;
 		   end
 		else

ParseResult:
UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 0


CommitId: 74a90dc44d9efa308e10a4a3396ecc5b39383ca4

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -772,7 +814,7 @@ always @(state or cs_a or
 		     `MC_MEM_TYPE_SDRAM:		// SDRAM
 			if((lookup_ready2 | wb_cycle) & !wb_wait)
 			   begin
-				if(wb_write_go  | wb_we_i)	wr_set = 1'b1;
+				if(wb_write_go | (wb_we_i & wb_stb_i))	wr_set = 1'b1;
 				if(kro & bank_open & row_same)	next_state = SD_RD_WR;
 				else
 				if(kro & bank_open)		next_state = PRECHARGE;

ParseResult:
UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 0


CommitId: 74a90dc44d9efa308e10a4a3396ecc5b39383ca4

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -845,6 +887,7 @@ always @(state or cs_a or
 
 	   IDLE_T:
 	      begin
+		cs_le = (wb_first & wb_stb_i) | lmr_req;
 		if(tmr_done)	next_state = IDLE;
 	      end
 

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel_set
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel_clr
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlValueId@@wb_first to ops
                HdlValueId: wb_first
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 0


CommitId: 74a90dc44d9efa308e10a4a3396ecc5b39383ca4

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1216,7 +1259,7 @@ always @(state or cs_a or
 	   ACTIVATE_W:
 	      begin
 		row_sel = 1'b1;
-		if(wb_write_go | wb_we_i)	wr_set = 1'b1;
+		if(wb_write_go | (wb_we_i & wb_stb_i))	wr_set = 1'b1;
 
 		if(kro)		bank_set = 1'b1;
 

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel_set
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel_clr
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlOp: OR
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: wb_first
                                HdlValueId: wb_stb_i
                        HdlValueId: lmr_req
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr_ld_tcl
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@wb_stb_i to ops

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlValueId@@wb_first to ops
                HdlValueId: wb_first
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 0


CommitId: 74a90dc44d9efa308e10a4a3396ecc5b39383ca4

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1225,6 +1268,7 @@ always @(state or cs_a or
 			if(wb_write_go)
 			   begin
 				mem_ack_d = !mem_ack;
+				cmd_a10 = ~kro;
 				next_state = SD_WR;
 			   end
 			else

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel_set
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel_clr
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlOp: OR
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: wb_first
                                HdlValueId: wb_stb_i
                        HdlValueId: lmr_req
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr_ld_tcl
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@wb_stb_i to ops

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlValueId@@wb_first to ops
                HdlValueId: wb_first
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 0


CommitId: 74a90dc44d9efa308e10a4a3396ecc5b39383ca4

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1234,12 +1278,13 @@ always @(state or cs_a or
 
 	   SD_RD_WR:	// 6
 	      begin
-		if(wb_write_go | wb_we_i)	wr_set = 1'b1;
+		if(wb_write_go | (wb_we_i & wb_stb_i))	wr_set = 1'b1;
 
 		if(wb_write_go & !wb_wait)
 		   begin	// Write
 			data_oe_d = 1'b1;
 			mem_ack_d = !mem_ack;
+			cmd_a10 = ~kro;
 			next_state = SD_WR;
 		   end
 		else

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel_set
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel_clr
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlOp: OR
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: wb_first
                                HdlValueId: wb_stb_i
                        HdlValueId: lmr_req
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr_ld_tcl
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@wb_stb_i to ops

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlValueId@@wb_first to ops
                HdlValueId: wb_first
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 0


CommitId: 74a90dc44d9efa308e10a4a3396ecc5b39383ca4

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1331,9 +1376,9 @@ always @(state or cs_a or
 		if(cnt & !(burst_act & !wb_cycle) & burst_act )		cke_rd = !wb_wait;
 		else							cke_rd = cke_;
 
-		if(wb_cycle & !cnt & burst_act_rd & cke_o_del)	dv = 1'b1;
+		if(wb_cycle & !cnt & burst_act_rd & cke_o_del)		dv = 1'b1;
 
-		if(wb_cycle & wb_we_i)			next_state = BT;
+		if(wb_cycle & wb_write_go)		next_state = BT;
 		else
 		if(burst_act & !wb_cycle)		next_state = BT;
 		else

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel_set
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel_clr
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlOp: OR
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: wb_first
                                HdlValueId: wb_stb_i
                        HdlValueId: lmr_req
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr_ld_tcl
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@wb_stb_i to ops

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlValueId@@wb_first to ops
                HdlValueId: wb_first
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 0


CommitId: 74a90dc44d9efa308e10a4a3396ecc5b39383ca4

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1342,7 +1387,7 @@ always @(state or cs_a or
 
 	   SD_RD_W2: //32
 	      begin
-		if(wb_cycle & wb_we_i)			next_state = IDLE;
+		if(wb_cycle & wb_write_go)		next_state = IDLE;
 		else
 		if(!wb_cycle | ack_cnt_is_0)		next_state = IDLE;
 	      end

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel_set
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel_clr
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlOp: OR
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: wb_first
                                HdlValueId: wb_stb_i
                        HdlValueId: lmr_req
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr_ld_tcl
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@wb_stb_i to ops

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlValueId@@wb_first to ops
                HdlValueId: wb_first
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 0


CommitId: 74a90dc44d9efa308e10a4a3396ecc5b39383ca4

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1372,10 +1417,15 @@ always @(state or cs_a or
 
 	   REFR:	// Refresh Cycle
 	      begin
+		cs_le = 1'b1;
 		cmd = `MC_CMD_ARFR;
 		tmr_ld_trfc = 1'b1;
 		rfr_ack = 1'b1;
-		if(cmd_asserted)		next_state = IDLE_T;
+		if(cmd_asserted)
+		   begin
+			susp_sel_clr = 1'b1;
+			next_state = IDLE_T;
+		   end
 	      end
 
 	   LMR0:

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel_set
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel_clr
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlOp: OR
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: wb_first
                                HdlValueId: wb_stb_i
                        HdlValueId: lmr_req
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr_ld_tcl
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@wb_stb_i to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR to OR
        MOV HdlValueId@@wb_we_i to ops
        HdlValueId: wb_we_i

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlValueId@@wb_first to ops
                HdlValueId: wb_first
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 0


CommitId: 74a90dc44d9efa308e10a4a3396ecc5b39383ca4

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1478,7 +1528,8 @@ always @(state or cs_a or
 		mc_bg =	!wb_read_go & !wb_write_go &
 			!rfr_req & !init_req & !lmr_req &
 			!susp_req_r;
-		if(!mc_br)	next_state = IDLE;
+		tmr_ld_tcl = 1'b1;
+		if(!mc_br)	next_state = IDLE_T;
 		else		mc_c_oe_d = 1'b0;
 	      end
 

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel_set
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel_clr
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlOp: OR
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: wb_first
                                HdlValueId: wb_stb_i
                        HdlValueId: lmr_req
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr_ld_tcl
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@wb_stb_i to ops

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlValueId@@wb_first to ops
                HdlValueId: wb_first
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 0


CommitId: 74a90dc44d9efa308e10a4a3396ecc5b39383ca4

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1487,7 +1538,6 @@ always @(state or cs_a or
 		/////////////////////////////////////////
 	   SUSP1:
 	      begin		// Precharge All
-		susp_sel = 1'b1;
 		cmd = `MC_CMD_PC;
 		cmd_a10 = `MC_ALL_BANKS;
 		bank_clr_all = 1'b1;

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel_set
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel_clr
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlOp: OR
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: wb_first
                                HdlValueId: wb_stb_i
                        HdlValueId: lmr_req
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr_ld_tcl
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@wb_stb_i to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@wb_we_i to wb_write_go

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@wb_we_i to wb_write_go

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlValueId@@wb_first to ops
                HdlValueId: wb_first
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 0


CommitId: 74a90dc44d9efa308e10a4a3396ecc5b39383ca4

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1497,14 +1547,12 @@ always @(state or cs_a or
 
 	   SUSP2:
 	      begin
-		susp_sel = 1'b1;
 		if(tmr_done)	next_state = SUSP3;
 	      end
 
 	   SUSP3:
 	      begin		// Enter Self refresh Mode
 		cke_d = 1'b0;
-		susp_sel = 1'b1;
 		cmd = `MC_CMD_ARFR;
 		rfr_ack = 1'b1;
 		if(cmd_asserted)

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel_set
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel_clr
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlOp: OR
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: wb_first
                                HdlValueId: wb_stb_i
                        HdlValueId: lmr_req
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr_ld_tcl
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@wb_stb_i to ops

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlValueId@@wb_first to ops
                HdlValueId: wb_first
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 0


CommitId: 74a90dc44d9efa308e10a4a3396ecc5b39383ca4

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1515,7 +1563,6 @@ always @(state or cs_a or
 
 	   SUSP4:
 	      begin		// Now we are suspended
-		susp_sel = 1'b1;
 		cke_rd = 1'b0;
 		suspended_d = 1'b1;
 		tmr_ld_txsr = 1'b1;

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel_set
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel_clr
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlOp: OR
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: wb_first
                                HdlValueId: wb_stb_i
                        HdlValueId: lmr_req
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr_ld_tcl
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@wb_stb_i to ops

UPD HdlStmIf@@ to 
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: next_state
            HdlValueId: IDLE_T

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlValueId@@wb_first to ops
                HdlValueId: wb_first
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 0


CommitId: 74a90dc44d9efa308e10a4a3396ecc5b39383ca4

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1525,7 +1572,6 @@ always @(state or cs_a or
 	   RESUME1:
 	      begin
 		suspended_d = 1'b1;
-		susp_sel = 1'b1;
 		tmr_ld_txsr = 1'b1;
 		next_state = RESUME2;
 	      end

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel_set
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel_clr
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlOp: OR
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: wb_first
                                HdlValueId: wb_stb_i
                        HdlValueId: lmr_req
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr_ld_tcl
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@wb_stb_i to ops

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlValueId@@wb_first to ops
                HdlValueId: wb_first
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 0


CommitId: 74a90dc44d9efa308e10a4a3396ecc5b39383ca4

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1533,7 +1579,6 @@ always @(state or cs_a or
 	   RESUME2:
 	      begin
 		suspended_d = 1'b1;
-		susp_sel = 1'b1;
 		if(tmr_done)	next_state = REFR;
 	      end
 

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel_set
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel_clr
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlOp: OR
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: wb_first
                                HdlValueId: wb_stb_i
                        HdlValueId: lmr_req
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr_ld_tcl
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@wb_stb_i to ops

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlValueId@@wb_first to ops
                HdlValueId: wb_first
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 0


CommitId: 74a90dc44d9efa308e10a4a3396ecc5b39383ca4

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1545,5 +1590,4 @@ always @(state or cs_a or
 	endcase
    end
 
-
 endmodule
ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_stb_i
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel_set
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel_clr
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlOp: OR
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: wb_first
                                HdlValueId: wb_stb_i
                        HdlValueId: lmr_req
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_le
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tmr_ld_tcl
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlOp@@AND to ops
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlValueId@@wb_stb_i to ops

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlValueId@@wb_first to ops
                HdlValueId: wb_first
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 1

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlValueId: state
        HdlValueId: cs_a
        HdlValueId: twd_is_zero
        HdlValueId: wb_first
        HdlValueId: wb_read_go
        HdlValueId: wb_write_go
        HdlValueId: wb_wait
        HdlValueId: mem_ack
        HdlValueId: wb_we_i
        HdlValueId: ack_cnt_is_0
        HdlValueId: wb_wait_r
        HdlValueId: cnt
        HdlValueId: wb_cycle
        HdlValueId: mem_type
        HdlValueId: kro
        HdlValueId: lookup_ready1
        HdlValueId: lookup_ready2
        HdlValueId: row_same
        HdlValueId: bank_open
        HdlValueId: single_write
        HdlValueId: cmd_asserted
        HdlValueId: tmr_done
        HdlValueId: tmr2_done
        HdlValueId: ir_cnt_done
        HdlValueId: cmd_asserted2
        HdlValueId: burst_act
        HdlValueId: burst_act_rd
        HdlValueId: burst_fp
        HdlValueId: cke_
        HdlValueId: cke_r
        HdlValueId: cke_o_del
        HdlValueId: rfr_req
        HdlValueId: lmr_req
        HdlValueId: init_req
        HdlValueId: rfr_ack_r
        HdlValueId: susp_req_r
        HdlValueId: resume_req_r
        HdlValueId: mc_br
        HdlValueId: bw8
        HdlValueId: bw16
        HdlValueId: dv_r
        HdlValueId: mc_adv_r
        HdlValueId: mc_ack
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: susp_sel
                HdlValueInt: 0


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_mem_if.v
+++ b/rtl/verilog/mc_mem_if.v
@@ -228,16 +256,6 @@ always @(posedge mc_clk)
 
 assign	mc_cke_ = cke_;
 
-/*	Apparently Synopsys Can't handle this ....
-always @(posedge mc_clk)
-	for(n=0;n<8;n=n+1)
-	   mc_cs_[n] <= #1 ~(cs_en & (
-				(rfr_ack | susp_sel) ? cs_need_rfr[n] :
-				lmr_sel ? spec_req_cs[n] :
-				cs[n]
-			));
-*/
-
 always @(posedge mc_clk or posedge rst)
 	if(rst)		mc_cs_[0] <= #1 1'b1;
 	else
ParseResult:
UPD HdlStmAssign@@if_false to if_false
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@mc_c_oe to mc_c_oe_d


CommitId: f4a8c0b9956fe330c328d28d0a337f214bc71ebc

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -128,7 +132,7 @@ module mc_timing(clk, rst,
 		mc_c_oe, mc_ack,
 
 		// Register File Interface
-		csc, tms, cs, lmr_req, lmr_ack, cs_le,
+		csc, tms, cs, lmr_req, lmr_ack, cs_le_d, cs_le,
 
 		// Address Select Signals
 		cmd_a10, row_sel, next_adr, page_size,

ParseResult:
MOV HdlIdDef@@rfr_ack to ports
HdlIdDef: rfr_ack
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: OUT

UPD HdlIdDef@@rfr_ack to cs_le_d

INS HdlIdDef@@rfr_ack to ports
HdlIdDef: rfr_ack
    HdlDirection: OUT


CommitId: f4a8c0b9956fe330c328d28d0a337f214bc71ebc

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -884,7 +898,7 @@ always @(state or cs_a or cs_le or cs_le_r or
 
 		if(rfr_req)
 		   begin
-			rfr_ack = 1'b1;
+			rfr_ack_d = 1'b1;
 			next_state = PRECHARGE;
 		   end
 		else

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rfr_ack_d
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lmr_ack_d
                HdlValueInt: 0

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rfr_ack
                HdlValueInt: 0
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lmr_ack
                HdlValueInt: 0


CommitId: f4a8c0b9956fe330c328d28d0a337f214bc71ebc

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -896,7 +910,7 @@ always @(state or cs_a or cs_le or cs_le_r or
 		else
 		if(lmr_req & lookup_ready2)
 		   begin
-			lmr_ack = 1'b1;
+			lmr_ack_d = 1'b1;
 			cs_le_d = 1'b1;
 			next_state = LMR0;
 		   end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rfr_ack_d
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lmr_ack_d
                HdlValueInt: 0

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rfr_ack
                HdlValueInt: 0
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lmr_ack
                HdlValueInt: 0


CommitId: f4a8c0b9956fe330c328d28d0a337f214bc71ebc

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -999,8 +1013,10 @@ always @(state or cs_a or cs_le or cs_le_r or
 	      begin
 		if(tmr2_done & (!wb_wait | !wb_cycle) )
 		   begin
-			cs_le_d = 1'b1;
-			if(cs_le_r)	next_state = IDLE;
+			//cs_le_d = 1'b1;
+			//if(cs_le_r)	next_state = IDLE;
+			cs_le_d = wb_stb_i;
+			if(cs_le_r | !wb_stb_i)	next_state = IDLE;
 		   end
 	      end
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rfr_ack_d
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lmr_ack_d
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@rfr_ack to rfr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@rfr_ack to rfr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@lmr_ack to lmr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@lmr_ack to lmr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@lmr_ack to lmr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@rfr_ack to rfr_ack_d
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@rfr_ack to rfr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@lmr_ack to lmr_ack_d

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rfr_ack
                HdlValueInt: 0
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lmr_ack
                HdlValueInt: 0


CommitId: f4a8c0b9956fe330c328d28d0a337f214bc71ebc

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1324,7 +1340,7 @@ always @(state or cs_a or cs_le or cs_le_r or
 		cmd = `MC_CMD_PC;
 		if(rfr_ack_r)
 		   begin
-			rfr_ack = 1'b1;
+			rfr_ack_d = 1'b1;
 			cmd_a10 = `MC_ALL_BANKS;
 			bank_clr_all = 1'b1;
 		   end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rfr_ack_d
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lmr_ack_d
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@rfr_ack to rfr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@rfr_ack to rfr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@lmr_ack to lmr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@lmr_ack to lmr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@lmr_ack to lmr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@rfr_ack to rfr_ack_d
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rfr_ack
                HdlValueInt: 0
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lmr_ack
                HdlValueInt: 0


CommitId: f4a8c0b9956fe330c328d28d0a337f214bc71ebc

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1339,7 +1355,7 @@ always @(state or cs_a or cs_le or cs_le_r or
 
 	   PRECHARGE_W:
 	      begin
-		rfr_ack = rfr_ack_r;
+		rfr_ack_d = rfr_ack_r;
 		if(tmr_done)	
 		   begin
 			if(rfr_ack_r)	next_state = REFR;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rfr_ack_d
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lmr_ack_d
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@rfr_ack to rfr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@rfr_ack to rfr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@lmr_ack to lmr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@lmr_ack to lmr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@lmr_ack to lmr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@rfr_ack to rfr_ack_d
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rfr_ack
                HdlValueInt: 0
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lmr_ack
                HdlValueInt: 0


CommitId: f4a8c0b9956fe330c328d28d0a337f214bc71ebc

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1534,7 +1550,7 @@ always @(state or cs_a or cs_le or cs_le_r or
 		cs_le_d = 1'b1;
 		cmd = `MC_CMD_ARFR;
 		tmr_ld_trfc = 1'b1;
-		rfr_ack = 1'b1;
+		rfr_ack_d = 1'b1;
 		if(cmd_asserted)
 		   begin
 			susp_sel_clr = 1'b1;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rfr_ack_d
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lmr_ack_d
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@rfr_ack to rfr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@rfr_ack to rfr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@lmr_ack to lmr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@lmr_ack to lmr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@lmr_ack to lmr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@rfr_ack to rfr_ack_d
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rfr_ack
                HdlValueInt: 0
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lmr_ack
                HdlValueInt: 0


CommitId: f4a8c0b9956fe330c328d28d0a337f214bc71ebc

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1544,7 +1560,7 @@ always @(state or cs_a or cs_le or cs_le_r or
 
 	   LMR0:
 	      begin
-		lmr_ack = 1'b1;
+		lmr_ack_d = 1'b1;
 		cmd = `MC_CMD_PC;
 		cmd_a10 = `MC_ALL_BANKS;
 		bank_clr_all = 1'b1;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rfr_ack_d
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lmr_ack_d
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@rfr_ack to rfr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@rfr_ack to rfr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@lmr_ack to lmr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@lmr_ack to lmr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@lmr_ack to lmr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@rfr_ack to rfr_ack_d
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rfr_ack
                HdlValueInt: 0
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lmr_ack
                HdlValueInt: 0


CommitId: f4a8c0b9956fe330c328d28d0a337f214bc71ebc

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1554,7 +1570,7 @@ always @(state or cs_a or cs_le or cs_le_r or
 
 	   LMR1:
 	      begin
-		lmr_ack = 1'b1;
+		lmr_ack_d = 1'b1;
 		if(tmr_done)			next_state = LMR2;
 	      end
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rfr_ack_d
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lmr_ack_d
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@rfr_ack to rfr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@rfr_ack to rfr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@lmr_ack to lmr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@lmr_ack to lmr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@lmr_ack to lmr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@rfr_ack to rfr_ack_d
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rfr_ack
                HdlValueInt: 0
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lmr_ack
                HdlValueInt: 0


CommitId: f4a8c0b9956fe330c328d28d0a337f214bc71ebc

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1563,7 +1579,7 @@ always @(state or cs_a or cs_le or cs_le_r or
 		bank_clr_all = 1'b1;
 		cmd = `MC_CMD_LMR;
 		tmr_ld_trfc = 1'b1;
-		lmr_ack = 1'b1;
+		lmr_ack_d = 1'b1;
 		if(cmd_asserted)		next_state = IDLE_T;
 	      end
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rfr_ack_d
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lmr_ack_d
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@rfr_ack to rfr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@rfr_ack to rfr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@lmr_ack to lmr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@lmr_ack to lmr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@lmr_ack to lmr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@rfr_ack to rfr_ack_d
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rfr_ack
                HdlValueInt: 0
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lmr_ack
                HdlValueInt: 0


CommitId: f4a8c0b9956fe330c328d28d0a337f214bc71ebc

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1669,7 +1685,7 @@ always @(state or cs_a or cs_le or cs_le_r or
 	      begin		// Enter Self refresh Mode
 		cke_d = 1'b0;
 		cmd = `MC_CMD_ARFR;
-		rfr_ack = 1'b1;
+		rfr_ack_d = 1'b1;
 		if(cmd_asserted)
 		   begin
 			next_state = SUSP4;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rfr_ack_d
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lmr_ack_d
                HdlValueInt: 0

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@rfr_ack to rfr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@rfr_ack to rfr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@lmr_ack to lmr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@lmr_ack to lmr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@lmr_ack to lmr_ack_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@rfr_ack to rfr_ack_d
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rfr_ack
                HdlValueInt: 0
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lmr_ack
                HdlValueInt: 0


CommitId: ce8d07ddf7279bda1e872ad907ac8f6e20e53686

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1013,10 +1021,8 @@ always @(state or cs_a or cs_le or cs_le_r or
 	      begin
 		if(tmr2_done & (!wb_wait | !wb_cycle) )
 		   begin
-			//cs_le_d = 1'b1;
-			//if(cs_le_r)	next_state = IDLE;
-			cs_le_d = wb_stb_i;
-			if(cs_le_r | !wb_stb_i)	next_state = IDLE;
+			cs_le_d = wb_cycle;
+			if(cs_le_r | !wb_cycle)	next_state = IDLE;
 		   end
 	      end
 

ParseResult:
UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlValueId@@wb_stb_first to ops
                HdlValueId: wb_stb_first
                DEL HdlValueId@@lmr_req from ops
                DEL list@@ops from OR
            DEL HdlOp@@OR from ops
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state


CommitId: ce8d07ddf7279bda1e872ad907ac8f6e20e53686

--- a/rtl/verilog/mc_timing.v
+++ b/rtl/verilog/mc_timing.v
@@ -1140,6 +1146,7 @@ always @(state or cs_a or cs_le or cs_le_r or
 
 	   SRAM_RD4:	// DESELECT
 	      begin
+		if(wb_cycle)	cs_le_d = 1'b1;	// For RMW
 		mc_adsc = 1'b1;
 		next_state = IDLE;
 	      end
ParseResult:
UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state

UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlValueId@@wb_stb_first to ops
                HdlValueId: wb_stb_first
                DEL HdlValueId@@lmr_req from ops
                DEL list@@ops from OR
            DEL HdlOp@@OR from ops
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_cs_rf.v
+++ b/rtl/verilog/mc_cs_rf.v
@@ -133,26 +137,31 @@ reg		lmr_req_we;
 // Write Logic
 //
 
-assign sel = addr[6:3] == reg_select[3:0];
+reg	[6:0]	addr_r;
 
-always @(posedge clk or posedge rst)
-	if(rst)				csc <= #1 (this_cs[2:0] == `MC_DEF_SEL) ? 
+always @(posedge clk)
+	addr_r <= #1 addr[6:0];
+
+assign sel = addr_r[6:3] == reg_select[3:0];
+
+always @(posedge clk)
+	if(rst)		csc <= #1 (this_cs[2:0] == `MC_DEF_SEL) ? 
 			{26'h0, poc[1:0], 1'b0, poc[3:2], (poc[3:2] != 2'b00)} : 32'h0;
 	else
-	if(rf_we & sel & !addr[2])	csc <= #1 din;
+	if(rf_we & sel & !addr_r[2])	csc <= #1 din;
 
-always @(posedge clk or posedge rst)
+always @(posedge clk)
 	if(rst)				tms <= #1 (this_cs[2:0] == `MC_DEF_SEL) ?
 						`MC_DEF_POR_TMS : 32'h0;
 	else
-	if(rf_we & sel & addr[2])	tms <= #1 din;
+	if(rf_we & sel & addr_r[2])	tms <= #1 din;
 
 ////////////////////////////////////////////////////////////////////
 //
 // Load Mode Register Request/Ack Logic
 //
 always @(posedge clk)
-	lmr_req_we <= #1 rf_we & sel & addr[2];
+	lmr_req_we <= #1 rf_we & sel & addr_r[2];
 
 always @(posedge clk or posedge rst)
 	if(rst)		lmr_req <= #1 1'b0;

ParseResult:
INS HdlIdDef@@addr_r to objs
HdlIdDef: addr_r
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 6
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmProcess@@ to objs
HdlStmProcess
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk
    HdlStmAssign: body
        HdlOp: INDEX
            list: ops
                HdlValueId: addr
                HdlOp: DOWNTO
                    list: ops
                        HdlValueInt: 6
                        HdlValueInt: 0
        HdlValueId: addr_r
        HdlValueInt: 1

UPD HdlStmAssign@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@addr to addr_r

UPD HdlStmAssign@@if_true to if_true
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: this_cs
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 2
                                HdlValueInt: 0
                HdlValueInt: 1
        UPD HdlOp@@EQ to EQ
            UPD HdlValueInt@@1 to 0

UPD HdlStmAssign@@if_true to if_true
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: this_cs
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 2
                                HdlValueInt: 0
                HdlValueInt: 1
        UPD HdlOp@@EQ to EQ
            UPD HdlValueInt@@1 to 0

UPD HdlStmIf@@body to body
    UPD HdlOp@@AND to AND
        MOV HdlOp@@AND to ops
        HdlOp: AND
            list: ops
                HdlValueId: rf_we
                HdlValueId: sel
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@addr to addr_r

UPD HdlStmIf@@body to body
    UPD HdlOp@@AND to AND
        MOV HdlOp@@AND to ops
        HdlOp: AND
            list: ops
                HdlValueId: rf_we
                HdlValueId: sel
        UPD HdlOp@@NEG_LOG to NEG_LOG
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@addr to addr_r

UPD HdlStmProcess@@ to 
    DEL HdlOp@@RISING from sensitivity
    HdlOp: RISING
        list: ops
            HdlValueId: rst

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk
        HdlOp: RISING
            list: ops
                HdlValueId: rst


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_cs_rf.v
+++ b/rtl/verilog/mc_cs_rf.v
@@ -167,7 +176,7 @@ always @(posedge clk or posedge rst)
 // Initialize SDRAM Request/Ack & tracking logic
 //
 always @(posedge clk)
-	init_req_we <= #1 rf_we & sel & !addr[2];
+	init_req_we <= #1 rf_we & sel & !addr_r[2];
 
 always @(posedge clk or posedge rst)
 	if(rst)		init_req <= #1 1'b0;
ParseResult:
UPD HdlStmProcess@@ to 
    MOV list@@sensitivity to 
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_top.v
+++ b/rtl/verilog/mc_top.v
@@ -187,7 +187,6 @@ wire		cs_le;
 wire	[7:0]	cs_need_rfr;
 wire	[2:0]	ref_int;
 wire	[31:0]	mem_dout;
-wire		rf_wb_err_o;
 wire		wp_err;
 
 // Address Select Signals

ParseResult:
DEL HdlIdDef@@mem_wb_ack_o from objs
HdlIdDef: mem_wb_ack_o
    HdlDirection: INTERNAL

DEL HdlIdDef@@rf_wb_ack_o from objs
HdlIdDef: rf_wb_ack_o
    HdlDirection: INTERNAL


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_top.v
+++ b/rtl/verilog/mc_top.v
@@ -216,6 +215,7 @@ wire		par_err;
 wire	[31:0]	mc_data_od;
 wire	[3:0]	mc_dp_od;
 wire	[23:0]	mc_addr_d;
+wire	[35:0]	mc_data_ir;
 
 // Refresh Counter Signals
 wire		rfr_req;

ParseResult:
DEL HdlIdDef@@rf_wb_err_o from objs
HdlIdDef: rf_wb_err_o
    HdlDirection: INTERNAL


CommitId: ce8d07ddf7279bda1e872ad907ac8f6e20e53686

--- a/rtl/verilog/mc_wb_if.v
+++ b/rtl/verilog/mc_wb_if.v
@@ -211,15 +216,19 @@ always @(posedge clk or posedge rst)
 // WB Ack
 //
 
+wire	wb_err_d;
+
+// Ack no longer asserted when wb_err is asserted
 always @(posedge clk or posedge rst)
 	if(rst)	wb_ack_o <= #1 1'b0;
-	else	wb_ack_o <= #1 `MC_MEM_SEL ? mem_ack :
+	else	wb_ack_o <= #1 `MC_MEM_SEL ? mem_ack & !wb_err_d :
 				`MC_REG_SEL & wb_cyc_i & wb_stb_i & !wb_ack_o;
 
+assign wb_err_d = wb_cyc_i & wb_stb_i & (par_err | err | wp_err);
+
 always @(posedge clk or posedge rst)
 	if(rst)	wb_err <= #1 1'b0;
-	else	wb_err <= #1 wb_cyc_i & wb_stb_i & `MC_MEM_SEL &
-				(par_err | err | wp_err) & !wb_err;
+	else	wb_err <= #1 `MC_MEM_SEL & wb_err_d & !wb_err;
 
 ////////////////////////////////////////////////////////////////////
 //
ParseResult:
INS HdlIdDef@@wb_err_d to objs
HdlIdDef: wb_err_d
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@if_false to if_false
    UPD HdlOp@@AND to AND
        MOV HdlOp@@AND to ops
        HdlOp: AND
            list: ops
                HdlOp: AND
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: wb_cyc_i
                                HdlValueId: wb_stb_i
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: wb_addr_i
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 31
                                                HdlValueInt: 29
                                HdlValueInt: 0
                HdlOp: OR
                    list: ops
                        HdlOp: OR
                            list: ops
                                HdlValueId: par_err
                                HdlValueId: err
                        HdlValueId: wp_err
        UPD HdlOp@@AND to AND
            UPD HdlOp@@AND to AND
                MOV HdlOp@@AND to ops
                HdlOp: AND
                    list: ops
                        HdlValueId: wb_cyc_i
                        HdlValueId: wb_stb_i
            MOV HdlOp@@AND to ops
            HdlOp: AND
                list: ops
                    HdlOp: AND
                        list: ops
                            HdlValueId: wb_cyc_i
                            HdlValueId: wb_stb_i
                    HdlOp: EQ
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: wb_addr_i
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 31
                                            HdlValueInt: 29
                            HdlValueInt: 0

UPD HdlStmAssign@@if_false to if_false
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlValueId@@mem_ack to ops
        HdlValueId: mem_ack


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_wb_if.v
+++ b/rtl/verilog/mc_wb_if.v
@@ -144,14 +157,14 @@ always @(posedge clk)
 
 assign rmw = rmw_r | (!wr_hold & wb_we_i & wb_cyc_i & wb_stb_i & rmw_en);
 
-
 always @(posedge clk)
-	read_go_r1 <= #1 !rmw & wb_cyc_i & ((wb_stb_i & mem_sel & !wb_we_i) | read_go_r);
+	read_go_r1 <= #1 !rmw & wb_cyc_i &
+			((wb_stb_i & mem_sel & !wb_we_i) | read_go_r);
 
 always @(posedge clk)
 	read_go_r <= #1 read_go_r1 & wb_cyc_i;
 
-assign	wb_read_go   =  !rmw & read_go_r1 & wb_cyc_i;
+assign	wb_read_go = !rmw & read_go_r1 & wb_cyc_i;
 
 always @(posedge clk)
 	write_go_r1 <= #1 wb_cyc_i & ((wb_stb_i & mem_sel & wb_we_i) | write_go_r);

ParseResult:
UPD HdlStmIf@@body to body
    UPD HdlValueId@@mem_ack to wb_ack_o


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_wb_if.v
+++ b/rtl/verilog/mc_wb_if.v
@@ -181,7 +194,13 @@ always @(posedge clk)
 // WB Ack
 //
 
-assign wb_ack_o = mem_ack;
+always @(posedge clk)
+	wb_ack_o <= #1 `MC_MEM_SEL ? mem_ack :
+			`MC_REG_SEL & wb_cyc_i & wb_stb_i & !wb_ack_o;
+
+always @(posedge clk)
+	wb_err <= #1 wb_cyc_i & wb_stb_i & `MC_MEM_SEL &
+			(par_err | err | wp_err) & !wb_err;
 
 ////////////////////////////////////////////////////////////////////
 //

ParseResult:
INS HdlStmProcess@@ to objs

UPD HdlStmIf@@body to body
    UPD HdlOp@@OR to OR
        UPD HdlValueId@@mem_ack to wb_ack_o

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlOp@@AND to AND
            UPD HdlOp@@AND to AND
                UPD HdlOp@@NEG_LOG to NEG_LOG
                    UPD HdlValueId@@mem_ack to wb_ack_o


CommitId: 5296b1f94f0d3fd8145864ae45501775e6d202b1

--- a/rtl/verilog/mc_wb_if.v
+++ b/rtl/verilog/mc_wb_if.v
@@ -190,4 +209,12 @@ assign wb_ack_o = mem_ack;
 
 assign wb_wait = wb_cyc_i & !wb_stb_i & (wb_write_go | wb_read_go);
 
+////////////////////////////////////////////////////////////////////
+//
+// WISHBONE Data Output
+//
+
+always @(posedge clk)
+	wb_data_o <= #1 `MC_MEM_SEL ? mem_dout : rf_dout;
+
 endmodule
ParseResult:
INS HdlStmProcess@@ to objs

INS HdlStmProcess@@ to objs
HdlStmProcess
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk
    HdlStmAssign: body
        HdlOp: AND
            list: ops
                HdlOp: AND
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlOp: AND
                                    list: ops
                                        HdlValueId: wb_cyc_i
                                        HdlValueId: wb_stb_i
                                HdlOp: EQ
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: wb_addr_i
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 31
                                                        HdlValueInt: 29
                                        HdlValueInt: 0
                        HdlOp: OR
                            list: ops
                                HdlOp: OR
                                    list: ops
                                        HdlValueId: par_err
                                        HdlValueId: err
                                HdlValueId: wp_err
                HdlOp: NEG_LOG
                    list: ops
                        HdlValueId: wb_err
        HdlValueId: wb_err
        HdlValueInt: 1

UPD HdlStmIf@@body to body
    UPD HdlOp@@OR to OR
        UPD HdlValueId@@mem_ack to wb_ack_o


