CommitId: af37ab1b96fb3ca771b6d1aae7bc4ba53bba5716
This commit was generated by cvs2svn to compensate for changes in r27, which
--- a/AdcDriver/d_Driver_ADCRamBuffer.v
+++ b/AdcDriver/d_Driver_ADCRamBuffer.v
@@ -29,10 +29,11 @@
 
 module ADCDataBuffer(
     CLK_64MHZ, MASTER_CLK, MASTER_RST,
-    TIME_BASE, TRIGGER_LEVEL, ADC_DATA,
+    TIMESCALE, TRIGGER_LEVEL, VERT_OFFSET, HORZ_OFFSET,
+    ADC_DATA,
     CLK_ADC,
     SNAP_DATA_EXT, SNAP_ADDR_EXT, SNAP_CLK_EXT,
-    sm_adc_ram, triggered
+    TRIGGERSTYLE
     );
     
 //==================================================================//

ParseResult:
MOV HdlIdDef@@triggered to ports
HdlIdDef: triggered
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: OUT

MOV HdlIdDef@@sm_adc_ram to ports
HdlIdDef: sm_adc_ram
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: OUT

UPD HdlIdDef@@TIME_BASE to TIMESCALE

INS HdlIdDef@@VERT_OFFSET to ports
HdlIdDef: VERT_OFFSET
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 10
                    HdlValueInt: 0
    HdlDirection: IN

INS HdlIdDef@@HORZ_OFFSET to ports
HdlIdDef: HORZ_OFFSET
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 10
                    HdlValueInt: 0
    HdlDirection: IN

INS HdlIdDef@@TRIGGERSTYLE to ports
HdlIdDef: TRIGGERSTYLE
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: IN

UPD HdlIdDef@@triggered to triggered
    UPD HdlDirection@@OUT to INTERNAL

UPD HdlIdDef@@sm_adc_ram to sm_adc_ram
    UPD HdlDirection@@OUT to INTERNAL

UPD HdlIdDef@@TIME_BASE to TIME_BASE
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@5 to 3

UPD HdlIdDef@@TRIGGER_LEVEL to TRIGGER_LEVEL
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@8 to 10


CommitId: af37ab1b96fb3ca771b6d1aae7bc4ba53bba5716
This commit was generated by cvs2svn to compensate for changes in r27, which
--- a/AdcDriver/d_Driver_ADCRamBuffer.v
+++ b/AdcDriver/d_Driver_ADCRamBuffer.v
@@ -122,6 +124,10 @@ wire VCC, GND;
 assign VCC = 1'b1;
 assign GND = 1'b0;
 
+// move the following into a more organized area
+wire[10:0] vert_adjustment;
+assign vert_adjustment = (VERT_OFFSET);
+
 RAMB16_S9_S9 ADC_QuasiFifo_Buffer(
     .DOA(),                     .DOB(buf_adc_data[7:0]),
     .DOPA(),                    .DOPB(buf_adc_data[8]),

ParseResult:
INS HdlIdDef@@vert_adjustment to objs
HdlIdDef: vert_adjustment
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 10
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: VERT_OFFSET
    HdlValueId: vert_adjustment


CommitId: af37ab1b96fb3ca771b6d1aae7bc4ba53bba5716
This commit was generated by cvs2svn to compensate for changes in r27, which
--- a/AdcDriver/d_Driver_ADCRamBuffer.v
+++ b/AdcDriver/d_Driver_ADCRamBuffer.v
@@ -160,7 +166,7 @@ always @ (posedge CLK_ADC or posedge MASTER_RST) begin
 //            sm_adc_ram <= ss_fifo_fill;
         if(sm_adc_ram == ss_fifo_fill && triggered)
             sm_adc_ram <= ss_fifo_half;
-        else if(sm_adc_ram == ss_fifo_half && (fifo_addr == trig_addr + 11'd1024))
+        else if(sm_adc_ram == ss_fifo_half && (fifo_addr == (trig_addr + 11'd1023)))
             sm_adc_ram <= ss_save_snapshot;
         else if(sm_adc_ram == ss_save_snapshot && snap_addr == 11'd2047)
             sm_adc_ram <= ss_fifo_fill;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            UPD HdlOp@@ADD to ADD
                UPD HdlValueInt@@1024 to 1023


CommitId: af37ab1b96fb3ca771b6d1aae7bc4ba53bba5716
This commit was generated by cvs2svn to compensate for changes in r27, which
--- a/AdcDriver/d_Driver_ADCRamBuffer.v
+++ b/AdcDriver/d_Driver_ADCRamBuffer.v
@@ -193,7 +199,8 @@ always @ (posedge CLK_ADC or posedge MASTER_RST) begin
     if(MASTER_RST)
         triggered <= 1'b0;
     else
-        triggered <= (data_from_adc_buffered < TRIGGER_LEVEL && data_from_adc >= TRIGGER_LEVEL);
+        triggered <= (TRIGGERSTYLE == 2'b00) && (data_from_adc_buffered < TRIGGER_LEVEL && data_from_adc >= TRIGGER_LEVEL) || // >=
+                     (TRIGGERSTYLE == 2'b01) && (data_from_adc_buffered > TRIGGER_LEVEL && data_from_adc <= TRIGGER_LEVEL);   // <=
 end
 
 always @ (posedge triggered or posedge MASTER_RST) begin

ParseResult:
MOV HdlStmIf@@ to body
HdlStmIf
    HdlValueId: MASTER_RST
    HdlStmAssign: if_true
        HdlValueInt: 0
        HdlValueId: triggered
    list: elifs
    HdlStmAssign: if_false
        HdlOp: AND_LOG
            list: ops
                HdlOp: LT
                    list: ops
                        HdlValueId: data_from_adc_buffered
                        HdlValueId: TRIGGER_LEVEL
                HdlOp: GE
                    list: ops
                        HdlValueId: data_from_adc
                        HdlValueId: TRIGGER_LEVEL
        HdlValueId: triggered

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to ops
        MOV list@@body to SEQ
        list: body
            HdlStmIf
                HdlValueId: MASTER_RST
                HdlStmAssign: if_true
                    HdlValueInt: 0
                    HdlValueId: triggered
                list: elifs
                HdlStmAssign: if_false
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: LT
                                list: ops
                                    HdlValueId: data_from_adc_buffered
                                    HdlValueId: TRIGGER_LEVEL
                            HdlOp: GE
                                list: ops
                                    HdlValueId: data_from_adc
                                    HdlValueId: TRIGGER_LEVEL
                    HdlValueId: triggered

UPD HdlStmAssign@@if_false to if_false
    MOV HdlOp@@AND_LOG to if_false
    HdlOp: AND_LOG
        list: ops
            HdlOp: LT
                list: ops
                    HdlValueId: data_from_adc_buffered
                    HdlValueId: TRIGGER_LEVEL
            HdlOp: GE
                list: ops
                    HdlValueId: data_from_adc
                    HdlValueId: TRIGGER_LEVEL

UPD HdlStmIf@@ to 
    UPD HdlValueId@@MASTER_RST to TRIGGERSTYLE
    MOV HdlValueId@@MASTER_RST to 
    HdlValueId: MASTER_RST


CommitId: af37ab1b96fb3ca771b6d1aae7bc4ba53bba5716
This commit was generated by cvs2svn to compensate for changes in r27, which
--- a/AdcDriver/d_Driver_ADCRamBuffer.v
+++ b/AdcDriver/d_Driver_ADCRamBuffer.v
@@ -214,7 +221,7 @@ always @ (posedge CLK_ADC or posedge MASTER_RST) begin
         snap_addr <= snap_addr + 1;
         buf_adc_addr <= buf_adc_addr + 1;
     end else begin
-        buf_adc_addr <= trig_addr;
+        buf_adc_addr <= trig_addr - (HORZ_OFFSET-11'd319);        /* HORIZONTAL OFFSET */
         snap_addr <= 11'b0;
     end
 end
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS HdlValueId@@MASTER_RST to 

UPD HdlStmAssign@@if_false to if_false
    INS HdlOp@@OR_LOG to if_false
    UPD HdlOp@@OR_LOG to OR_LOG
        INS list@@ops to OR_LOG
        INS HdlOp@@AND_LOG to ops
        INS HdlOp@@AND_LOG to ops
        HdlOp: AND_LOG
            list: ops
                HdlOp: EQ
                    list: ops
                        HdlValueId: TRIGGERSTYLE
                        HdlValueInt: 01
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: GT
                            list: ops
                                HdlValueId: data_from_adc_buffered
                                HdlValueId: TRIGGER_LEVEL
                        HdlOp: LE
                            list: ops
                                HdlValueId: data_from_adc
                                HdlValueId: TRIGGER_LEVEL
        UPD HdlOp@@AND_LOG to AND_LOG
            INS HdlOp@@EQ to ops
            UPD HdlOp@@EQ to EQ
                INS list@@ops to EQ
                INS HdlValueInt@@00 to ops

UPD HdlStmAssign@@ to 
    MOV HdlValueId@@trig_addr to 
    HdlValueId: trig_addr


CommitId: af37ab1b96fb3ca771b6d1aae7bc4ba53bba5716
This commit was generated by cvs2svn to compensate for changes in r27, which
--- a/VGA/d_VGAdriver.v
+++ b/VGA/d_VGAdriver.v
@@ -39,6 +39,8 @@ module Driver_VGA(
     H_SYNC, V_SYNC, VGA_OUTPUT,
     XCOORD, YCOORD,
     TRIGGER_LEVEL,
+    VERT_OFFSET,
+    HORZ_OFFSET,
     SHOW_LEVELS,
     HCNT, VCNT,
     RGB_CHAR

ParseResult:
INS HdlIdDef@@VERT_OFFSET to ports
HdlIdDef: VERT_OFFSET
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 9
                    HdlValueInt: 0
    HdlDirection: IN

INS HdlIdDef@@HORZ_OFFSET to ports
HdlIdDef: HORZ_OFFSET
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 9
                    HdlValueInt: 0
    HdlDirection: IN

UPD HdlIdDef@@TRIGGER_LEVEL to TRIGGER_LEVEL
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@8 to 9


CommitId: af37ab1b96fb3ca771b6d1aae7bc4ba53bba5716
This commit was generated by cvs2svn to compensate for changes in r27, which
--- a/VGA/d_VGAdriver.v
+++ b/VGA/d_VGAdriver.v
@@ -152,7 +154,7 @@ always @ (vcnt)
 //------------------------------------------------------------------//
 // VGA DATA SIGNAL TIMING                                           //
 //------------------------------------------------------------------//
-always @ (hcnt or vcnt or XCOORD or YCOORD or MASTER_RST or vga_out or SHOW_LEVELS or TRIGGER_LEVEL) begin
+always @ (hcnt or vcnt or XCOORD or YCOORD or MASTER_RST or vga_out or SHOW_LEVELS or TRIGGER_LEVEL or VERT_OFFSET or HORZ_OFFSET or RGB_CHAR) begin
     if(MASTER_RST == 1'b1) begin
         VGA_OUTPUT = P_black;
     //------------------------------------------------------------------------------//

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlValueId@@VERT_OFFSET to sensitivity
    INS HdlValueId@@HORZ_OFFSET to sensitivity
    INS HdlValueId@@RGB_CHAR to sensitivity

UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlValueId: SHOW_LEVELS
                                HdlValueInt: 1
                        HdlOp: EQ
                            list: ops
                                HdlValueId: vcnt
                                HdlValueId: VERT_OFFSET
                HdlOp: NE
                    list: ops
                        HdlValueId: hcnt
                        HdlValueInt: 560
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: VGA_OUTPUT
                        HdlValueId: P_yellow
    INS tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlValueId: SHOW_LEVELS
                                HdlValueInt: 1
                        HdlOp: EQ
                            list: ops
                                HdlValueId: vcnt
                                HdlOp: ADD
                                    list: ops
                                        HdlValueId: VERT_OFFSET
                                        HdlValueInt: 1
                HdlOp: OR_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlValueId: hcnt
                                HdlValueInt: 559
                        HdlOp: EQ
                            list: ops
                                HdlValueId: hcnt
                                HdlValueInt: 561
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: VGA_OUTPUT
                        HdlValueId: P_yellow
    INS tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlValueId: SHOW_LEVELS
                                HdlValueInt: 1
                        HdlOp: EQ
                            list: ops
                                HdlValueId: vcnt
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: VERT_OFFSET
                                        HdlValueInt: 1
                HdlOp: EQ
                    list: ops
                        HdlValueId: hcnt
                        HdlValueInt: 560
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: VGA_OUTPUT
                        HdlValueId: P_yellow
    INS tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: AND_LOG
                            list: ops
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: SHOW_LEVELS
                                        HdlValueInt: 1
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: hcnt
                                        HdlValueId: HORZ_OFFSET
                        HdlOp: NE
                            list: ops
                                HdlValueId: vcnt
                                HdlValueInt: 102
                HdlOp: NE
                    list: ops
                        HdlValueId: vcnt
                        HdlValueInt: 100
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: VGA_OUTPUT
                        HdlValueId: P_yellow
    INS tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlValueId: SHOW_LEVELS
                                HdlValueInt: 1
                        HdlOp: EQ
                            list: ops
                                HdlValueId: hcnt
                                HdlOp: ADD
                                    list: ops
                                        HdlValueId: HORZ_OFFSET
                                        HdlValueInt: 1
                HdlOp: OR_LOG
                    list: ops
                        HdlOp: OR_LOG
                            list: ops
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: vcnt
                                        HdlValueInt: 100
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: vcnt
                                        HdlValueInt: 101
                        HdlOp: EQ
                            list: ops
                                HdlValueId: vcnt
                                HdlValueInt: 102
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: VGA_OUTPUT
                        HdlValueId: P_yellow
    INS tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlValueId: SHOW_LEVELS
                                HdlValueInt: 1
                        HdlOp: EQ
                            list: ops
                                HdlValueId: hcnt
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: HORZ_OFFSET
                                        HdlValueInt: 1
                HdlOp: OR_LOG
                    list: ops
                        HdlOp: OR_LOG
                            list: ops
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: vcnt
                                        HdlValueInt: 100
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: vcnt
                                        HdlValueInt: 101
                        HdlOp: EQ
                            list: ops
                                HdlValueId: vcnt
                                HdlValueInt: 102
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: VGA_OUTPUT
                        HdlValueId: P_yellow


CommitId: af37ab1b96fb3ca771b6d1aae7bc4ba53bba5716
This commit was generated by cvs2svn to compensate for changes in r27, which
--- a/VGA/d_VGAdriver.v
+++ b/VGA/d_VGAdriver.v
@@ -176,6 +178,22 @@ always @ (hcnt or vcnt or XCOORD or YCOORD or MASTER_RST or vga_out or SHOW_LEVE
     end else if(SHOW_LEVELS == 1'b1 && vcnt == (TRIGGER_LEVEL-1'b1) && hcnt == 10'd557) begin
         VGA_OUTPUT = P_yellow;
     //------------------------------------------------------------------------------//
+    // VERTICAL OFFSET SPRITE         (shows as ------V------ )                     //
+    end else if(SHOW_LEVELS == 1'b1 && vcnt == (VERT_OFFSET) && hcnt != 10'd560) begin
+        VGA_OUTPUT = P_yellow;
+    end else if(SHOW_LEVELS == 1'b1 && vcnt == (VERT_OFFSET+1'b1) && (hcnt == 10'd559 || hcnt == 10'd561)) begin
+        VGA_OUTPUT = P_yellow;
+    end else if(SHOW_LEVELS == 1'b1 && vcnt == (VERT_OFFSET-1'b1) && hcnt == 10'd560) begin
+        VGA_OUTPUT = P_yellow;
+   //------------------------------------------------------------------------------//
+    // HORIZONTAL1 OFFSET SPRITE         (shows as ------H------ )                 //
+    end else if(SHOW_LEVELS == 1'b1 && hcnt == (HORZ_OFFSET) && vcnt != 10'd102 && vcnt != 10'd100) begin
+        VGA_OUTPUT = P_yellow;
+    end else if(SHOW_LEVELS == 1'b1 && hcnt == (HORZ_OFFSET+1'b1) && (vcnt == 10'd100 || vcnt == 10'd101 || vcnt == 10'd102)) begin
+        VGA_OUTPUT = P_yellow;
+    end else if(SHOW_LEVELS == 1'b1 && hcnt == (HORZ_OFFSET-1'b1) && (vcnt == 10'd100 || vcnt == 10'd101 || vcnt == 10'd102)) begin
+        VGA_OUTPUT = P_yellow;
+    //------------------------------------------------------------------------------//
     // TOP, BOTTOM, LEFT AND RIGHT GRID LINES                                       //
     end else if(vcnt == 10'd0 || vcnt == 10'd399 || vcnt == 10'd441) begin
         VGA_OUTPUT = P_cyan;
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlValueId@@VERT_OFFSET to sensitivity
    INS HdlValueId@@HORZ_OFFSET to sensitivity
    INS HdlValueId@@RGB_CHAR to sensitivity

UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlValueId: SHOW_LEVELS
                                HdlValueInt: 1
                        HdlOp: EQ
                            list: ops
                                HdlValueId: vcnt
                                HdlValueId: VERT_OFFSET
                HdlOp: NE
                    list: ops
                        HdlValueId: hcnt
                        HdlValueInt: 560
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: VGA_OUTPUT
                        HdlValueId: P_yellow
    INS tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlValueId: SHOW_LEVELS
                                HdlValueInt: 1
                        HdlOp: EQ
                            list: ops
                                HdlValueId: vcnt
                                HdlOp: ADD
                                    list: ops
                                        HdlValueId: VERT_OFFSET
                                        HdlValueInt: 1
                HdlOp: OR_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlValueId: hcnt
                                HdlValueInt: 559
                        HdlOp: EQ
                            list: ops
                                HdlValueId: hcnt
                                HdlValueInt: 561
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: VGA_OUTPUT
                        HdlValueId: P_yellow
    INS tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlValueId: SHOW_LEVELS
                                HdlValueInt: 1
                        HdlOp: EQ
                            list: ops
                                HdlValueId: vcnt
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: VERT_OFFSET
                                        HdlValueInt: 1
                HdlOp: EQ
                    list: ops
                        HdlValueId: hcnt
                        HdlValueInt: 560
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: VGA_OUTPUT
                        HdlValueId: P_yellow
    INS tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: AND_LOG
                            list: ops
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: SHOW_LEVELS
                                        HdlValueInt: 1
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: hcnt
                                        HdlValueId: HORZ_OFFSET
                        HdlOp: NE
                            list: ops
                                HdlValueId: vcnt
                                HdlValueInt: 102
                HdlOp: NE
                    list: ops
                        HdlValueId: vcnt
                        HdlValueInt: 100
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: VGA_OUTPUT
                        HdlValueId: P_yellow
    INS tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlValueId: SHOW_LEVELS
                                HdlValueInt: 1
                        HdlOp: EQ
                            list: ops
                                HdlValueId: hcnt
                                HdlOp: ADD
                                    list: ops
                                        HdlValueId: HORZ_OFFSET
                                        HdlValueInt: 1
                HdlOp: OR_LOG
                    list: ops
                        HdlOp: OR_LOG
                            list: ops
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: vcnt
                                        HdlValueInt: 100
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: vcnt
                                        HdlValueInt: 101
                        HdlOp: EQ
                            list: ops
                                HdlValueId: vcnt
                                HdlValueInt: 102
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: VGA_OUTPUT
                        HdlValueId: P_yellow
    INS tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlValueId: SHOW_LEVELS
                                HdlValueInt: 1
                        HdlOp: EQ
                            list: ops
                                HdlValueId: hcnt
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: HORZ_OFFSET
                                        HdlValueInt: 1
                HdlOp: OR_LOG
                    list: ops
                        HdlOp: OR_LOG
                            list: ops
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: vcnt
                                        HdlValueInt: 100
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: vcnt
                                        HdlValueInt: 101
                        HdlOp: EQ
                            list: ops
                                HdlValueId: vcnt
                                HdlValueInt: 102
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: VGA_OUTPUT
                        HdlValueId: P_yellow


CommitId: 757d7e03acf440c2f240625cf86c6448cbc13bde
This commit was generated by cvs2svn to compensate for changes in r17, which
--- a/AdcDriver/d_Driver_RamBuffer.v
+++ b/AdcDriver/d_Driver_RamBuffer.v
@@ -132,7 +135,7 @@ always @ (posedge CLK_64MHZ or posedge MASTER_RST) begin
         sm_trig <= ss_fill_mem_half;
     else if(sm_trig == ss_fill_mem_half && mem_half_full == 1'b1)
         sm_trig <= ss_write_buffer;
-    else if(sm_trig == ss_write_buffer && trigger_detected == 1'b0 && VGA_WRITE_DONE == 1'b1)
+    else if(sm_trig == ss_write_buffer && /*trigger_detected == 1'b0 &&*/ VGA_WRITE_DONE == 1'b1)
         sm_trig <= ss_wait_for_trig;
     else if(sm_trig == ss_invalid)
         sm_trig <= ss_wait_for_trig;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlOp@@AND_LOG to ops
        HdlOp: AND_LOG
            list: ops
                HdlOp: EQ
                    list: ops
                        HdlValueId: sm_trig
                        HdlValueId: ss_write_buffer
                HdlOp: EQ
                    list: ops
                        HdlValueId: trigger_detected
                        HdlValueInt: 0
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: VGA_WRITE_DONE
                HdlValueInt: 1
        UPD HdlOp@@AND_LOG to AND_LOG
            DEL HdlOp@@EQ from ops
            HdlOp: EQ
                list: ops
                    HdlValueId: trigger_detected
                    HdlValueInt: 0
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 


CommitId: 757d7e03acf440c2f240625cf86c6448cbc13bde
This commit was generated by cvs2svn to compensate for changes in r17, which
--- a/AdcDriver/d_Driver_RamBuffer.v
+++ b/AdcDriver/d_Driver_RamBuffer.v
@@ -168,7 +171,8 @@ always @ (posedge ADC_CLK or posedge MASTER_RST) begin
     else if(sm_trig == ss_fill_mem_half)
         cnt_1024bytes <= cnt_1024bytes + 1;
     else
-        cnt_1024bytes <= cnt_1024bytes;
+        cnt_1024bytes <= 10'b0;
+//        cnt_1024bytes <= cnt_1024bytes;
 end
 
 always @ (cnt_1024bytes) begin
ParseResult:
UPD HdlStmAssign@@if_false to if_false
    INS HdlValueInt@@0 to if_false

UPD HdlStmAssign@@if_false to if_false
    DEL HdlValueId@@cnt_1024bytes from if_false


CommitId: 84e05684a656a03410f47fe7fac599f8ecb6017c
This commit was generated by cvs2svn to compensate for changes in r21, which
--- a/d_TopLevel.v
+++ b/d_TopLevel.v
@@ -34,7 +34,7 @@ module TopLevel(
     H_SYNC, V_SYNC, VGA_OUTPUT,
     PS2C, PS2D,
 //    TIME_BASE,
-    ADC_DATA, ADC_CLK,
+    ADC_DATA, CLK_ADC,
     VGA_RAM_ADDR, VGA_RAM_DATA,
     VGA_RAM_OE, VGA_RAM_WE, VGA_RAM_CS,
     

ParseResult:
UPD HdlIdDef@@ADC_CLK to CLK_ADC

UPD HdlIdDef@@ADC_DATA to ADC_DATA
    INS HdlOp@@PARAMETRIZATION to ADC_DATA
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 8
                    HdlValueInt: 0

UPD HdlIdDef@@ADC_DATA to ADC_DATA
    UPD HdlOp@@PARAMETRIZATION to INDEX
    MOV HdlOp@@PARAMETRIZATION to ADC_DATA
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlValueId@@wire to ADC_DATA


CommitId: 84e05684a656a03410f47fe7fac599f8ecb6017c
This commit was generated by cvs2svn to compensate for changes in r21, which
--- a/d_TopLevel.v
+++ b/d_TopLevel.v
@@ -94,6 +94,8 @@ assign TIME_BASE = 6'b0;
 //==================================================================//
 // TEMP                                                             //
 //==================================================================//
+reg[8:0] fake_adcData;
+
 wire[17:0] VGA_RAM_ADDRESS_w;
 wire[15:0] VGA_RAM_DATA_w;
 wire L_BUTTON, R_BUTTON, M_BUTTON;

ParseResult:
INS HdlIdDef@@fake_adcData to objs
HdlIdDef: fake_adcData
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 8
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 84e05684a656a03410f47fe7fac599f8ecb6017c
This commit was generated by cvs2svn to compensate for changes in r21, which
--- a/d_TopLevel.v
+++ b/d_TopLevel.v
@@ -109,7 +111,6 @@ reg[7:0] data_charRamRead_buf;
 wire[7:0] mask_charMap;
 reg[7:0] mask_charMap_buf;
 
-wire[1:0] sm_trig;
 
 always @ (posedge CLK_50MHZ) begin
     if(R_BUTTON) begin

ParseResult:
DEL HdlIdDef@@sm_trig from objs
HdlIdDef: sm_trig
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 84e05684a656a03410f47fe7fac599f8ecb6017c
This commit was generated by cvs2svn to compensate for changes in r21, which
--- a/d_TopLevel.v
+++ b/d_TopLevel.v
@@ -123,26 +124,25 @@ end
 
 sub_SegDriver segs(
     .CLK_50MHZ(CLK_50MHZ), .MASTER_RST(MASTER_RST),
-    .DATA_IN(data_charRamRead_buf),
+    .DATA_IN(fake_adcData[7:0]),
     .SEG_OUT(SEG_OUT), .SEG_SEL(SEG_SEL)
     );
 
 wire[7:0] leds;
-assign leds[1:0] = sm_trig;
-assign leds[7:2] = 6'b0;
+assign leds[7:0] = 8'b0;
 
 /*- - - - - - - - - - - - - */
 /* Fake ADC data            */
 /*- - - - - - - - - - - - - */
-reg[7:0] fake_adcData;
-always @ (posedge CLK_VGA or posedge MASTER_RST) begin
+always @ (posedge CLK_ADC or posedge MASTER_RST) begin
     if(MASTER_RST)
-        fake_adcData <= 8'd0;
+        fake_adcData <= 9'd0;
     else
         fake_adcData <= fake_adcData+1;
 end
 
 
+
 //==================================================================//
 // SUBROUTINES                                                      //
 //==================================================================//

ParseResult:
UPD HdlIdDef@@fake_adcData to fake_adcData
    UPD HdlOp@@PARAMETRIZATION to INDEX
    MOV HdlOp@@PARAMETRIZATION to fake_adcData
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlValueId@@reg to leds
    DEL HdlDirection@@INTERNAL from fake_adcData

UPD HdlStmProcess@@ to 
    UPD HdlOp@@RISING to RISING
        UPD HdlValueId@@CLK_VGA to CLK_ADC

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: sm_trig
    HdlOp: INDEX
        list: ops
            HdlValueId: leds
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0

UPD HdlStmAssign@@ to 
    DEL HdlOp@@INDEX from 
    HdlOp: INDEX
        list: ops
            HdlValueId: leds
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 2

DEL HdlIdDef@@fake_adcData from objs


CommitId: 84e05684a656a03410f47fe7fac599f8ecb6017c
This commit was generated by cvs2svn to compensate for changes in r21, which
--- a/d_TopLevel.v
+++ b/d_TopLevel.v
@@ -187,23 +187,18 @@ Driver_MouseInput Driver_MouseInput_inst(
 
 
 
-wire[7:0] ADC_RAM_DATA;
+wire[8:0] ADC_RAM_DATA;
 wire[10:0] ADC_RAM_ADDR;
 wire ADC_RAM_CLK;
 wire[10:0] TRIG_ADDR;
 wire VGA_WRITE_DONE;
-ADCDataBuffer ram_ADC_databuffer(
-    .CLK_64MHZ(CLK_64MHZ), .MASTER_RST(MASTER_RST),
-    .CLK180_64MHZ(CLK180_64MHZ),
-    .TIME_BASE(TIME_BASE),
-    .RAM_ADDR(ADC_RAM_ADDR), .RAM_DATA(ADC_RAM_DATA), .RAM_CLK(ADC_RAM_CLK),
-//    .ADC_DATA(ADC_DATA), .ADC_CLK(ADC_CLK),
-    .ADC_DATA(fake_adcData), .ADC_CLK(ADC_CLK),
-    .TRIG_ADDR(TRIG_ADDR), .VGA_WRITE_DONE(VGA_WRITE_DONE),
-    .TRIGGER_LEVEL(TRIGGER_LEVEL[8:0]),
-    .sm_trig(sm_trig)
-    );
 
+ADCDataBuffer ADC_Data_Buffer(
+    .CLK_64MHZ(CLK_64MHZ),  .MASTER_CLK(MASTER_CLK), .MASTER_RST(MASTER_RST),
+    .TIME_BASE(TIME_BASE), .TRIGGER_LEVEL(TRIGGER_LEVEL[8:0]), .ADC_DATA(ADC_DATA[7:0]),
+    .CLK_ADC(CLK_ADC),
+    .SNAP_DATA_EXT(ADC_RAM_DATA), .SNAP_ADDR_EXT(ADC_RAM_ADDR), .SNAP_CLK_EXT(ADC_RAM_CLK)
+    );
 
 
 //------------------------------------------------------------------//

ParseResult:
UPD HdlIdDef@@ADC_RAM_DATA to ADC_RAM_DATA
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@wire to ops
        HdlValueId: wire
    UPD HdlOp@@PARAMETRIZATION to INDEX
    MOV HdlOp@@PARAMETRIZATION to ADC_RAM_DATA
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0


CommitId: af37ab1b96fb3ca771b6d1aae7bc4ba53bba5716
This commit was generated by cvs2svn to compensate for changes in r27, which
--- a/d_TopLevel.v
+++ b/d_TopLevel.v
@@ -134,7 +134,7 @@ assign leds[7:0] = 8'b0;
 /*- - - - - - - - - - - - - */
 /* Fake ADC data            */
 /*- - - - - - - - - - - - - */
-always @ (posedge CLK_ADC or posedge MASTER_RST) begin
+always @ (posedge CLK_64MHZ or posedge MASTER_RST) begin
     if(MASTER_RST)
         fake_adcData <= 9'd0;
     else

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlOp@@RISING to RISING
        UPD HdlValueId@@CLK_ADC to CLK_64MHZ


CommitId: af37ab1b96fb3ca771b6d1aae7bc4ba53bba5716
This commit was generated by cvs2svn to compensate for changes in r27, which
--- a/d_TopLevel.v
+++ b/d_TopLevel.v
@@ -170,7 +170,9 @@ d_DCM clock_generator(
     );
 
 wire[11:0] XCOORD, YCOORD;
-wire[9:0] TRIGGER_LEVEL;
+wire[9:0] TRIGGER_LEVEL, HORZ_OFFSET, VERT_OFFSET;
+wire[3:0] TIMESCALE;
+wire[1:0] TRIGGERSTYLE;
 Driver_mouse driver_MOUSE(
     .CLK_50MHZ(CLK_50MHZ), .MASTER_RST(MASTER_RST),
     .PS2C(PS2C), .PS2D(PS2D),

ParseResult:
INS HdlIdDef@@HORZ_OFFSET to objs
HdlIdDef: HORZ_OFFSET
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 9
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@VERT_OFFSET to objs
HdlIdDef: VERT_OFFSET
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 9
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@TIMESCALE to objs
HdlIdDef: TIMESCALE
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 3
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@TRIGGERSTYLE to objs
HdlIdDef: TRIGGERSTYLE
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 757d7e03acf440c2f240625cf86c6448cbc13bde
This commit was generated by cvs2svn to compensate for changes in r17, which
--- a/VGA/CharDecode/d_CharDecode.v
+++ b/VGA/CharDecode/d_CharDecode.v
@@ -24,14 +24,14 @@
 //------------------------------------------------------------------//
 // Revisions:                                                       //
 // Ver 0.0.0.1     Jun 17, 2005   Initial Development Release       //
+//                                Based on "d_CharDecode.v"         //
 //                                                                  //
 //==================================================================//
 
 module CharacterDisplay(
     MASTER_CLK, MASTER_RST,
     CLK_VGA, HCNT, VCNT,
-    RGB_OUT,
-    data_charRamRead, data_charMap
+    RGB_OUT
     );
                                                                     
 //==================================================================//

ParseResult:
MOV HdlIdDef@@data_charRamRead to ports
HdlIdDef: data_charRamRead
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlDirection: OUT

MOV HdlIdDef@@data_charMap to ports
HdlIdDef: data_charMap
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlDirection: OUT

UPD HdlIdDef@@data_charRamRead to data_charRamRead
    UPD HdlDirection@@OUT to INTERNAL

UPD HdlIdDef@@data_charMap to data_charMap
    UPD HdlDirection@@OUT to INTERNAL


CommitId: 757d7e03acf440c2f240625cf86c6448cbc13bde
This commit was generated by cvs2svn to compensate for changes in r17, which
--- a/VGA/CharDecode/d_CharDecode.v
+++ b/VGA/CharDecode/d_CharDecode.v
@@ -74,9 +71,9 @@ reg[2:0]  RGB_OUT;
 // REGISTERS            //
 //----------------------//
 reg[3:0] cnt_charPxls;
-reg[5:0] cnt_Hchar;
+reg[6:0] cnt_Hchar;
 reg[10:0] cnt_Vchar;
-wire     charRow1, charRow2, charRow3, charRow4;
+wire     charRow1, charRow2, charRow3, charRow4, charRow5, charRow6, charRow7, charRow8;
 
 wire[10:0] addr_charRamRead;
 wire[7:0]  data_charRamRead;

ParseResult:
INS HdlIdDef@@cnt_Hchar to objs
HdlIdDef: cnt_Hchar
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 6
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@charRow5 to objs
HdlIdDef: charRow5
    HdlDirection: INTERNAL

INS HdlIdDef@@charRow6 to objs
HdlIdDef: charRow6
    HdlDirection: INTERNAL

INS HdlIdDef@@charRow7 to objs
HdlIdDef: charRow7
    HdlDirection: INTERNAL

INS HdlIdDef@@charRow8 to objs
HdlIdDef: charRow8
    HdlDirection: INTERNAL

DEL HdlIdDef@@cnt_Hchar from objs
HdlIdDef: cnt_Hchar
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 5
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 757d7e03acf440c2f240625cf86c6448cbc13bde
This commit was generated by cvs2svn to compensate for changes in r17, which
--- a/VGA/CharDecode/d_CharDecode.v
+++ b/VGA/CharDecode/d_CharDecode.v
@@ -165,7 +169,7 @@ always @ (posedge CLK_VGA or posedge MASTER_RST) begin
     if(MASTER_RST) begin
         mask_charMap <= 8'd0;
     end else if(VCNT <= 10'd512) begin
-        if(HCNT == 10'd0 && VCNT[0] == 1'b1) begin  //1B0
+        if(HCNT == 10'd0) begin
             if(mask_charMap == 8'd0)
                 mask_charMap <= 8'b10000000;
             else

ParseResult:
UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlValueId: charRow1
        HdlValueId: charRow2
        HdlValueId: charRow3
        HdlValueId: charRow4
        HdlValueId: charRow5
        HdlValueId: charRow6
        HdlValueId: charRow7
        HdlValueId: charRow8
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS HdlValueId@@charRow1 to 
    INS list@@elifs to 
    list: elifs
        tuple
            HdlValueId: charRow2
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: cnt_Vchar
                    HdlValueInt: 106
        tuple
            HdlValueId: charRow3
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: cnt_Vchar
                    HdlValueInt: 212
        tuple
            HdlValueId: charRow4
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: cnt_Vchar
                    HdlValueInt: 318
        tuple
            HdlValueId: charRow5
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: cnt_Vchar
                    HdlValueInt: 424
        tuple
            HdlValueId: charRow6
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: cnt_Vchar
                    HdlValueInt: 530
        tuple
            HdlValueId: charRow7
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: cnt_Vchar
                    HdlValueInt: 636
        tuple
            HdlValueId: charRow8
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: cnt_Vchar
                    HdlValueInt: 742
    INS HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: cnt_Vchar
            HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: HCNT
                HdlValueInt: 0
        DEL HdlOp@@EQ from ops
        HdlOp: EQ
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: VCNT
                        HdlValueInt: 0
                HdlValueInt: 1
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 


CommitId: 757d7e03acf440c2f240625cf86c6448cbc13bde
This commit was generated by cvs2svn to compensate for changes in r17, which
--- a/VGA/CharDecode/d_CharDecode.v
+++ b/VGA/CharDecode/d_CharDecode.v
@@ -179,7 +183,7 @@ end
 
 
 
-assign addr_charMap = (data_charRamRead * 8'd5) + (cnt_charPxls[3:1]);
+assign addr_charMap = ((data_charRamRead * 8'd5) + cnt_charPxls);
 
 
 //- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - //

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@ADD to ADD
        UPD HdlOp@@INDEX to INDEX
            MOV HdlValueId@@cnt_charPxls to ops
            HdlValueId: cnt_charPxls
            DEL HdlOp@@DOWNTO from ops
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 3
                    HdlValueInt: 1
            DEL list@@ops from INDEX
        DEL HdlOp@@INDEX from ops


CommitId: 757d7e03acf440c2f240625cf86c6448cbc13bde
This commit was generated by cvs2svn to compensate for changes in r17, which
--- a/VGA/CharDecode/d_CharDecode.v
+++ b/VGA/CharDecode/d_CharDecode.v
@@ -188,12 +192,11 @@ assign addr_charMap = (data_charRamRead * 8'd5) + (cnt_charPxls[3:1]);
 reg[2:0] rgb_buf;
 
 always @ (mask_charMap or data_charMap) begin
-    if((charRow1 | charRow2 | charRow3 | charRow4) && ((mask_charMap & data_charMap) != 8'b0) && (cnt_charPxls != 4'd10) && (HCNT >= 10'd7) && (HCNT <= 10'd632))
+    if((charRow1 | charRow2 | charRow3 | charRow4 | charRow5 | charRow6 | charRow7 | charRow8) && ((mask_charMap & data_charMap) != 8'b0) && (cnt_charPxls != 4'd5) && (HCNT >= 10'd2) && (HCNT <= 10'd637))
         rgb_buf = P_yellow;
     else
         rgb_buf = P_black;
 end
-    
 always @ (posedge CLK_VGA) begin
     RGB_OUT <= rgb_buf;
 end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@LE to LE
            UPD HdlValueInt@@632 to 637
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@GE to GE
                UPD HdlValueInt@@7 to 2
            UPD HdlOp@@AND_LOG to AND_LOG
                UPD HdlOp@@NE to NE
                    UPD HdlValueInt@@10 to 5
                UPD HdlOp@@AND_LOG to AND_LOG
                    MOV HdlOp@@OR to ops
                    HdlOp: OR
                        list: ops
                            HdlOp: OR
                                list: ops
                                    HdlOp: OR
                                        list: ops
                                            HdlValueId: charRow1
                                            HdlValueId: charRow2
                                    HdlValueId: charRow3
                            HdlValueId: charRow4


CommitId: 757d7e03acf440c2f240625cf86c6448cbc13bde
This commit was generated by cvs2svn to compensate for changes in r17, which
--- a/VGA/CharDecode/d_CharDecode.v
+++ b/VGA/CharDecode/d_CharDecode.v
@@ -214,30 +217,30 @@ end
 
 always @ (posedge MASTER_CLK or posedge MASTER_RST) begin
     if(MASTER_RST)
-        test_cntAddr <= 11'd41;
-    else if(test_cntAddr == 11'd56)
-        test_cntAddr <= 11'd41;
+        test_cntAddr <= 11'd61;
+    else if(test_cntAddr == 11'd76)
+        test_cntAddr <= 11'd61;
     else
         test_cntAddr <= test_cntAddr+1;
 end
 
 always @ (test_cntAddr or test_cnt) begin
-         if(test_cntAddr == 11'd41) data_time[3:0] = test_cnt[63:60];
-    else if(test_cntAddr == 11'd42) data_time[3:0] = test_cnt[59:56];
-    else if(test_cntAddr == 11'd43) data_time[3:0] = test_cnt[55:52];
-    else if(test_cntAddr == 11'd44) data_time[3:0] = test_cnt[51:48];
-    else if(test_cntAddr == 11'd45) data_time[3:0] = test_cnt[47:44];
-    else if(test_cntAddr == 11'd46) data_time[3:0] = test_cnt[43:40];
-    else if(test_cntAddr == 11'd47) data_time[3:0] = test_cnt[39:36];
-    else if(test_cntAddr == 11'd48) data_time[3:0] = test_cnt[35:32];
-    else if(test_cntAddr == 11'd49) data_time[3:0] = test_cnt[31:28];
-    else if(test_cntAddr == 11'd50) data_time[3:0] = test_cnt[27:24];
-    else if(test_cntAddr == 11'd51) data_time[3:0] = test_cnt[23:20];
-    else if(test_cntAddr == 11'd52) data_time[3:0] = test_cnt[19:16];
-    else if(test_cntAddr == 11'd53) data_time[3:0] = test_cnt[15:12];
-    else if(test_cntAddr == 11'd54) data_time[3:0] = test_cnt[11:8];
-    else if(test_cntAddr == 11'd55) data_time[3:0] = test_cnt[7:4];
-    else if(test_cntAddr == 11'd56) data_time[3:0] = test_cnt[3:0];
+         if(test_cntAddr == 11'd61) data_time[3:0] = test_cnt[63:60];
+    else if(test_cntAddr == 11'd62) data_time[3:0] = test_cnt[59:56];
+    else if(test_cntAddr == 11'd63) data_time[3:0] = test_cnt[55:52];
+    else if(test_cntAddr == 11'd64) data_time[3:0] = test_cnt[51:48];
+    else if(test_cntAddr == 11'd65) data_time[3:0] = test_cnt[47:44];
+    else if(test_cntAddr == 11'd66) data_time[3:0] = test_cnt[43:40];
+    else if(test_cntAddr == 11'd67) data_time[3:0] = test_cnt[39:36];
+    else if(test_cntAddr == 11'd68) data_time[3:0] = test_cnt[35:32];
+    else if(test_cntAddr == 11'd69) data_time[3:0] = test_cnt[31:28];
+    else if(test_cntAddr == 11'd70) data_time[3:0] = test_cnt[27:24];
+    else if(test_cntAddr == 11'd71) data_time[3:0] = test_cnt[23:20];
+    else if(test_cntAddr == 11'd72) data_time[3:0] = test_cnt[19:16];
+    else if(test_cntAddr == 11'd73) data_time[3:0] = test_cnt[15:12];
+    else if(test_cntAddr == 11'd74) data_time[3:0] = test_cnt[11:8];
+    else if(test_cntAddr == 11'd75) data_time[3:0] = test_cnt[7:4];
+    else if(test_cntAddr == 11'd76) data_time[3:0] = test_cnt[3:0];
     else                            data_time[3:0] = 4'b0000;
 end
 

ParseResult:
INS HdlStmProcess@@ to objs

UPD HdlStmProcess@@ to 
    MOV list@@sensitivity to 
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: MASTER_CLK
        HdlOp: RISING
            list: ops
                HdlValueId: MASTER_RST
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlValueId@@MASTER_RST to 
    INS list@@elifs to 
    list: elifs
        tuple
            HdlOp: EQ
                list: ops
                    HdlValueId: test_cntAddr
                    HdlValueInt: 76
            HdlStmAssign
                HdlValueInt: 61
                HdlValueId: test_cntAddr

INS HdlStmAssign@@if_true to 
HdlStmAssign: if_true
    HdlValueInt: 61
    HdlValueId: test_cntAddr

MOV HdlStmAssign@@if_false to 
HdlStmAssign: if_false
    HdlOp: ADD
        list: ops
            HdlValueId: test_cntAddr
            HdlValueInt: 1
    HdlValueId: test_cntAddr

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@41 to 61
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@42 to 62
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@43 to 63
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@44 to 64
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@45 to 65
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@46 to 66
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@47 to 67
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@48 to 68
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@49 to 69
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@50 to 70
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@51 to 71
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@52 to 72
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@53 to 73
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@54 to 74
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@55 to 75
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@56 to 76

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@AND_LOG to AND_LOG
                UPD HdlOp@@AND_LOG to AND_LOG
                    INS HdlOp@@OR to ops
                    UPD HdlOp@@OR to OR
                        INS list@@ops to OR
                        INS HdlOp@@OR to ops
                        INS HdlValueId@@charRow8 to ops
                        UPD HdlOp@@OR to OR
                            INS list@@ops to OR
                            INS HdlOp@@OR to ops
                            INS HdlValueId@@charRow7 to ops
                            UPD HdlOp@@OR to OR
                                INS list@@ops to OR
                                INS HdlOp@@OR to ops
                                INS HdlValueId@@charRow6 to ops
                                UPD HdlOp@@OR to OR
                                    INS list@@ops to OR
                                    INS HdlValueId@@charRow5 to ops

UPD HdlStmIf@@ to 
    DEL HdlValueId@@MASTER_RST from 
    DEL list@@elifs from 
    list: elifs
        tuple
            HdlOp: EQ
                list: ops
                    HdlValueId: test_cntAddr
                    HdlValueInt: 56
            HdlStmAssign
                HdlValueInt: 41
                HdlValueId: test_cntAddr

DEL HdlStmAssign@@if_true from 
HdlStmAssign: if_true
    HdlValueInt: 41
    HdlValueId: test_cntAddr

DEL HdlStmIf@@ from body

DEL HdlStmProcess@@ from objs


CommitId: d05b2f574e17b21e613a7a0e2570134af6cb40c1
This commit was generated by cvs2svn to compensate for changes in r11, which
--- a/d_TopLevel.v
+++ b/d_TopLevel.v
@@ -163,6 +189,21 @@ ADCDataBuffer ram_ADC_databuffer(
 
 
 
+//------------------------------------------------------------------//
+//   VGA                                                            //
+//------------------------------------------------------------------//
+wire[9:0] HCNT, VCNT;
+wire[2:0] RGB_CHAR;
+
+
+CharacterDisplay charTest(
+    .MASTER_CLK(CLK_50MHZ), .MASTER_RST(MASTER_RST),
+    .CLK_VGA(CLK_VGA), .HCNT(HCNT), .VCNT(VCNT),
+    .RGB_OUT(RGB_CHAR),
+    .data_charMap(mask_charMap), .data_charRamRead(data_charRamRead)
+    );
+
+
 //wire[17:0] VGA_RAM_ADDRESS_w;
 //wire[15:0] VGA_RAM_DATA_w;
 wire VGA_RAM_OE_w, VGA_RAM_WE_w, VGA_RAM_CS_w;

ParseResult:
INS HdlIdDef@@HCNT to objs
HdlIdDef: HCNT
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 9
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@VCNT to objs
HdlIdDef: VCNT
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 9
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@RGB_CHAR to objs
HdlIdDef: RGB_CHAR
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 2
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: e27e066fbf95d4c03b010ad10b30dd35e1e3375a
This commit was generated by cvs2svn to compensate for changes in r5, which
--- a/UserInput/d_MouseInput.v
+++ b/UserInput/d_MouseInput.v
@@ -54,8 +74,6 @@ reg[8:0] TRIGGER_LEVEL;
 //----------------------//
 // TESTING              //
 //----------------------//
-output TEST_in_range_Trig;
-wire TEST_in_range_Trig;
 
 
 

ParseResult:
DEL HdlIdDef@@TEST_in_range_Trig from ports
HdlIdDef: TEST_in_range_Trig
    HdlDirection: OUT


CommitId: 757d7e03acf440c2f240625cf86c6448cbc13bde
This commit was generated by cvs2svn to compensate for changes in r17, which
--- a/VGA/d_VgaRamBuffer.v
+++ b/VGA/d_VgaRamBuffer.v
@@ -110,7 +110,7 @@ end
 /* TRIG_ADDR modified */
 always @ (TRIG_ADDR) begin
     if(TRIG_ADDR < 10'd320)
-        TRIG_ADDR_buffered = (10'd2048 - 10'd1 - 10'd320) - TRIG_ADDR;
+        TRIG_ADDR_buffered = (11'd2047 - 10'd320) - TRIG_ADDR;
     else
         TRIG_ADDR_buffered = TRIG_ADDR;
 end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@SUB to SUB
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueInt@@2048 to 2047
                    MOV HdlValueInt@@2048 to ops
                    HdlValueInt: 2048
                    DEL HdlValueInt@@1 from ops
                    DEL list@@ops from SUB
                DEL HdlOp@@SUB from ops


CommitId: 757d7e03acf440c2f240625cf86c6448cbc13bde
This commit was generated by cvs2svn to compensate for changes in r17, which
--- a/VGA/d_VgaRamBuffer.v
+++ b/VGA/d_VgaRamBuffer.v
@@ -129,11 +129,30 @@ always @ (posedge CLK_50MHZ or posedge MASTER_RST) begin
     end
 end
 
+reg[7:0] TESTING_CNT;
+always @ (posedge CLK_50MHZ or posedge MASTER_RST) begin
+    if(MASTER_RST == 1'b1) begin
+        TESTING_CNT <= 8'd0;
+    end else if(VGA_RAM_ACCESS_OK) begin
+        if(vcnt == 5'd24)
+            TESTING_CNT <= TESTING_CNT+1;
+        else
+            TESTING_CNT <= TESTING_CNT;
+    end else begin
+        TESTING_CNT <= 8'b0;
+    end
+end
+
+
 always @ (ADC_RAM_DATA) begin
-    adc_data_scale = ADC_RAM_DATA + (ADC_RAM_DATA>>1);
+//      adc_data_scale = TESTING_CNT + (TESTING_CNT>>1) + (TESTING_CNT>>4) + (TESTING_CNT>>6);
+//      adc_data_scale = ADC_RAM_DATA + (ADC_RAM_DATA>>1) + (ADC_RAM_DATA>>4) + (ADC_RAM_DATA>>6);
+      adc_data_scale = ADC_RAM_DATA;
 end
 
 
+
+
 always @ (posedge CLK_50MHZ or posedge MASTER_RST) begin
     if(MASTER_RST == 1'b1) begin
         VGA_RAM_ADDR <= 18'b0;
ParseResult:
INS HdlIdDef@@TESTING_CNT to objs
HdlIdDef: TESTING_CNT
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmProcess@@ to objs

UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: CLK_50MHZ
        HdlOp: RISING
            list: ops
                HdlValueId: MASTER_RST

UPD HdlStmProcess@@ to 
    MOV list@@sensitivity to 
    list: sensitivity
        HdlValueId: ADC_RAM_DATA
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD list@@ops to elifs
            MOV list@@ops to ASSIGN
            list: ops
                HdlValueId: adc_data_scale
                HdlOp: ADD
                    list: ops
                        HdlValueId: ADC_RAM_DATA
                        HdlOp: SRL
                            list: ops
                                HdlValueId: ADC_RAM_DATA
                                HdlValueInt: 1
            UPD HdlValueId@@adc_data_scale to VGA_RAM_ACCESS_OK
            MOV HdlValueId@@adc_data_scale to ops
            HdlValueId: adc_data_scale
            UPD HdlOp@@ADD to ADD
                UPD list@@ops to body
                MOV list@@ops to ADD
                list: ops
                    HdlValueId: ADC_RAM_DATA
                    HdlOp: SRL
                        list: ops
                            HdlValueId: ADC_RAM_DATA
                            HdlValueInt: 1
                UPD HdlOp@@SRL to ADD
                MOV HdlOp@@SRL to ops
                HdlOp: SRL
                    list: ops
                        HdlValueId: ADC_RAM_DATA
                        HdlValueInt: 1
                UPD HdlValueId@@ADC_RAM_DATA to vcnt
                MOV HdlValueId@@ADC_RAM_DATA to ops
                HdlValueId: ADC_RAM_DATA
                UPD HdlOp@@SRL to SRL
                    UPD HdlValueId@@ADC_RAM_DATA to TESTING_CNT
            DEL HdlOp@@ADD from ops
        DEL HdlOp@@ASSIGN from body

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: MASTER_RST
            HdlValueInt: 1
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: TESTING_CNT
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: TESTING_CNT
    INS tuple@@ to elifs
    INS HdlStmBlock@@SEQ to 

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    INS list@@elifs to 
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlValueInt@@24 to ops

INS HdlStmAssign@@if_true to 

INS HdlStmAssign@@if_false to 
HdlStmAssign: if_false
    HdlValueId: TESTING_CNT
    HdlValueId: TESTING_CNT


CommitId: d05b2f574e17b21e613a7a0e2570134af6cb40c1
This commit was generated by cvs2svn to compensate for changes in r11, which
--- a/VGA/d_VGAdriver.v
+++ b/VGA/d_VGAdriver.v
@@ -25,18 +25,23 @@
 // Revisions:                                                       //
 // Ver 0.0.0.1     Apr 28, 2005   Under Development                 //
 //     0.0.0.2     Jun 09, 2005   Cleaning                          //
+//     0.0.0.3     Jun 10, 2005   Re-structuerd the VCNT and HCNT   //
+//                                so they line up with the PXLs.    //
 //                                                                  //
 //==================================================================//
 
 module Driver_VGA(
     CLK_50MHZ, MASTER_RST,
+    CLK_VGA,
     VGA_RAM_DATA, VGA_RAM_ADDR,
     VGA_RAM_OE, VGA_RAM_WE, VGA_RAM_CS,
     VGA_RAM_ACCESS_OK,
     H_SYNC, V_SYNC, VGA_OUTPUT,
     XCOORD, YCOORD, ram_vshift,
     TRIGGER_LEVEL,
-    SHOW_LEVELS
+    SHOW_LEVELS,
+    HCNT, VCNT,
+    RGB_CHAR
     );
     
 //==================================================================//

ParseResult:
INS HdlIdDef@@CLK_VGA to ports
HdlIdDef: CLK_VGA
    HdlDirection: IN

INS HdlIdDef@@VCNT to ports
HdlIdDef: VCNT
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 9
                    HdlValueInt: 0
    HdlDirection: OUT

INS HdlIdDef@@RGB_CHAR to ports
HdlIdDef: RGB_CHAR
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 2
                    HdlValueInt: 0
    HdlDirection: IN


CommitId: d05b2f574e17b21e613a7a0e2570134af6cb40c1
This commit was generated by cvs2svn to compensate for changes in r11, which
--- a/VGA/d_VGAdriver.v
+++ b/VGA/d_VGAdriver.v
@@ -84,12 +94,15 @@ reg VGA_RAM_OE, VGA_RAM_WE, VGA_RAM_CS;
 reg VGA_RAM_ACCESS_OK;
 wire[8:0] TRIGGER_LEVEL;
 wire SHOW_LEVELS;
+wire[9:0] HCNT, VCNT;
+wire[2:0] RGB_CHAR;
 
 
 //----------------------//
 // REGISTERS            //
 //----------------------//
-reg CLK_25MHZ;      // General system clock for VGA timing
+//reg CLK_25MHZ;      // General system clock for VGA timing
+wire CLK_25MHZ = CLK_VGA;
 reg [9:0] hcnt;     // Counter - generates the H_SYNC signal
 reg [9:0] vcnt;     // Counter - counts the H_SYNC pulses to generate V_SYNC signal
 reg[2:0]  vga_out;

ParseResult:
UPD HdlIdDef@@CLK_25MHZ to CLK_25MHZ
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlValueId@@reg to CLK_VGA
        MOV HdlValueId@@reg to ops
        HdlValueId: reg
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from CLK_25MHZ


CommitId: d05b2f574e17b21e613a7a0e2570134af6cb40c1
This commit was generated by cvs2svn to compensate for changes in r11, which
--- a/VGA/d_VGAdriver.v
+++ b/VGA/d_VGAdriver.v
@@ -97,15 +110,17 @@ reg[2:0]  vga_out;
 //==================================================================//
 // FUNCTIONAL DEFINITIONS                                           //
 //==================================================================//
+assign HCNT = hcnt;
+assign VCNT = vcnt;
 
 //------------------------------------------------------------------//
 // CLOCK FUNCTIONS                                                  //
 //------------------------------------------------------------------//
-always @ (posedge CLK_50MHZ or posedge MASTER_RST)
-        if (MASTER_RST == 1'b1)
-            CLK_25MHZ <= 1'b0;
-        else
-            CLK_25MHZ <= ~CLK_25MHZ;
+//always @ (posedge CLK_50MHZ or posedge MASTER_RST)
+//        if (MASTER_RST == 1'b1)
+//            CLK_25MHZ <= 1'b0;
+//        else
+//            CLK_25MHZ <= ~CLK_25MHZ;
 
 
 //------------------------------------------------------------------//

ParseResult:
INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@if_false to 

MOV HdlStmAssign@@if_false to body
HdlStmAssign: if_false
    HdlOp: NEG
        list: ops
            HdlValueId: CLK_25MHZ
    HdlValueId: CLK_25MHZ

UPD HdlStmProcess@@ to 
    UPD HdlOp@@RISING to RISING
        UPD HdlValueId@@CLK_50MHZ to hcnt
        MOV HdlValueId@@CLK_50MHZ to ops
        HdlValueId: CLK_50MHZ
        DEL list@@ops from RISING
    UPD HdlOp@@RISING to RISING
        UPD HdlValueId@@MASTER_RST to HCNT
        MOV HdlValueId@@MASTER_RST to ops
        HdlValueId: MASTER_RST
        DEL list@@ops from RISING
    DEL HdlOp@@RISING from sensitivity
    DEL HdlOp@@RISING from sensitivity
    DEL list@@sensitivity from 

UPD HdlStmAssign@@if_false to if_false
    UPD HdlOp@@NEG to NEG
        UPD HdlValueId@@CLK_25MHZ to vcnt
        MOV HdlValueId@@CLK_25MHZ to ops
        HdlValueId: CLK_25MHZ
        DEL list@@ops from NEG
    UPD HdlValueId@@CLK_25MHZ to VCNT
    DEL HdlOp@@NEG from if_false

UPD HdlStmIf@@body to body
    DEL HdlOp@@EQ from body
    HdlOp: EQ
        list: ops
            HdlValueId: MASTER_RST
            HdlValueInt: 1
    DEL list@@elifs from body

DEL HdlStmAssign@@if_true from body
HdlStmAssign: if_true
    HdlValueInt: 0
    HdlValueId: CLK_25MHZ

DEL HdlStmIf@@body from 

DEL HdlStmProcess@@ from objs


CommitId: d05b2f574e17b21e613a7a0e2570134af6cb40c1
This commit was generated by cvs2svn to compensate for changes in r11, which
--- a/VGA/d_VGAdriver.v
+++ b/VGA/d_VGAdriver.v
@@ -114,13 +129,13 @@ always @ (posedge CLK_50MHZ or posedge MASTER_RST)
 always @ (posedge CLK_25MHZ or posedge MASTER_RST) begin
     if (MASTER_RST == 1'b1) begin
         hcnt <= 10'd0;
-        vcnt <= 10'd0;
+        vcnt <= 10'd430;
     end else if (hcnt == 10'd0799) begin
         hcnt <= 10'd0;
-        if (vcnt == 10'd0520)
-            vcnt <= 10'd0;
+        if (vcnt == 10'd0)
+            vcnt <= 10'd520;
         else
-            vcnt <= vcnt + 1'b1;
+            vcnt <= vcnt - 1'b1;
     end else
         hcnt <= hcnt + 1'b1;
 end

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@0 to 430

UPD HdlStmAssign@@if_true to if_true
    UPD HdlValueInt@@0 to 520

UPD HdlStmAssign@@if_false to if_false
    UPD HdlOp@@ADD to SUB

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@0520 to 0


CommitId: d05b2f574e17b21e613a7a0e2570134af6cb40c1
This commit was generated by cvs2svn to compensate for changes in r11, which
--- a/VGA/d_VGAdriver.v
+++ b/VGA/d_VGAdriver.v
@@ -130,7 +145,7 @@ end
 // HORIZONTAL SYNC TIMING                                           //
 //------------------------------------------------------------------//
 always @ (hcnt)
-    if (hcnt <= 10'd0095)
+    if (hcnt >= 10'd656 && hcnt <= 10'd751)
         H_SYNC = 1'b0;
     else
         H_SYNC = 1'b1;

ParseResult:
UPD HdlStmIf@@body to body
    MOV HdlOp@@LE to body
    HdlOp: LE
        list: ops
            HdlValueId: hcnt
            HdlValueInt: 0095
    UPD HdlOp@@LE to LE
        UPD HdlValueInt@@0095 to 751


CommitId: d05b2f574e17b21e613a7a0e2570134af6cb40c1
This commit was generated by cvs2svn to compensate for changes in r11, which
--- a/VGA/d_VGAdriver.v
+++ b/VGA/d_VGAdriver.v
@@ -140,7 +155,7 @@ always @ (hcnt)
 // VERTICAL SYNC TIMING                                             //
 //------------------------------------------------------------------//
 always @ (vcnt)
-    if (vcnt <= 10'd0001)
+    if (vcnt == 10'd430 || vcnt == 10'd429)
         V_SYNC = 1'b0;
     else
         V_SYNC = 1'b1;

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlOp@@AND_LOG to body
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlOp@@GE to ops
        HdlOp: GE
            list: ops
                HdlValueId: hcnt
                HdlValueInt: 656

UPD HdlStmIf@@body to body
    UPD HdlOp@@LE to EQ
    MOV HdlOp@@LE to body
    HdlOp: LE
        list: ops
            HdlValueId: vcnt
            HdlValueInt: 0001
    UPD HdlOp@@LE to LE
        UPD HdlValueInt@@0001 to 430


CommitId: d05b2f574e17b21e613a7a0e2570134af6cb40c1
This commit was generated by cvs2svn to compensate for changes in r11, which
--- a/VGA/d_VGAdriver.v
+++ b/VGA/d_VGAdriver.v
@@ -224,11 +234,11 @@ end
 //     row 16: ram_addr = 23 and 25 for each pxl *
 //     row 17: ram_addr = 23 and 25 for each pxl *
 //       ...
-reg[9:0]  ram_hcnt;
+/*reg[9:0]  ram_hcnt;*/
 reg[4:0]  ram_vcnt;
 reg[15:0] ram_vshift;
 
-
+/*
 always @ (posedge CLK_25MHZ or posedge MASTER_RST) begin
     if(MASTER_RST == 1'b1) begin
         ram_hcnt <= 10'd639;

ParseResult:
UPD HdlIdDef@@ram_hcnt to HCNT

MOV HdlIdDef@@ram_hcnt to objs
HdlIdDef: ram_hcnt
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 9
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@ram_hcnt to ram_hcnt
    UPD HdlDirection@@INTERNAL to OUT
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlValueId@@reg to wire

DEL HdlStmProcess@@ from objs
HdlStmProcess
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: CLK_25MHZ
        HdlOp: RISING
            list: ops
                HdlValueId: MASTER_RST
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlValueId: MASTER_RST
                        HdlValueInt: 1
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 639
                            HdlValueId: ram_hcnt
                list: elifs
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlOp: GE
                                    list: ops
                                        HdlValueId: hcnt
                                        HdlValueInt: 143
                                HdlOp: LE
                                    list: ops
                                        HdlValueId: hcnt
                                        HdlValueInt: 782
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: EQ
                                        list: ops
                                            HdlValueId: ram_hcnt
                                            HdlValueInt: 639
                                    HdlStmAssign: if_true
                                        HdlValueInt: 0
                                        HdlValueId: ram_hcnt
                                    list: elifs
                                    HdlStmAssign: if_false
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: ram_hcnt
                                                HdlValueInt: 1
                                        HdlValueId: ram_hcnt
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 639
                            HdlValueId: ram_hcnt


CommitId: d05b2f574e17b21e613a7a0e2570134af6cb40c1
This commit was generated by cvs2svn to compensate for changes in r11, which
--- a/VGA/d_VGAdriver.v
+++ b/VGA/d_VGAdriver.v
@@ -241,13 +251,14 @@ always @ (posedge CLK_25MHZ or posedge MASTER_RST) begin
         ram_hcnt <= 10'd639;
     end
 end
+*/
 
 always @ (posedge CLK_25MHZ or posedge MASTER_RST) begin
     if(MASTER_RST == 1'b1) begin
         ram_vshift <= 16'h8000;
-    end else if(vcnt < 10'd31) begin
+    end else if(vcnt > 10'd399) begin
         ram_vshift <= 16'h8000;
-    end else if((vcnt >= 10'd31) && (hcnt == 10'd0799)) begin
+    end else if((vcnt <= 10'd399) && (hcnt == 10'd655)) begin
         if(ram_vshift == 16'h0001)
             ram_vshift <= 16'h8000;
         else

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@LT to GT
    UPD HdlOp@@LT to LT
        UPD HdlValueInt@@31 to 399
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@GE to LE
        UPD HdlOp@@GE to GE
            UPD HdlValueInt@@31 to 399
        UPD HdlOp@@EQ to EQ
            UPD HdlValueInt@@0799 to 655

DEL HdlStmProcess@@ from objs
HdlStmProcess
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: CLK_25MHZ
        HdlOp: RISING
            list: ops
                HdlValueId: MASTER_RST
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlValueId: MASTER_RST
                        HdlValueInt: 1
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 639
                            HdlValueId: ram_hcnt
                list: elifs
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlOp: GE
                                    list: ops
                                        HdlValueId: hcnt
                                        HdlValueInt: 143
                                HdlOp: LE
                                    list: ops
                                        HdlValueId: hcnt
                                        HdlValueInt: 782
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: EQ
                                        list: ops
                                            HdlValueId: ram_hcnt
                                            HdlValueInt: 639
                                    HdlStmAssign: if_true
                                        HdlValueInt: 0
                                        HdlValueId: ram_hcnt
                                    list: elifs
                                    HdlStmAssign: if_false
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: ram_hcnt
                                                HdlValueInt: 1
                                        HdlValueId: ram_hcnt
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 639
                            HdlValueId: ram_hcnt


CommitId: d05b2f574e17b21e613a7a0e2570134af6cb40c1
This commit was generated by cvs2svn to compensate for changes in r11, which
--- a/VGA/d_VGAdriver.v
+++ b/VGA/d_VGAdriver.v
@@ -261,10 +272,10 @@ always @ (posedge CLK_25MHZ or posedge MASTER_RST) begin
         ram_vcnt <= 5'd0;
     end else if(vcnt < 10'd30) begin
         ram_vcnt <= 5'd0;
-    end else if((vcnt >= 10'd30) && (hcnt == 10'd0799) && (ram_vshift == 16'h0001)) begin
+    end else if((vcnt >= 10'd30) && (hcnt == 10'd655) && (ram_vshift == 16'h0001)) begin
         if(ram_vcnt == 5'd0)
             ram_vcnt <= 5'd24;
-        else
+else
             ram_vcnt <= ram_vcnt - 1'b1;
     end else begin
         ram_vcnt <= ram_vcnt;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@EQ to EQ
                UPD HdlValueInt@@0799 to 655


CommitId: d05b2f574e17b21e613a7a0e2570134af6cb40c1
This commit was generated by cvs2svn to compensate for changes in r11, which
--- a/VGA/d_VGAdriver.v
+++ b/VGA/d_VGAdriver.v
@@ -273,8 +284,8 @@ end
 
 
 
-always @ (ram_hcnt or ram_vcnt) begin
-    VGA_RAM_ADDR = ram_vcnt + (ram_hcnt * 7'd025);
+always @ (hcnt or ram_vcnt) begin
+    VGA_RAM_ADDR = ram_vcnt + (hcnt * 7'd25);
 end
 
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlValueId@@ram_hcnt to hcnt
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@MUL to MUL
                    UPD HdlValueId@@ram_hcnt to hcnt
                    UPD HdlValueInt@@025 to 25


CommitId: d05b2f574e17b21e613a7a0e2570134af6cb40c1
This commit was generated by cvs2svn to compensate for changes in r11, which
--- a/VGA/d_VGAdriver.v
+++ b/VGA/d_VGAdriver.v
@@ -297,7 +308,7 @@ end
 // ALL CLEAR?                                                       //
 //------------------------------------------------------------------//
 always @ (vcnt) begin
-    if(vcnt >= 10'd512 || vcnt < 10'd30)
+    if((vcnt >= 10'd400) && (vcnt <= 10'd440))
         VGA_RAM_ACCESS_OK = 1'b1;
     else
         VGA_RAM_ACCESS_OK = 1'b0;
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to AND_LOG
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@LT to LE
        UPD HdlOp@@GE to GE
            UPD HdlValueInt@@512 to 400
        UPD HdlOp@@LT to LT
            UPD HdlValueInt@@30 to 440


CommitId: d05b2f574e17b21e613a7a0e2570134af6cb40c1
This commit was generated by cvs2svn to compensate for changes in r11, which
--- a/Mouse/d_DriverMouse.v
+++ b/Mouse/d_DriverMouse.v
@@ -171,14 +171,14 @@ end
 
 always @ (posedge CLK_ps2c_debounced or posedge MASTER_RST) begin
     if(MASTER_RST == 1'b1) begin
-        YCOORD <= 12'd100;
+        YCOORD <= 12'd199;
     end else if(Counter_bits == 6'd32 && (data_in_buf[8] == 1'b0)) begin
-        if(data_in_buf[6] == 1'b1) begin    // POSITIVE
+        if(data_in_buf[6] == 1'b0) begin
             if((YCOORD + ycoord_buf) >= 11'd479)
                 YCOORD <= 12'd479;
             else
                 YCOORD <= YCOORD + ycoord_buf;
-        end else begin  // POSITIVE
+        end else begin
             if(YCOORD <= ycoord_buf)
                 YCOORD <= 12'd0;
             else
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@100 to 199

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@1 to 0


CommitId: 0f1160025490ee0f7790f7970f2fedfed74923ad
This commit was generated by cvs2svn to compensate for changes in r8, which
--- a/VGA/d_VGAdriver.v
+++ b/VGA/d_VGAdriver.v
@@ -149,9 +168,9 @@ always @ (hcnt or vcnt or XCOORD or YCOORD or MASTER_RST or vga_out or SHOW_LEVE
     // TRIGGER SPRITE         (shows as ------T------ )                             //
     end else if(SHOW_LEVELS == 1'b1 && vcnt == (TRIGGER_LEVEL+10'd31) && hcnt != 10'd700 && hcnt != 10'd702) begin
         VGA_OUTPUT = P_yellow;
-    end else if(SHOW_LEVELS == 1'b1 && vcnt == (TRIGGER_LEVEL+1'b1+10'd31) && hcnt >= 10'd700 && hcnt <= 10'd702) begin
+    end else if(SHOW_LEVELS == 1'b1 && vcnt == (TRIGGER_LEVEL-1'b1+10'd31) && hcnt >= 10'd700 && hcnt <= 10'd702) begin
         VGA_OUTPUT = P_yellow;
-    end else if(SHOW_LEVELS == 1'b1 && vcnt == (TRIGGER_LEVEL-1'b1+10'd31) && hcnt == 10'd701) begin
+    end else if(SHOW_LEVELS == 1'b1 && vcnt == (TRIGGER_LEVEL+1'b1+10'd31) && hcnt == 10'd701) begin
         VGA_OUTPUT = P_yellow;
 ///*
     //------------------------------------------------------------------------------//
ParseResult:
UPD HdlStmIf@@ to 
    MOV tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: AND_LOG
                            list: ops
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: SHOW_LEVELS
                                        HdlValueInt: 1
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: vcnt
                                        HdlOp: ADD
                                            list: ops
                                                HdlOp: ADD
                                                    list: ops
                                                        HdlValueId: TRIGGER_LEVEL
                                                        HdlValueInt: 1
                                                HdlValueInt: 31
                        HdlOp: GE
                            list: ops
                                HdlValueId: hcnt
                                HdlValueInt: 700
                HdlOp: LE
                    list: ops
                        HdlValueId: hcnt
                        HdlValueInt: 702
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: VGA_OUTPUT
                        HdlValueId: P_yellow
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: SHOW_LEVELS
                                    HdlValueInt: 1
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: vcnt
                                    HdlOp: ADD
                                        list: ops
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: TRIGGER_LEVEL
                                                    HdlValueInt: 1
                                            HdlValueInt: 31
                    HdlOp: GE
                        list: ops
                            HdlValueId: hcnt
                            HdlValueInt: 700
            HdlOp: LE
                list: ops
                    HdlValueId: hcnt
                    HdlValueInt: 702
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlOp@@AND_LOG to ops
        HdlOp: AND_LOG
            list: ops
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlValueId: SHOW_LEVELS
                                HdlValueInt: 1
                        HdlOp: EQ
                            list: ops
                                HdlValueId: vcnt
                                HdlOp: ADD
                                    list: ops
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: TRIGGER_LEVEL
                                                HdlValueInt: 1
                                        HdlValueInt: 31
                HdlOp: GE
                    list: ops
                        HdlValueId: hcnt
                        HdlValueInt: 700
        UPD HdlOp@@AND_LOG to AND_LOG
            MOV HdlOp@@GE to ops
            HdlOp: GE
                list: ops
                    HdlValueId: hcnt
                    HdlValueInt: 700
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlOp: EQ
                        list: ops
                            HdlValueId: SHOW_LEVELS
                            HdlValueInt: 1
                    HdlOp: EQ
                        list: ops
                            HdlValueId: vcnt
                            HdlOp: ADD
                                list: ops
                                    HdlOp: SUB
                                        list: ops
                                            HdlValueId: TRIGGER_LEVEL
                                            HdlValueInt: 1
                                    HdlValueInt: 31
            HdlOp: EQ
                list: ops
                    HdlValueId: hcnt
                    HdlValueInt: 701
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: hcnt
                HdlValueInt: 701


CommitId: e27e066fbf95d4c03b010ad10b30dd35e1e3375a
This commit was generated by cvs2svn to compensate for changes in r5, which
--- a/d_TopLevel.v
+++ b/d_TopLevel.v
@@ -77,14 +95,13 @@ assign TIME_BASE = 6'b0;
 //==================================================================//
 wire[17:0] VGA_RAM_ADDRESS_w;
 wire[15:0] VGA_RAM_DATA_w;
+wire L_BUTTON, R_BUTTON, M_BUTTON;
 
 wire VGA_RAM_ACCESS_OK;
 wire CLK_50MHZ, CLK_64MHZ, CLK180_64MHZ;
 wire[6:0] SEG_OUT;
 wire[3:0] SEG_SEL;
 
-wire TEST_in_range_Trig;
-
 sub_SegDriver segs(
     .CLK_50MHZ(CLK_50MHZ), .MASTER_RST(MASTER_RST),
     .DATA_IN(),

ParseResult:
DEL HdlIdDef@@TEST_in_range_Trig from objs
HdlIdDef: TEST_in_range_Trig
    HdlDirection: INTERNAL


CommitId: e27e066fbf95d4c03b010ad10b30dd35e1e3375a
This commit was generated by cvs2svn to compensate for changes in r5, which
--- a/d_TopLevel.v
+++ b/d_TopLevel.v
@@ -95,7 +112,7 @@ wire[7:0] leds;
 assign leds[0] = L_BUTTON;
 assign leds[1] = M_BUTTON;
 assign leds[2] = R_BUTTON;
-assign leds[3] = TEST_in_range_Trig;
+assign leds[3] = 1'b0;
 assign leds[7:4] = 4'b0;
 //==================================================================//
 // SUBROUTINES                                                      //

ParseResult:
UPD HdlStmAssign@@ to 
    DEL HdlValueId@@TEST_in_range_Trig from 


CommitId: e27e066fbf95d4c03b010ad10b30dd35e1e3375a
This commit was generated by cvs2svn to compensate for changes in r5, which
--- a/d_TopLevel.v
+++ b/d_TopLevel.v
@@ -112,8 +129,7 @@ d_DCM clock_generator(
     );
 
 wire[11:0] XCOORD, YCOORD;
-wire L_BUTTON, R_BUTTON, M_BUTTON;
-wire[8:0] TRIGGER_LEVEL;
+wire[9:0] TRIGGER_LEVEL;
 Driver_mouse driver_MOUSE(
     .CLK_50MHZ(CLK_50MHZ), .MASTER_RST(MASTER_RST),
     .PS2C(PS2C), .PS2D(PS2D),

ParseResult:
MOV HdlIdDef@@L_BUTTON to objs
HdlIdDef: L_BUTTON
    HdlDirection: INTERNAL

MOV HdlIdDef@@R_BUTTON to objs
HdlIdDef: R_BUTTON
    HdlDirection: INTERNAL

MOV HdlIdDef@@M_BUTTON to objs
HdlIdDef: M_BUTTON
    HdlDirection: INTERNAL

UPD HdlIdDef@@TRIGGER_LEVEL to TRIGGER_LEVEL
    UPD HdlOp@@PARAMETRIZATION to INDEX
    MOV HdlOp@@PARAMETRIZATION to TRIGGER_LEVEL
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 8
                    HdlValueInt: 0
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlValueId@@wire to TRIGGER_LEVEL


CommitId: af37ab1b96fb3ca771b6d1aae7bc4ba53bba5716
This commit was generated by cvs2svn to compensate for changes in r27, which
--- a/AdcDriver/d_Driver_ADC.v
+++ b/AdcDriver/d_Driver_ADC.v
@@ -12,7 +12,7 @@
 
 module Driver_ADC(
     CLK_64MHZ, MASTER_RST,
-    TIME_BASE,
+    TIMESCALE,
     CLK_ADC, ADC_DATA,
     DATA_OUT
     );

ParseResult:
UPD HdlIdDef@@TIME_BASE to TIMESCALE

UPD HdlIdDef@@CLK_ADC to CLK_ADC
    INS HdlOp@@PARAMETRIZATION to CLK_ADC
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg

UPD HdlIdDef@@TIME_BASE to TIME_BASE
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@5 to 3


CommitId: af37ab1b96fb3ca771b6d1aae7bc4ba53bba5716
This commit was generated by cvs2svn to compensate for changes in r27, which
--- a/AdcDriver/d_Driver_ADC.v
+++ b/AdcDriver/d_Driver_ADC.v
@@ -86,9 +86,9 @@ always @ (posedge CLK_ADC or posedge MASTER_RST) begin
     if(MASTER_RST)  DATA_OUT <= 9'b0;
     else            DATA_OUT <= ADC_DATA;
 end
-
+/*
 assign CLK_ADC = CLK_62KHZ;
-
+*/
 
 //------------------------------------------------------------------//
 // CLOCK GENERATION AND SELECTION                                   //

ParseResult:
DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: CLK_62KHZ
    HdlValueId: CLK_ADC


CommitId: 757d7e03acf440c2f240625cf86c6448cbc13bde
This commit was generated by cvs2svn to compensate for changes in r17, which
--- a/d_TopLevel.v
+++ b/d_TopLevel.v
@@ -109,6 +109,8 @@ reg[7:0] data_charRamRead_buf;
 wire[7:0] mask_charMap;
 reg[7:0] mask_charMap_buf;
 
+wire[1:0] sm_trig;
+
 always @ (posedge CLK_50MHZ) begin
     if(R_BUTTON) begin
         data_charRamRead_buf <= data_charRamRead_buf;

ParseResult:
INS HdlIdDef@@sm_trig to objs
HdlIdDef: sm_trig
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 757d7e03acf440c2f240625cf86c6448cbc13bde
This commit was generated by cvs2svn to compensate for changes in r17, which
--- a/d_TopLevel.v
+++ b/d_TopLevel.v
@@ -126,7 +128,20 @@ sub_SegDriver segs(
     );
 
 wire[7:0] leds;
-assign leds = mask_charMap_buf;
+assign leds[1:0] = sm_trig;
+assign leds[7:2] = 6'b0;
+
+/*- - - - - - - - - - - - - */
+/* Fake ADC data            */
+/*- - - - - - - - - - - - - */
+reg[7:0] fake_adcData;
+always @ (posedge CLK_VGA or posedge MASTER_RST) begin
+    if(MASTER_RST)
+        fake_adcData <= 8'd0;
+    else
+        fake_adcData <= fake_adcData+1;
+end
+
 
 //==================================================================//
 // SUBROUTINES                                                      //

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: leds
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 2

INS HdlIdDef@@fake_adcData to objs
HdlIdDef: fake_adcData
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmProcess@@ to objs
HdlStmProcess
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: CLK_VGA
        HdlOp: RISING
            list: ops
                HdlValueId: MASTER_RST
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: MASTER_RST
                HdlStmAssign: if_true
                    HdlValueInt: 0
                    HdlValueId: fake_adcData
                list: elifs
                HdlStmAssign: if_false
                    HdlOp: ADD
                        list: ops
                            HdlValueId: fake_adcData
                            HdlValueInt: 1
                    HdlValueId: fake_adcData

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@mask_charMap_buf to sm_trig
    MOV HdlValueId@@leds to 
    HdlValueId: leds

UPD HdlStmAssign@@ to 
    INS HdlOp@@INDEX to 
    UPD HdlOp@@INDEX to INDEX
        INS list@@ops to INDEX
        INS HdlOp@@DOWNTO to ops
        HdlOp: DOWNTO
            list: ops
                HdlValueInt: 1
                HdlValueInt: 0


CommitId: af37ab1b96fb3ca771b6d1aae7bc4ba53bba5716
This commit was generated by cvs2svn to compensate for changes in r27, which
--- a/Mouse/d_DriverMouse.v
+++ b/Mouse/d_DriverMouse.v
@@ -174,13 +191,17 @@ always @ (posedge CLK_ps2c_debounced or posedge MASTER_RST) begin
         YCOORD <= 12'd199;
     end else if(Counter_bits == 6'd32 && (data_in_buf[8] == 1'b0)) begin
         if(data_in_buf[6] == 1'b0) begin
-            if((YCOORD + ycoord_buf) >= 11'd479)
-                YCOORD <= 12'd479;
+            if( (YCOORD < 12'd401) && ((YCOORD + ycoord_buf) >= 12'd401) )
+                YCOORD <= 12'd400;
+            else if( ((YCOORD >= 12'd441) /*&& (YCOORD <= 12'd520)*/) && ((YCOORD + ycoord_buf) > 12'd520) )
+                YCOORD <= (YCOORD + ycoord_buf) - 12'd521;
             else
                 YCOORD <= YCOORD + ycoord_buf;
         end else begin
-            if(YCOORD <= ycoord_buf)
-                YCOORD <= 12'd0;
+            if( /*(YCOORD < 12'd401) &&*/ (YCOORD < ycoord_buf) )
+                YCOORD <= 12'd521 - ycoord_buf;
+            else if( (YCOORD >= 12'd441) && ((YCOORD-12'd441) < ycoord_buf) )
+                YCOORD <= 12'd441;
             else
                 YCOORD <= YCOORD - ycoord_buf;
         end
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@LE to LT

UPD HdlStmAssign@@if_true to if_true
    UPD HdlValueInt@@479 to 400

UPD HdlStmIf@@ to 
    MOV HdlOp@@GE to 
    HdlOp: GE
        list: ops
            HdlOp: ADD
                list: ops
                    HdlValueId: YCOORD
                    HdlValueId: ycoord_buf
            HdlValueInt: 479
    UPD HdlOp@@GE to GE
        UPD HdlValueInt@@479 to 401

UPD HdlStmAssign@@if_true to if_true
    UPD HdlValueInt@@0 to 521
    MOV HdlValueInt@@0 to if_true
    HdlValueInt: 0


CommitId: 84e05684a656a03410f47fe7fac599f8ecb6017c
This commit was generated by cvs2svn to compensate for changes in r21, which
--- a/AdcDriver/d_Driver_ADC.v
+++ b/AdcDriver/d_Driver_ADC.v
@@ -13,7 +13,7 @@
 module Driver_ADC(
     CLK_64MHZ, MASTER_RST,
     TIME_BASE,
-    ADC_CLK, ADC_DATA,
+    CLK_ADC, ADC_DATA,
     DATA_OUT
     );
 

ParseResult:
UPD HdlIdDef@@ADC_CLK to CLK_ADC

UPD HdlIdDef@@ADC_DATA to ADC_DATA
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@7 to 8

UPD HdlIdDef@@DATA_OUT to DATA_OUT
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@7 to 8

UPD HdlIdDef@@ADC_CLK to ADC_CLK
    DEL HdlOp@@PARAMETRIZATION from ADC_CLK
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg


CommitId: 84e05684a656a03410f47fe7fac599f8ecb6017c
This commit was generated by cvs2svn to compensate for changes in r21, which
--- a/AdcDriver/d_Driver_ADC.v
+++ b/AdcDriver/d_Driver_ADC.v
@@ -79,14 +82,17 @@ reg [7:0] DATA_OUT;
 // FUNCTIONAL DEFINITIONS                                           //
 //==================================================================//
 
+always @ (posedge CLK_ADC or posedge MASTER_RST) begin
+    if(MASTER_RST)  DATA_OUT <= 9'b0;
+    else            DATA_OUT <= ADC_DATA;
+end
+
+assign CLK_ADC = CLK_62KHZ;
 
 
 //------------------------------------------------------------------//
 // CLOCK GENERATION AND SELECTION                                   //
 //------------------------------------------------------------------//
-reg[15:0] Counter_CLK;
-wire CLK_32MHZ, CLK_16MHZ, CLK_8MHZ, CLK_4MHZ, CLK_2MHZ, CLK_1MHZ, CLK_500KHZ, CLK_250KHZ, CLK_125KHZ,
-     CLK_62KHZ, CLK_31KHZ, CLK_16KHZ, CLK_8KHZ, CLK_4KHZ, CLK_2KHZ, CLK_1KHZ;
 
 always @ (posedge CLK_64MHZ or posedge MASTER_RST) begin
     if(MASTER_RST == 1'b1) begin

ParseResult:
INS HdlStmProcess@@ to objs

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: CLK_62KHZ
    HdlValueId: CLK_ADC

UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: MASTER_RST
                HdlStmAssign: if_true
                    HdlValueInt: 0
                    HdlValueId: DATA_OUT
                list: elifs
                HdlStmAssign: if_false
                    HdlValueId: ADC_DATA
                    HdlValueId: DATA_OUT


CommitId: 84e05684a656a03410f47fe7fac599f8ecb6017c
This commit was generated by cvs2svn to compensate for changes in r21, which
--- a/AdcDriver/d_Driver_ADC.v
+++ b/AdcDriver/d_Driver_ADC.v
@@ -188,7 +195,7 @@ always @ (negedge ADC_CLK or posedge MASTER_RST) begin
 end
 
 //assign DATA_OUT = ADC_DATA;
-
+*/
 endmodule
 
 
ParseResult:
UPD HdlStmProcess@@ to 
    MOV list@@sensitivity to 
    list: sensitivity
        HdlOp: FALLING
            list: ops
                HdlValueId: ADC_CLK
        HdlOp: RISING
            list: ops
                HdlValueId: MASTER_RST
    UPD HdlOp@@FALLING to RISING
    UPD HdlOp@@FALLING to FALLING
        UPD HdlValueId@@ADC_CLK to CLK_ADC
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlValueId: MASTER_RST
                        HdlValueInt: 1
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: DATA_OUT
                list: elifs
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: ADC_DATA
                            HdlValueId: DATA_OUT

DEL HdlStmProcess@@ from objs


CommitId: af37ab1b96fb3ca771b6d1aae7bc4ba53bba5716
This commit was generated by cvs2svn to compensate for changes in r27, which
--- a/UserInput/d_MouseInput.v
+++ b/UserInput/d_MouseInput.v
@@ -31,15 +31,20 @@
 module Driver_MouseInput(
     CLK_50MHZ, MASTER_RST,
     XCOORD, YCOORD, L_BUTTON, R_BUTTON, M_BUTTON,
-    TRIGGER_LEVEL
+    TRIGGER_LEVEL, VERT_OFFSET, HORZ_OFFSET,
+    TIMESCALE, TRIGGERSTYLE
     );
 
 
 //==================================================================//
 // PARAMETER DEFINITIONS                                            //
 //==================================================================//
-parameter P_trigger_clickLimit_left     = 10'd556;
-parameter P_trigger_clickLimit_right    = 10'd558;
+parameter P_clickLimit_left     = 10'd556;
+parameter P_clickLimit_right    = 10'd558;
+parameter P_clickLimit_leftV    = 10'd559;
+parameter P_clickLimit_rightV   = 10'd561;
+parameter P_clickLimit_top      = 10'd102;
+parameter P_clickLimit_bot      = 10'd100;
 
 
 //==================================================================//

ParseResult:
UPD HdlIdDef@@P_trigger_clickLimit_left to P_clickLimit_left

UPD HdlIdDef@@P_trigger_clickLimit_right to P_clickLimit_right

INS HdlIdDef@@P_clickLimit_leftV to params
HdlIdDef: P_clickLimit_leftV
    HdlValueInt: 559
    HdlDirection: INTERNAL

INS HdlIdDef@@P_clickLimit_rightV to params
HdlIdDef: P_clickLimit_rightV
    HdlValueInt: 561
    HdlDirection: INTERNAL

INS HdlIdDef@@P_clickLimit_top to params
HdlIdDef: P_clickLimit_top
    HdlValueInt: 102
    HdlDirection: INTERNAL

INS HdlIdDef@@P_clickLimit_bot to params
HdlIdDef: P_clickLimit_bot
    HdlValueInt: 100
    HdlDirection: INTERNAL

INS HdlIdDef@@VERT_OFFSET to ports
HdlIdDef: VERT_OFFSET
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 9
                    HdlValueInt: 0
    HdlDirection: OUT

INS HdlIdDef@@HORZ_OFFSET to ports
HdlIdDef: HORZ_OFFSET
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 9
                    HdlValueInt: 0
    HdlDirection: OUT

INS HdlIdDef@@TIMESCALE to ports
HdlIdDef: TIMESCALE
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 3
                    HdlValueInt: 0
    HdlDirection: OUT

INS HdlIdDef@@TRIGGERSTYLE to ports
HdlIdDef: TRIGGERSTYLE
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: OUT


CommitId: 757d7e03acf440c2f240625cf86c6448cbc13bde
This commit was generated by cvs2svn to compensate for changes in r17, which
--- a/VGA/d_VGAdriver.v
+++ b/VGA/d_VGAdriver.v
@@ -37,7 +37,7 @@ module Driver_VGA(
     VGA_RAM_OE, VGA_RAM_WE, VGA_RAM_CS,
     VGA_RAM_ACCESS_OK,
     H_SYNC, V_SYNC, VGA_OUTPUT,
-    XCOORD, YCOORD, ram_vshift,
+    XCOORD, YCOORD,
     TRIGGER_LEVEL,
     SHOW_LEVELS,
     HCNT, VCNT,

ParseResult:
MOV HdlIdDef@@ram_vshift to ports
HdlIdDef: ram_vshift
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 757d7e03acf440c2f240625cf86c6448cbc13bde
This commit was generated by cvs2svn to compensate for changes in r17, which
--- a/VGA/d_VGAdriver.v
+++ b/VGA/d_VGAdriver.v
@@ -176,16 +176,20 @@ always @ (hcnt or vcnt or XCOORD or YCOORD or MASTER_RST or vga_out or SHOW_LEVE
     end else if(SHOW_LEVELS == 1'b1 && vcnt == (TRIGGER_LEVEL-1'b1) && hcnt == 10'd557) begin
         VGA_OUTPUT = P_yellow;
     //------------------------------------------------------------------------------//
-    // MOVE THE WAVEFORM TO THE 'TOP'                                               //
-    end else if(vga_out != 0) begin
-        VGA_OUTPUT = vga_out;
-    //------------------------------------------------------------------------------//
     // TOP, BOTTOM, LEFT AND RIGHT GRID LINES                                       //
     end else if(vcnt == 10'd0 || vcnt == 10'd399 || vcnt == 10'd441) begin
         VGA_OUTPUT = P_cyan;
     end else if(hcnt == 10'd0 || hcnt == 10'd639) begin
         VGA_OUTPUT = P_cyan;
     //------------------------------------------------------------------------------//
+    // CHARACTER DISPLAY
+    end else if(vcnt <= 10'd520 && vcnt >= 10'd441) begin
+        VGA_OUTPUT = RGB_CHAR;
+    //------------------------------------------------------------------------------//
+    // THE WAVEFORM                                                                 //
+    end else if(vga_out != 0) begin
+        VGA_OUTPUT = vga_out;
+    //------------------------------------------------------------------------------//
     // MIDDLE GRID LINES (dashed at 8pxls)                                          //
     end else if(vcnt == 10'd199 && hcnt[3] == 1'b1) begin
         VGA_OUTPUT = P_cyan;

ParseResult:
UPD HdlStmIf@@ to 
    MOV tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: LE
                    list: ops
                        HdlValueId: vcnt
                        HdlValueInt: 520
                HdlOp: GE
                    list: ops
                        HdlValueId: vcnt
                        HdlValueInt: 441
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: VGA_OUTPUT
                        HdlValueId: RGB_CHAR
    MOV tuple@@ to elifs
    tuple
        HdlOp: NE
            list: ops
                HdlValueId: vga_out
                HdlValueInt: 0
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: VGA_OUTPUT
                        HdlValueId: vga_out


CommitId: 757d7e03acf440c2f240625cf86c6448cbc13bde
This commit was generated by cvs2svn to compensate for changes in r17, which
--- a/VGA/d_VGAdriver.v
+++ b/VGA/d_VGAdriver.v
@@ -200,10 +204,6 @@ always @ (hcnt or vcnt or XCOORD or YCOORD or MASTER_RST or vga_out or SHOW_LEVE
     end else if(((hcnt[5:0] == 6'b111111) && (vcnt <= 10'd399)) && (vcnt[2] == 1'b1)) begin
         VGA_OUTPUT = P_cyan;
     //------------------------------------------------------------------------------//
-    // CHARACTER DISPLAY
-    end else if(vcnt <= 10'd520 && vcnt >= 10'd441) begin
-        VGA_OUTPUT = RGB_CHAR;
-    //------------------------------------------------------------------------------//
     // OTHERWISE...                                                                 //
     end else
         VGA_OUTPUT = P_black;

ParseResult:
UPD HdlStmIf@@ to 
    MOV tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: LE
                    list: ops
                        HdlValueId: vcnt
                        HdlValueInt: 520
                HdlOp: GE
                    list: ops
                        HdlValueId: vcnt
                        HdlValueInt: 441
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: VGA_OUTPUT
                        HdlValueId: RGB_CHAR
    MOV tuple@@ to elifs
    tuple
        HdlOp: NE
            list: ops
                HdlValueId: vga_out
                HdlValueInt: 0
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: VGA_OUTPUT
                        HdlValueId: vga_out


CommitId: 757d7e03acf440c2f240625cf86c6448cbc13bde
This commit was generated by cvs2svn to compensate for changes in r17, which
--- a/VGA/d_VGAdriver.v
+++ b/VGA/d_VGAdriver.v
@@ -228,7 +228,7 @@ always @ (posedge CLK_25MHZ or posedge MASTER_RST) begin
         ram_vshift <= 16'h8000;
     end else if(vcnt > 10'd399) begin
         ram_vshift <= 16'h8000;
-    end else if((vcnt <= 10'd399) && (hcnt == 10'd655)) begin
+    end else if(/*(vcnt <= 10'd399) && */(hcnt == 10'd640)) begin
         if(ram_vshift == 16'h0001)
             ram_vshift <= 16'h8000;
         else

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: hcnt
                HdlValueInt: 655
        UPD HdlOp@@LE to GT
        MOV HdlOp@@LE to ops
        HdlOp: LE
            list: ops
                HdlValueId: vcnt
                HdlValueInt: 399
        UPD HdlOp@@EQ to EQ
            UPD HdlValueInt@@655 to 640
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 


CommitId: 757d7e03acf440c2f240625cf86c6448cbc13bde
This commit was generated by cvs2svn to compensate for changes in r17, which
--- a/VGA/d_VGAdriver.v
+++ b/VGA/d_VGAdriver.v
@@ -239,13 +239,13 @@ end
 
 always @ (posedge CLK_25MHZ or posedge MASTER_RST) begin
     if(MASTER_RST == 1'b1) begin
-        ram_vcnt <= 5'd0;
-    end else if(vcnt < 10'd30) begin
-        ram_vcnt <= 5'd0;
-    end else if((vcnt >= 10'd30) && (hcnt == 10'd655) && (ram_vshift == 16'h0001)) begin
+        ram_vcnt <= 5'd24;//5'b0
+    end else if(vcnt > 10'd399) begin
+        ram_vcnt <= 5'd24;
+    end else if(/*(vcnt >= 10'd30) &&*/ (hcnt == 10'd640) && (ram_vshift == 16'h0001)) begin
         if(ram_vcnt == 5'd0)
             ram_vcnt <= 5'd24;
-else
+        else
             ram_vcnt <= ram_vcnt - 1'b1;
     end else begin
         ram_vcnt <= ram_vcnt;

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@0 to 24

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            MOV HdlOp@@EQ to ops
            HdlOp: EQ
                list: ops
                    HdlValueId: hcnt
                    HdlValueInt: 655
            UPD HdlOp@@EQ to EQ
                UPD HdlValueInt@@655 to 640
            DEL HdlOp@@GE from ops
            HdlOp: GE
                list: ops
                    HdlValueId: vcnt
                    HdlValueInt: 30
            DEL list@@ops from AND_LOG
        DEL HdlOp@@AND_LOG from ops
    DEL HdlOp@@LT from 
    HdlOp: LT
        list: ops
            HdlValueId: vcnt
            HdlValueInt: 30

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@0 to 24


CommitId: 757d7e03acf440c2f240625cf86c6448cbc13bde
This commit was generated by cvs2svn to compensate for changes in r17, which
--- a/VGA/d_VGAdriver.v
+++ b/VGA/d_VGAdriver.v
@@ -278,7 +279,7 @@ end
 // ALL CLEAR?                                                       //
 //------------------------------------------------------------------//
 always @ (vcnt) begin
-    if((vcnt >= 10'd400) && (vcnt <= 10'd440))
+    if(vcnt > 10'd399)
         VGA_RAM_ACCESS_OK = 1'b1;
     else
         VGA_RAM_ACCESS_OK = 1'b0;
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@GE to GT
        MOV HdlOp@@GE to ops
        HdlOp: GE
            list: ops
                HdlValueId: vcnt
                HdlValueInt: 400
        UPD HdlOp@@GE to GE
            UPD HdlValueInt@@400 to 399
        DEL HdlOp@@LE from ops
        HdlOp: LE
            list: ops
                HdlValueId: vcnt
                HdlValueInt: 440
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 


CommitId: 84e05684a656a03410f47fe7fac599f8ecb6017c
This commit was generated by cvs2svn to compensate for changes in r21, which
--- a/VGA/d_VgaRamBuffer.v
+++ b/VGA/d_VgaRamBuffer.v
@@ -14,8 +14,7 @@ module VGADataBuffer(
     VGA_RAM_DATA, VGA_RAM_ADDR, VGA_RAM_OE, VGA_RAM_WE, VGA_RAM_CS,
     VGA_RAM_ACCESS_OK,
     ADC_RAM_DATA, ADC_RAM_ADDR, ADC_RAM_CLK,
-    TIME_BASE,
-    TRIG_ADDR, VGA_WRITE_DONE
+    TIME_BASE
     );
 //==================================================================//
 // VARIABLE DEFINITIONS                                             //

ParseResult:
UPD HdlIdDef@@ADC_RAM_DATA to ADC_RAM_DATA
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@7 to 8

DEL HdlIdDef@@TRIG_ADDR from ports
HdlIdDef: TRIG_ADDR
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 10
                    HdlValueInt: 0
    HdlDirection: IN

DEL HdlIdDef@@VGA_WRITE_DONE from ports
HdlIdDef: VGA_WRITE_DONE
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: OUT


CommitId: 84e05684a656a03410f47fe7fac599f8ecb6017c
This commit was generated by cvs2svn to compensate for changes in r21, which
--- a/VGA/d_VgaRamBuffer.v
+++ b/VGA/d_VgaRamBuffer.v
@@ -99,22 +92,6 @@ always @ (posedge CLK_50MHZ or posedge MASTER_RST) begin
     end
 end
 
-/* VGA_WRITE_DONE -> BASED ON hcnt */
-always @ (hcnt) begin
-    if(hcnt == 10'd640)
-        VGA_WRITE_DONE = 1'b1;
-    else
-        VGA_WRITE_DONE = 1'b0;
-end
-
-/* TRIG_ADDR modified */
-always @ (TRIG_ADDR) begin
-    if(TRIG_ADDR < 10'd320)
-        TRIG_ADDR_buffered = (11'd2047 - 10'd320) - TRIG_ADDR;
-    else
-        TRIG_ADDR_buffered = TRIG_ADDR;
-end
-        
 
 always @ (posedge CLK_50MHZ or posedge MASTER_RST) begin
     if(MASTER_RST == 1'b1) begin

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlValueInt@@1727 to 

DEL HdlStmProcess@@ from objs
HdlStmProcess
    list: sensitivity
        HdlValueId: hcnt
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlValueId: hcnt
                        HdlValueInt: 640
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: VGA_WRITE_DONE
                        HdlValueInt: 1
                list: elifs
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: VGA_WRITE_DONE
                        HdlValueInt: 0

DEL HdlStmProcess@@ from objs
HdlStmProcess
    list: sensitivity
        HdlValueId: TRIG_ADDR
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: LT
                    list: ops
                        HdlValueId: TRIG_ADDR
                        HdlValueInt: 320
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: TRIG_ADDR_buffered
                        HdlOp: SUB
                            list: ops
                                HdlOp: SUB
                                    list: ops
                                        HdlValueInt: 2047
                                        HdlValueInt: 320
                                HdlValueId: TRIG_ADDR
                list: elifs
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: TRIG_ADDR_buffered
                        HdlValueId: TRIG_ADDR


CommitId: 84e05684a656a03410f47fe7fac599f8ecb6017c
This commit was generated by cvs2svn to compensate for changes in r21, which
--- a/VGA/d_VgaRamBuffer.v
+++ b/VGA/d_VgaRamBuffer.v
@@ -125,7 +102,7 @@ always @ (posedge CLK_50MHZ or posedge MASTER_RST) begin
         else
             ADC_RAM_ADDR <= ADC_RAM_ADDR + 1'b1;
     end else begin
-        ADC_RAM_ADDR <= TRIG_ADDR_buffered;
+        ADC_RAM_ADDR <= 11'd1727;
     end
 end
 
ParseResult:
UPD HdlStmAssign@@ to 
    DEL HdlValueId@@TRIG_ADDR_buffered from 


CommitId: af37ab1b96fb3ca771b6d1aae7bc4ba53bba5716
This commit was generated by cvs2svn to compensate for changes in r27, which
--- a/VGA/CharDecode/d_CharDecode.v
+++ b/VGA/CharDecode/d_CharDecode.v
@@ -31,7 +31,9 @@
 module CharacterDisplay(
     MASTER_CLK, MASTER_RST,
     CLK_VGA, HCNT, VCNT,
-    RGB_OUT
+    RGB_OUT,
+    TIMESCALE, TRIGGERSTYLE,
+    XCOORD, YCOORD
     );
                                                                     
 //==================================================================//

ParseResult:
INS HdlIdDef@@TIMESCALE to ports
HdlIdDef: TIMESCALE
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 3
                    HdlValueInt: 0
    HdlDirection: IN

INS HdlIdDef@@TRIGGERSTYLE to ports
HdlIdDef: TRIGGERSTYLE
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: IN

INS HdlIdDef@@XCOORD to ports
HdlIdDef: XCOORD
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 11
                    HdlValueInt: 0
    HdlDirection: IN

INS HdlIdDef@@YCOORD to ports
HdlIdDef: YCOORD
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 11
                    HdlValueInt: 0
    HdlDirection: IN

UPD HdlModuleDef@@CharacterDisplay to CharacterDisplay
    MOV HdlStmBlock@@SEQ to objs
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: data_time
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 7
                                    HdlValueInt: 4
                    HdlValueInt: 0


CommitId: af37ab1b96fb3ca771b6d1aae7bc4ba53bba5716
This commit was generated by cvs2svn to compensate for changes in r27, which
--- a/VGA/CharDecode/d_CharDecode.v
+++ b/VGA/CharDecode/d_CharDecode.v
@@ -56,14 +58,22 @@ input CLK_VGA;                  // Pixel Clk
 input[9:0] HCNT;                // Horizontal Sync Counter
 input[9:0] VCNT;                // Vertical Sync Counter
 output[2:0] RGB_OUT;            // The RGB data
+input[3:0] TIMESCALE;           // TIMESCALE display
+input[1:0] TRIGGERSTYLE;        // Style of Trigger
+input[11:0] XCOORD;             // XCOORD display
+input[11:0] YCOORD;             // XCOORD display
+
 
 
 //----------------------//
 // WIRES / NODES        //
 //----------------------//
 wire MASTER_CLK, MASTER_RST, CLK_VGA;
-wire[9:0] HCNT, VCNT;
-reg[2:0]  RGB_OUT;
+wire[9:0]  HCNT, VCNT;
+reg [2:0]  RGB_OUT;
+wire[3:0]  TIMESCALE;
+wire[1:0]  TRIGGERSTYLE;
+wire[11:0] XCOORD, YCOORD;
 
 
 

ParseResult:
UPD HdlModuleDef@@CharacterDisplay to CharacterDisplay
    MOV HdlStmBlock@@SEQ to objs
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: data_time
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 7
                                    HdlValueInt: 4
                    HdlValueInt: 0


CommitId: af37ab1b96fb3ca771b6d1aae7bc4ba53bba5716
This commit was generated by cvs2svn to compensate for changes in r27, which
--- a/VGA/CharDecode/d_CharDecode.v
+++ b/VGA/CharDecode/d_CharDecode.v
@@ -191,7 +201,7 @@ assign addr_charMap = ((data_charRamRead * 8'd5) + cnt_charPxls);
 //- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - //
 reg[2:0] rgb_buf;
 
-always @ (mask_charMap or data_charMap) begin
+always @ (mask_charMap or data_charMap or charRow1 or charRow2 or charRow3 or charRow4 or charRow5 or charRow6 or charRow7 or charRow8 or cnt_charPxls or HCNT) begin
     if((charRow1 | charRow2 | charRow3 | charRow4 | charRow5 | charRow6 | charRow7 | charRow8) && ((mask_charMap & data_charMap) != 8'b0) && (cnt_charPxls != 4'd5) && (HCNT >= 10'd2) && (HCNT <= 10'd637))
         rgb_buf = P_yellow;
     else

ParseResult:
UPD HdlModuleDef@@CharacterDisplay to CharacterDisplay
    MOV HdlStmBlock@@SEQ to objs
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: data_time
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 7
                                    HdlValueInt: 4
                    HdlValueInt: 0


CommitId: af37ab1b96fb3ca771b6d1aae7bc4ba53bba5716
This commit was generated by cvs2svn to compensate for changes in r27, which
--- a/VGA/CharDecode/d_CharDecode.v
+++ b/VGA/CharDecode/d_CharDecode.v
@@ -276,10 +270,12 @@ RAMB16_S9_S9 #(
       .INIT_03(256'h9090607C8282827CFe403804FeFe402040FeFe02020206Fe102844828482FC80),
 //                  VVVVVVVVVVUUUUUUUUUUTTTTTTTTTTSSSSSSSSSSRRRRRRRRRRQQQQQQQQQQPPPP
       .INIT_04(256'hf8040204f8fC020202fCC080Fe80C0649292924c7e909894627C828A7C027C90),
-//                      !!!!!!!!!!--space---ZZZZZZZZZZYYYYYYYYYYXXXXXXXXXWWWWWWWWWWW
-      .INIT_05(256'h000000f6f600000000000000868aa2a2c2c0201e20c0c628102cC6Fe040804Fe),
-      .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
-      .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
+//                  BLOC!!!!!!!!!!--space---ZZZZZZZZZZYYYYYYYYYYXXXXXXXXXWWWWWWWWWWW
+      .INIT_05(256'hffff00f6f600000000000000868a92a2c2c0201e20c0c628102cC6Fe040804Fe),
+//                  TrigUp-|//////////\\\\\\\\\\::::::::::|---DN---||---UP---|BLOCKB
+      .INIT_06(256'h147c5040020C1060808060100C02006C6C0000181c1e1c183070f07030FFFFFF),
+//                                                  |-TSelDN-||-TrigDN-||-TSelUP-||-
+      .INIT_07(256'h00000000000000000000000000000000beae82eafa40507c1404faea82aebe04),
       .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
       .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
       .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),

ParseResult:
UPD HdlModuleDef@@CharacterDisplay to CharacterDisplay
    MOV HdlStmBlock@@SEQ to objs
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: data_time
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 7
                                    HdlValueInt: 4
                    HdlValueInt: 0


CommitId: af37ab1b96fb3ca771b6d1aae7bc4ba53bba5716
This commit was generated by cvs2svn to compensate for changes in r27, which
--- a/VGA/CharDecode/d_CharDecode.v
+++ b/VGA/CharDecode/d_CharDecode.v
@@ -425,7 +546,7 @@ RAMB16_S9_S9 #(
     .WEA(VCC),              .WEB(GND),
     .SSRA(GND),             .SSRB(GND)
     );
-
+*/
 
 
 
ParseResult:
UPD HdlModuleDef@@CharacterDisplay to CharacterDisplay
    MOV HdlStmBlock@@SEQ to objs
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: data_time
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 7
                                    HdlValueInt: 4
                    HdlValueInt: 0


CommitId: 757d7e03acf440c2f240625cf86c6448cbc13bde
This commit was generated by cvs2svn to compensate for changes in r17, which
--- a/AdcDriver/d_Driver_ADC.v
+++ b/AdcDriver/d_Driver_ADC.v
@@ -179,7 +179,6 @@ end
 //------------------------------------------------------------------//
 // ADC DATA READING                                                 //
 //------------------------------------------------------------------//
-/*
 always @ (negedge ADC_CLK or posedge MASTER_RST) begin
     if(MASTER_RST == 1'b1) begin
         DATA_OUT <= 8'b0;

ParseResult:
INS HdlStmProcess@@ to objs

UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlOp: FALLING
            list: ops
                HdlValueId: ADC_CLK
        HdlOp: RISING
            list: ops
                HdlValueId: MASTER_RST
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: MASTER_RST
            HdlValueInt: 1
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: DATA_OUT
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ


CommitId: 757d7e03acf440c2f240625cf86c6448cbc13bde
This commit was generated by cvs2svn to compensate for changes in r17, which
--- a/AdcDriver/d_Driver_ADC.v
+++ b/AdcDriver/d_Driver_ADC.v
@@ -187,9 +186,8 @@ always @ (negedge ADC_CLK or posedge MASTER_RST) begin
         DATA_OUT <= ADC_DATA;
     end
 end
-*/
 
-assign DATA_OUT = ADC_DATA;
+//assign DATA_OUT = ADC_DATA;
 
 endmodule
 
ParseResult:
INS HdlStmProcess@@ to objs

UPD HdlStmProcess@@ to 
    INS list@@sensitivity to 
    list: sensitivity
        HdlOp: FALLING
            list: ops
                HdlValueId: ADC_CLK
        HdlOp: RISING
            list: ops
                HdlValueId: MASTER_RST
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: MASTER_RST
            HdlValueInt: 1
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: DATA_OUT
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: ADC_DATA
    HdlValueId: DATA_OUT


CommitId: af37ab1b96fb3ca771b6d1aae7bc4ba53bba5716
This commit was generated by cvs2svn to compensate for changes in r27, which
--- a/UserInput/sub_UserLines.v
+++ b/UserInput/sub_UserLines.v
@@ -31,7 +31,7 @@ module sub_UserLines(
     MASTER_CLK, MASTER_RST,
     LINE_VALUE_OUT,
     BUTTON_RISE, BUTTON_FALL,
-    XCOORD, YCOORD,
+    XCOORD, YCOORD, RESET_VALUE,
     LEFT, RGHT, BOT, TOP,
     SETXnY
 );

ParseResult:
INS HdlIdDef@@RESET_VALUE to ports
HdlIdDef: RESET_VALUE
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 9
                    HdlValueInt: 0
    HdlDirection: IN


CommitId: af37ab1b96fb3ca771b6d1aae7bc4ba53bba5716
This commit was generated by cvs2svn to compensate for changes in r27, which
--- a/UserInput/sub_UserLines.v
+++ b/UserInput/sub_UserLines.v
@@ -99,13 +101,16 @@ always @ (posedge MASTER_CLK or posedge MASTER_RST) begin
         drag <= drag;
 end
 
-
+/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+   Until this is figured out, it is bad to have the lines at 'zero'
+   (due to the comparison for 'in range')
+  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/
 always @ (posedge MASTER_CLK or posedge MASTER_RST) begin
     if(MASTER_RST)
-        LINE_VALUE_OUT <= 10'd200;
+        LINE_VALUE_OUT <= RESET_VALUE;
     else if(drag && SETXnY)
         LINE_VALUE_OUT <= XCOORD;
-    else if(drag && !SETXnY)
+    else if(drag && !SETXnY && (YCOORD<=10'd400))
         LINE_VALUE_OUT <= YCOORD;
     else
         LINE_VALUE_OUT <= LINE_VALUE_OUT;
ParseResult:
UPD HdlStmIf@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: drag
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: SETXnY

UPD HdlStmAssign@@if_true to if_true
    DEL HdlValueInt@@200 from if_true


