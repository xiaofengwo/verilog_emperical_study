CommitId: 4de7a388b99118cbf3e64ab256e593b5546e72c4
This commit was generated by cvs2svn to compensate for changes in r11, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -210,6 +211,7 @@ module cpu8080(addr,     // Address out
    reg    [5:0]  statesel;    // state map selector
    reg    [4:0]  nextstate;   // next state output
    reg           eienb;       // interrupt enable delay shift reg
+   reg    [7:0]  opcode;      // opcode holding
    
    // Register file. Note that 3'b110 (6) is not used, and is the code for a
    // memory reference.

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS HdlValueInt@@02 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@03 to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state to state
    UPD HdlValueInt@@0c to 0d
    UPD HdlValueInt@@0d to 0e
    UPD HdlValueInt@@0e to 0f
    UPD HdlValueInt@@0f to 10
    UPD HdlValueInt@@10 to 11
    UPD HdlValueInt@@11 to 12
    UPD HdlValueInt@@12 to 13
    UPD HdlValueInt@@0b to 0c
    UPD HdlValueInt@@13 to 14
    UPD HdlValueInt@@14 to 15
    UPD HdlValueInt@@15 to 16
    UPD HdlValueInt@@16 to 17
    UPD HdlValueInt@@17 to 18
    UPD HdlValueInt@@18 to 19
    UPD HdlValueInt@@03 to 04
    UPD HdlValueInt@@19 to 1a
    UPD HdlValueInt@@04 to 05
    UPD HdlValueInt@@05 to 06
    UPD HdlValueInt@@06 to 07
    UPD HdlValueInt@@07 to 08
    UPD HdlValueInt@@08 to 09
    UPD HdlValueInt@@09 to 0a
    UPD HdlValueInt@@1a to 1b
    UPD HdlValueInt@@1b to 1c
    UPD HdlValueInt@@1c to 1d
    UPD HdlValueInt@@0a to 0b
    UPD HdlValueInt@@1d to 1e
    UPD HdlValueInt@@1e to 1f
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@02 from 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body


CommitId: 4de7a388b99118cbf3e64ab256e593b5546e72c4
This commit was generated by cvs2svn to compensate for changes in r11, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -281,20 +283,26 @@ module cpu8080(addr,     // Address out
          state <= `cpus_fetchi2; // next state
        
       end
-       
+
       `cpus_fetchi2: begin // complete instruction memory read
-       
+
+         opcode <= data; // latch opcode
          readmem <= 0; // Deactivate instruction memory read
          inta <= 0; // and interrupt acknowledge
+         state <= `cpus_fetchi3; // next state
+         
+      end
+       
+      `cpus_fetchi3: begin // complete instruction memory read
           
          // We split off the instructions into 4 groups. Most of the 8080
          // instructions are in the MOV and ACC operations class.
           
-         case (data[7:6]) // Decode top level
+         case (opcode[7:6]) // Decode top level
           
             2'b00: begin // 00: Data transfers and others
              
-               case (data[5:0]) // decode these instructions
+               case (opcode[5:0]) // decode these instructions
 
                   6'b000000: begin // NOP
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS HdlValueInt@@02 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@03 to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state to state
    UPD HdlValueInt@@0c to 0d
    UPD HdlValueInt@@0d to 0e
    UPD HdlValueInt@@0e to 0f
    UPD HdlValueInt@@0f to 10
    UPD HdlValueInt@@10 to 11
    UPD HdlValueInt@@11 to 12
    UPD HdlValueInt@@12 to 13
    UPD HdlValueInt@@0b to 0c
    UPD HdlValueInt@@13 to 14
    UPD HdlValueInt@@14 to 15
    UPD HdlValueInt@@15 to 16
    UPD HdlValueInt@@16 to 17
    UPD HdlValueInt@@17 to 18
    UPD HdlValueInt@@18 to 19
    UPD HdlValueInt@@03 to 04
    UPD HdlValueInt@@19 to 1a
    UPD HdlValueInt@@04 to 05
    UPD HdlValueInt@@05 to 06
    UPD HdlValueInt@@06 to 07
    UPD HdlValueInt@@07 to 08
    UPD HdlValueInt@@08 to 09
    UPD HdlValueInt@@09 to 0a
    UPD HdlValueInt@@1a to 1b
    UPD HdlValueInt@@1b to 1c
    UPD HdlValueInt@@1c to 1d
    UPD HdlValueInt@@0a to 0b
    UPD HdlValueInt@@1d to 1e
    UPD HdlValueInt@@1e to 1f
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@02 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 05
    HdlValueId: state

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 06
    HdlValueId: state

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@05 to 06

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@05 to 06

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@05 to 06

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@05 to 06

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@05 to 06

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@05 to 06

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@05 to 06

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@05 to 06

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@05 to 06

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@05 to 06

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@05 to 06

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@05 to 06

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@05 to 06

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@05 to 06

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@05 to 06

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmIf@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmIf@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmIf@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmIf@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmIf@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmIf@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmIf@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmIf@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmIf@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmIf@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmIf@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmIf@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmIf@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmIf@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmIf@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmIf@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmIf@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmIf@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@data to opcode

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body


CommitId: 4de7a388b99118cbf3e64ab256e593b5546e72c4
This commit was generated by cvs2svn to compensate for changes in r11, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -350,10 +358,10 @@ module cpu8080(addr,     // Address out
                   6'b010101, 6'b011101, 6'b100101, 6'b101101, 6'b110101, 
                   6'b111101: begin // INR/DCR
 
-                     regd <= data[5:3]; // get source/destination reg
-                     aluopra <= regfil[data[5:3]]; // load as alu a
+                     regd <= opcode[5:3]; // get source/destination reg
+                     aluopra <= regfil[opcode[5:3]]; // load as alu a
                      aluoprb <= 1; // load 1 as alu b
-                     if (data[0]) alusel <= `aluop_sub; // set subtract
+                     if (opcode[0]) alusel <= `aluop_sub; // set subtract
                      else alusel <= `aluop_add; // set add
                      state <= `cpus_indcb; // go inr/dcr cycleback
                      pc <= pc+1; // Next instruction byte

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS HdlValueInt@@02 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@03 to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state to state
    UPD HdlValueInt@@0c to 0d
    UPD HdlValueInt@@0d to 0e
    UPD HdlValueInt@@0e to 0f
    UPD HdlValueInt@@0f to 10
    UPD HdlValueInt@@10 to 11
    UPD HdlValueInt@@11 to 12
    UPD HdlValueInt@@12 to 13
    UPD HdlValueInt@@0b to 0c
    UPD HdlValueInt@@13 to 14
    UPD HdlValueInt@@14 to 15
    UPD HdlValueInt@@15 to 16
    UPD HdlValueInt@@16 to 17
    UPD HdlValueInt@@17 to 18
    UPD HdlValueInt@@18 to 19
    UPD HdlValueInt@@03 to 04
    UPD HdlValueInt@@19 to 1a
    UPD HdlValueInt@@04 to 05
    UPD HdlValueInt@@05 to 06
    UPD HdlValueInt@@06 to 07
    UPD HdlValueInt@@07 to 08
    UPD HdlValueInt@@08 to 09
    UPD HdlValueInt@@09 to 0a
    UPD HdlValueInt@@1a to 1b
    UPD HdlValueInt@@1b to 1c
    UPD HdlValueInt@@1c to 1d
    UPD HdlValueInt@@0a to 0b
    UPD HdlValueInt@@1d to 1e
    UPD HdlValueInt@@1e to 1f
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@02 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body


CommitId: 4de7a388b99118cbf3e64ab256e593b5546e72c4
This commit was generated by cvs2svn to compensate for changes in r11, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -363,7 +371,7 @@ module cpu8080(addr,     // Address out
                   6'b000010, 6'b010010: begin // STAX
 
                      wdatahold <= regfil[`reg_a]; // place A as source
-                     if (data[4]) // use DE pair
+                     if (opcode[4]) // use DE pair
                         waddrhold <= regfil[`reg_d]<<8|regfil[`reg_d];
                      else // use BC pair
                         waddrhold <= regfil[`reg_b] << 8|regfil[`reg_c];

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS HdlValueInt@@02 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@03 to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state to state
    UPD HdlValueInt@@0c to 0d
    UPD HdlValueInt@@0d to 0e
    UPD HdlValueInt@@0e to 0f
    UPD HdlValueInt@@0f to 10
    UPD HdlValueInt@@10 to 11
    UPD HdlValueInt@@11 to 12
    UPD HdlValueInt@@12 to 13
    UPD HdlValueInt@@0b to 0c
    UPD HdlValueInt@@13 to 14
    UPD HdlValueInt@@14 to 15
    UPD HdlValueInt@@15 to 16
    UPD HdlValueInt@@16 to 17
    UPD HdlValueInt@@17 to 18
    UPD HdlValueInt@@18 to 19
    UPD HdlValueInt@@03 to 04
    UPD HdlValueInt@@19 to 1a
    UPD HdlValueInt@@04 to 05
    UPD HdlValueInt@@05 to 06
    UPD HdlValueInt@@06 to 07
    UPD HdlValueInt@@07 to 08
    UPD HdlValueInt@@08 to 09
    UPD HdlValueInt@@09 to 0a
    UPD HdlValueInt@@1a to 1b
    UPD HdlValueInt@@1b to 1c
    UPD HdlValueInt@@1c to 1d
    UPD HdlValueInt@@0a to 0b
    UPD HdlValueInt@@1d to 1e
    UPD HdlValueInt@@1e to 1f
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@02 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body


CommitId: 4de7a388b99118cbf3e64ab256e593b5546e72c4
This commit was generated by cvs2svn to compensate for changes in r11, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -376,7 +384,7 @@ module cpu8080(addr,     // Address out
                   6'b001010, 6'b011010: begin // LDAX
 
                      regd <= `reg_a; // set A as destination
-                     if (data[4]) // use DE pair
+                     if (opcode[4]) // use DE pair
                         raddrhold <= regfil[`reg_d]<<8|regfil[`reg_d];
                      else // use BC pair
                         raddrhold <= regfil[`reg_b]<<8|regfil[`reg_c];

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS HdlValueInt@@02 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@03 to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state to state
    UPD HdlValueInt@@0c to 0d
    UPD HdlValueInt@@0d to 0e
    UPD HdlValueInt@@0e to 0f
    UPD HdlValueInt@@0f to 10
    UPD HdlValueInt@@10 to 11
    UPD HdlValueInt@@11 to 12
    UPD HdlValueInt@@12 to 13
    UPD HdlValueInt@@0b to 0c
    UPD HdlValueInt@@13 to 14
    UPD HdlValueInt@@14 to 15
    UPD HdlValueInt@@15 to 16
    UPD HdlValueInt@@16 to 17
    UPD HdlValueInt@@17 to 18
    UPD HdlValueInt@@18 to 19
    UPD HdlValueInt@@03 to 04
    UPD HdlValueInt@@19 to 1a
    UPD HdlValueInt@@04 to 05
    UPD HdlValueInt@@05 to 06
    UPD HdlValueInt@@06 to 07
    UPD HdlValueInt@@07 to 08
    UPD HdlValueInt@@08 to 09
    UPD HdlValueInt@@09 to 0a
    UPD HdlValueInt@@1a to 1b
    UPD HdlValueInt@@1b to 1c
    UPD HdlValueInt@@1c to 1d
    UPD HdlValueInt@@0a to 0b
    UPD HdlValueInt@@1d to 1e
    UPD HdlValueInt@@1e to 1f
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@02 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body


CommitId: 4de7a388b99118cbf3e64ab256e593b5546e72c4
This commit was generated by cvs2svn to compensate for changes in r11, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -600,11 +608,11 @@ module cpu8080(addr,     // Address out
                   6'b101110, 6'b110110, 6'b111110: begin // MVI
 
                      // move immediate to register
-                     regd <= data[5:3]; // set destination register
+                     regd <= opcode[5:3]; // set destination register
                      raddrhold <= pc+1; // set pickup address
-                     if (data[5:3] == `reg_m) begin // it's mvi m,imm
+                     if (opcode[5:3] == `reg_m) begin // it's mvi m,imm
 
-                        regd <= data[5:3]; // set destination register
+                        regd <= opcode[5:3]; // set destination register
                         // set destination address
                         waddrhold <= { regfil[`reg_h], regfil[`reg_l] };
                         statesel <= `mac_readbmtw; // read byte and move to write

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS HdlValueInt@@02 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@03 to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state to state
    UPD HdlValueInt@@0c to 0d
    UPD HdlValueInt@@0d to 0e
    UPD HdlValueInt@@0e to 0f
    UPD HdlValueInt@@0f to 10
    UPD HdlValueInt@@10 to 11
    UPD HdlValueInt@@11 to 12
    UPD HdlValueInt@@12 to 13
    UPD HdlValueInt@@0b to 0c
    UPD HdlValueInt@@13 to 14
    UPD HdlValueInt@@14 to 15
    UPD HdlValueInt@@15 to 16
    UPD HdlValueInt@@16 to 17
    UPD HdlValueInt@@17 to 18
    UPD HdlValueInt@@18 to 19
    UPD HdlValueInt@@03 to 04
    UPD HdlValueInt@@19 to 1a
    UPD HdlValueInt@@04 to 05
    UPD HdlValueInt@@05 to 06
    UPD HdlValueInt@@06 to 07
    UPD HdlValueInt@@07 to 08
    UPD HdlValueInt@@08 to 09
    UPD HdlValueInt@@09 to 0a
    UPD HdlValueInt@@1a to 1b
    UPD HdlValueInt@@1b to 1c
    UPD HdlValueInt@@1c to 1d
    UPD HdlValueInt@@0a to 0b
    UPD HdlValueInt@@1d to 1e
    UPD HdlValueInt@@1e to 1f
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@02 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmAssign@@if_true to if_true
    UPD HdlValueInt@@03 to 04

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@data to opcode

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body


CommitId: 4de7a388b99118cbf3e64ab256e593b5546e72c4
This commit was generated by cvs2svn to compensate for changes in r11, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -674,18 +682,18 @@ module cpu8080(addr,     // Address out
              
                // Check its the halt instruction, which occupies the invalid
                // "MOV M,M" instruction.
-               if (data == 8'b01110110) state <= `cpus_halt;
+               if (opcode == 8'b01110110) state <= `cpus_halt;
                // Otherwise, the 01 prefix is single instruction format.
                else begin
 
                   // Format 01DDDSSS
    
                   // Check memory source, use state if so
-                  if (data[2:0] == `reg_m) begin
+                  if (opcode[2:0] == `reg_m) begin
 
                      // place hl as address
                      raddrhold <= regfil[`reg_h]<<8|regfil[`reg_l];
-                     regd <= data[5:3]; // set destination
+                     regd <= opcode[5:3]; // set destination
                      statesel <= `mac_readbtoreg; // read byte to register
                      state <= `cpus_read;
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS HdlValueInt@@02 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@03 to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state to state
    UPD HdlValueInt@@0c to 0d
    UPD HdlValueInt@@0d to 0e
    UPD HdlValueInt@@0e to 0f
    UPD HdlValueInt@@0f to 10
    UPD HdlValueInt@@10 to 11
    UPD HdlValueInt@@11 to 12
    UPD HdlValueInt@@12 to 13
    UPD HdlValueInt@@0b to 0c
    UPD HdlValueInt@@13 to 14
    UPD HdlValueInt@@14 to 15
    UPD HdlValueInt@@15 to 16
    UPD HdlValueInt@@16 to 17
    UPD HdlValueInt@@17 to 18
    UPD HdlValueInt@@18 to 19
    UPD HdlValueInt@@03 to 04
    UPD HdlValueInt@@19 to 1a
    UPD HdlValueInt@@04 to 05
    UPD HdlValueInt@@05 to 06
    UPD HdlValueInt@@06 to 07
    UPD HdlValueInt@@07 to 08
    UPD HdlValueInt@@08 to 09
    UPD HdlValueInt@@09 to 0a
    UPD HdlValueInt@@1a to 1b
    UPD HdlValueInt@@1b to 1c
    UPD HdlValueInt@@1c to 1d
    UPD HdlValueInt@@0a to 0b
    UPD HdlValueInt@@1d to 1e
    UPD HdlValueInt@@1e to 1f
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@02 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '4'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '4'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '4'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '4'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '4'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '4'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '4'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '4'}]}]} 

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@0c to 0d

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@0c to 0d

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@0c to 0d

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '4'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '4'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '4'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '4'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '4'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '4'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '4'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '4'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    INS HdlOp@@CONCAT to 
    UPD HdlOp@@CONCAT to CONCAT
        INS list@@ops to CONCAT
        UPD HdlOp@@CONCAT to CONCAT
            INS HdlValueInt@@1 to ops

UPD HdlStmAssign@@ to 
    INS HdlOp@@CONCAT to 
    UPD HdlOp@@CONCAT to CONCAT
        INS list@@ops to CONCAT
        UPD HdlOp@@CONCAT to CONCAT
            INS HdlValueInt@@1 to ops

UPD HdlStmAssign@@ to 
    INS HdlOp@@CONCAT to 
    UPD HdlOp@@CONCAT to CONCAT
        INS list@@ops to CONCAT
        UPD HdlOp@@CONCAT to CONCAT
            INS HdlValueInt@@1 to ops

UPD HdlStmAssign@@ to 
    INS HdlOp@@CONCAT to 
    UPD HdlOp@@CONCAT to CONCAT
        INS list@@ops to CONCAT
        UPD HdlOp@@CONCAT to CONCAT
            INS HdlValueInt@@1 to ops

UPD HdlStmAssign@@ to 
    MOV HdlOp@@CONCAT to 
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: regfil
                                                                    HdlValueInt: 111
                                                            HdlValueId: sign
                                                    HdlValueId: zero
                                            HdlValueInt: 0
                                    HdlValueId: auxcar
                            HdlValueInt: 0
                    HdlValueId: parity
            HdlValueId: carry
    UPD HdlOp@@CONCAT to CONCAT
        MOV HdlValueId@@carry to ops
        HdlValueId: carry

UPD HdlStmAssign@@ to 
    MOV HdlOp@@CONCAT to 
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: regfil
                                                                    HdlValueInt: 111
                                                            HdlValueId: sign
                                                    HdlValueId: zero
                                            HdlValueInt: 0
                                    HdlValueId: auxcar
                            HdlValueInt: 0
                    HdlValueId: parity
            HdlValueId: carry
    UPD HdlOp@@CONCAT to CONCAT
        MOV HdlValueId@@carry to ops
        HdlValueId: carry

UPD HdlStmAssign@@ to 
    MOV HdlOp@@CONCAT to 
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: regfil
                                                                    HdlValueInt: 111
                                                            HdlValueId: sign
                                                    HdlValueId: zero
                                            HdlValueInt: 0
                                    HdlValueId: auxcar
                            HdlValueInt: 0
                    HdlValueId: parity
            HdlValueId: carry
    UPD HdlOp@@CONCAT to CONCAT
        MOV HdlValueId@@carry to ops
        HdlValueId: carry

UPD HdlStmAssign@@ to 
    MOV HdlOp@@CONCAT to 
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: regfil
                                                                    HdlValueInt: 111
                                                            HdlValueId: sign
                                                    HdlValueId: zero
                                            HdlValueInt: 0
                                    HdlValueId: auxcar
                            HdlValueInt: 0
                    HdlValueId: parity
            HdlValueId: carry
    UPD HdlOp@@CONCAT to CONCAT
        MOV HdlValueId@@carry to ops
        HdlValueId: carry

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0c
    HdlValueId: state


CommitId: 4de7a388b99118cbf3e64ab256e593b5546e72c4
This commit was generated by cvs2svn to compensate for changes in r11, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -694,14 +702,14 @@ module cpu8080(addr,     // Address out
 
                      // place hl as address
                      waddrhold <= regfil[`reg_h]<<8|regfil[`reg_l];
-                     wdatahold <= regfil[data[2:0]]; // place data to write
+                     wdatahold <= regfil[opcode[2:0]]; // place data to write
                      statesel <= `mac_writebyte; // write byte
                      state <= `cpus_write;
 
                   // otherwise simple register to register
                   end else begin
 
-                     regfil[data[5:3]] <= regfil[data[2:0]];
+                     regfil[opcode[5:3]] <= regfil[opcode[2:0]];
                      state <= `cpus_fetchi; // Fetch next instruction
 
                   end

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS HdlValueInt@@02 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@03 to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state to state
    UPD HdlValueInt@@0c to 0d
    UPD HdlValueInt@@0d to 0e
    UPD HdlValueInt@@0e to 0f
    UPD HdlValueInt@@0f to 10
    UPD HdlValueInt@@10 to 11
    UPD HdlValueInt@@11 to 12
    UPD HdlValueInt@@12 to 13
    UPD HdlValueInt@@0b to 0c
    UPD HdlValueInt@@13 to 14
    UPD HdlValueInt@@14 to 15
    UPD HdlValueInt@@15 to 16
    UPD HdlValueInt@@16 to 17
    UPD HdlValueInt@@17 to 18
    UPD HdlValueInt@@18 to 19
    UPD HdlValueInt@@03 to 04
    UPD HdlValueInt@@19 to 1a
    UPD HdlValueInt@@04 to 05
    UPD HdlValueInt@@05 to 06
    UPD HdlValueInt@@06 to 07
    UPD HdlValueInt@@07 to 08
    UPD HdlValueInt@@08 to 09
    UPD HdlValueInt@@09 to 0a
    UPD HdlValueInt@@1a to 1b
    UPD HdlValueInt@@1b to 1c
    UPD HdlValueInt@@1c to 1d
    UPD HdlValueInt@@0a to 0b
    UPD HdlValueInt@@1d to 1e
    UPD HdlValueInt@@1e to 1f
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@02 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@10 to 11

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@10 to 11

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@10 to 11

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@10 to 11

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body


CommitId: 4de7a388b99118cbf3e64ab256e593b5546e72c4
This commit was generated by cvs2svn to compensate for changes in r11, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -715,10 +723,10 @@ module cpu8080(addr,     // Address out
              
                // 10 prefix is single instruction format
                aluopra <= regfil[`reg_a]; // load as alu a
-               aluoprb <= regfil[data[2:0]]; // load as alu b
-               alusel <= data[5:3]; // set alu operation from instruction
+               aluoprb <= regfil[opcode[2:0]]; // load as alu b
+               alusel <= opcode[5:3]; // set alu operation from instruction
                alucin <= carry; // input carry
-               if (data[2:0] == `reg_m) begin
+               if (opcode[2:0] == `reg_m) begin
 
                   // set read address
                   raddrhold <= regfil[`reg_h]<<8|regfil[`reg_l];

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS HdlValueInt@@02 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@03 to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state to state
    UPD HdlValueInt@@0c to 0d
    UPD HdlValueInt@@0d to 0e
    UPD HdlValueInt@@0e to 0f
    UPD HdlValueInt@@0f to 10
    UPD HdlValueInt@@10 to 11
    UPD HdlValueInt@@11 to 12
    UPD HdlValueInt@@12 to 13
    UPD HdlValueInt@@0b to 0c
    UPD HdlValueInt@@13 to 14
    UPD HdlValueInt@@14 to 15
    UPD HdlValueInt@@15 to 16
    UPD HdlValueInt@@16 to 17
    UPD HdlValueInt@@17 to 18
    UPD HdlValueInt@@18 to 19
    UPD HdlValueInt@@03 to 04
    UPD HdlValueInt@@19 to 1a
    UPD HdlValueInt@@04 to 05
    UPD HdlValueInt@@05 to 06
    UPD HdlValueInt@@06 to 07
    UPD HdlValueInt@@07 to 08
    UPD HdlValueInt@@08 to 09
    UPD HdlValueInt@@09 to 0a
    UPD HdlValueInt@@1a to 1b
    UPD HdlValueInt@@1b to 1c
    UPD HdlValueInt@@1c to 1d
    UPD HdlValueInt@@0a to 0b
    UPD HdlValueInt@@1d to 1e
    UPD HdlValueInt@@1e to 1f
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@02 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@10 to 11

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body


CommitId: 4de7a388b99118cbf3e64ab256e593b5546e72c4
This commit was generated by cvs2svn to compensate for changes in r11, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -734,13 +742,13 @@ module cpu8080(addr,     // Address out
              
             2'b11: begin // 11: jmp/call and others
              
-               case (data[5:0]) // decode these instructions
+               case (opcode[5:0]) // decode these instructions
 
                   6'b000101, 6'b010101, 6'b100101, 6'b110101: begin // PUSH
 
                      waddrhold <= sp-2; // write to stack
                      sp <= sp-2; // pushdown stack
-                     case (data[5:4]) // register set
+                     case (opcode[5:4]) // register set
 
                         2'b00: { wdatahold2, wdatahold } <= 
                                   { regfil[`reg_b], regfil[`reg_c] };

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS HdlValueInt@@02 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@03 to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state to state
    UPD HdlValueInt@@0c to 0d
    UPD HdlValueInt@@0d to 0e
    UPD HdlValueInt@@0e to 0f
    UPD HdlValueInt@@0f to 10
    UPD HdlValueInt@@10 to 11
    UPD HdlValueInt@@11 to 12
    UPD HdlValueInt@@12 to 13
    UPD HdlValueInt@@0b to 0c
    UPD HdlValueInt@@13 to 14
    UPD HdlValueInt@@14 to 15
    UPD HdlValueInt@@15 to 16
    UPD HdlValueInt@@16 to 17
    UPD HdlValueInt@@17 to 18
    UPD HdlValueInt@@18 to 19
    UPD HdlValueInt@@03 to 04
    UPD HdlValueInt@@19 to 1a
    UPD HdlValueInt@@04 to 05
    UPD HdlValueInt@@05 to 06
    UPD HdlValueInt@@06 to 07
    UPD HdlValueInt@@07 to 08
    UPD HdlValueInt@@08 to 09
    UPD HdlValueInt@@09 to 0a
    UPD HdlValueInt@@1a to 1b
    UPD HdlValueInt@@1b to 1c
    UPD HdlValueInt@@1c to 1d
    UPD HdlValueInt@@0a to 0b
    UPD HdlValueInt@@1d to 1e
    UPD HdlValueInt@@1e to 1f
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@02 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@10 to 11

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@10 to 11

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@10 to 11

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@10 to 11

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@10 to 11

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@10 to 11

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@10 to 11

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@10 to 11

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body


CommitId: 4de7a388b99118cbf3e64ab256e593b5546e72c4
This commit was generated by cvs2svn to compensate for changes in r11, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -750,7 +758,7 @@ module cpu8080(addr,     // Address out
                                   { regfil[`reg_h], regfil[`reg_l] };
                         2'b11: { wdatahold2, wdatahold } <= 
                                   { regfil[`reg_a], sign, zero, 1'b0, auxcar, 
-                                    1'b0, parity, carry };
+                                    1'b0, parity, 1'b1, carry };
 
                      endcase
                      statesel <= `mac_writedbyte; // write double byte

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS HdlValueInt@@02 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@03 to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state to state
    UPD HdlValueInt@@0c to 0d
    UPD HdlValueInt@@0d to 0e
    UPD HdlValueInt@@0e to 0f
    UPD HdlValueInt@@0f to 10
    UPD HdlValueInt@@10 to 11
    UPD HdlValueInt@@11 to 12
    UPD HdlValueInt@@12 to 13
    UPD HdlValueInt@@0b to 0c
    UPD HdlValueInt@@13 to 14
    UPD HdlValueInt@@14 to 15
    UPD HdlValueInt@@15 to 16
    UPD HdlValueInt@@16 to 17
    UPD HdlValueInt@@17 to 18
    UPD HdlValueInt@@18 to 19
    UPD HdlValueInt@@03 to 04
    UPD HdlValueInt@@19 to 1a
    UPD HdlValueInt@@04 to 05
    UPD HdlValueInt@@05 to 06
    UPD HdlValueInt@@06 to 07
    UPD HdlValueInt@@07 to 08
    UPD HdlValueInt@@08 to 09
    UPD HdlValueInt@@09 to 0a
    UPD HdlValueInt@@1a to 1b
    UPD HdlValueInt@@1b to 1c
    UPD HdlValueInt@@1c to 1d
    UPD HdlValueInt@@0a to 0b
    UPD HdlValueInt@@1d to 1e
    UPD HdlValueInt@@1e to 1f
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@02 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body


CommitId: 4de7a388b99118cbf3e64ab256e593b5546e72c4
This commit was generated by cvs2svn to compensate for changes in r11, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -761,7 +769,7 @@ module cpu8080(addr,     // Address out
 
                   6'b000001, 6'b010001, 6'b100001, 6'b110001: begin // POP
 
-                     popdes <= data[5:4]; // set destination
+                     popdes <= opcode[5:4]; // set destination
                      raddrhold <= sp; // read from stack
                      sp <= sp+2; // pushup stack
                      statesel <= `mac_pop; // perform POP

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS HdlValueInt@@02 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@03 to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state to state
    UPD HdlValueInt@@0c to 0d
    UPD HdlValueInt@@0d to 0e
    UPD HdlValueInt@@0e to 0f
    UPD HdlValueInt@@0f to 10
    UPD HdlValueInt@@10 to 11
    UPD HdlValueInt@@11 to 12
    UPD HdlValueInt@@12 to 13
    UPD HdlValueInt@@0b to 0c
    UPD HdlValueInt@@13 to 14
    UPD HdlValueInt@@14 to 15
    UPD HdlValueInt@@15 to 16
    UPD HdlValueInt@@16 to 17
    UPD HdlValueInt@@17 to 18
    UPD HdlValueInt@@18 to 19
    UPD HdlValueInt@@03 to 04
    UPD HdlValueInt@@19 to 1a
    UPD HdlValueInt@@04 to 05
    UPD HdlValueInt@@05 to 06
    UPD HdlValueInt@@06 to 07
    UPD HdlValueInt@@07 to 08
    UPD HdlValueInt@@08 to 09
    UPD HdlValueInt@@09 to 0a
    UPD HdlValueInt@@1a to 1b
    UPD HdlValueInt@@1b to 1c
    UPD HdlValueInt@@1c to 1d
    UPD HdlValueInt@@0a to 0b
    UPD HdlValueInt@@1d to 1e
    UPD HdlValueInt@@1e to 1f
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@02 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@10 to 11

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body


CommitId: 4de7a388b99118cbf3e64ab256e593b5546e72c4
This commit was generated by cvs2svn to compensate for changes in r11, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -806,7 +814,7 @@ module cpu8080(addr,     // Address out
                   6'b111110: begin // immediate arithmetic to accumulator
 
                      aluopra <= regfil[`reg_a]; // load as alu a
-                     alusel <= data[5:3]; // set alu operation from instruction
+                     alusel <= opcode[5:3]; // set alu operation from instruction
                      alucin <= carry; // input carry
                      raddrhold <= pc+1; // read at PC
                      statesel <= `mac_accimm; // finish accumulator immediate

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS HdlValueInt@@02 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@03 to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state to state
    UPD HdlValueInt@@0c to 0d
    UPD HdlValueInt@@0d to 0e
    UPD HdlValueInt@@0e to 0f
    UPD HdlValueInt@@0f to 10
    UPD HdlValueInt@@10 to 11
    UPD HdlValueInt@@11 to 12
    UPD HdlValueInt@@12 to 13
    UPD HdlValueInt@@0b to 0c
    UPD HdlValueInt@@13 to 14
    UPD HdlValueInt@@14 to 15
    UPD HdlValueInt@@15 to 16
    UPD HdlValueInt@@16 to 17
    UPD HdlValueInt@@17 to 18
    UPD HdlValueInt@@18 to 19
    UPD HdlValueInt@@03 to 04
    UPD HdlValueInt@@19 to 1a
    UPD HdlValueInt@@04 to 05
    UPD HdlValueInt@@05 to 06
    UPD HdlValueInt@@06 to 07
    UPD HdlValueInt@@07 to 08
    UPD HdlValueInt@@08 to 09
    UPD HdlValueInt@@09 to 0a
    UPD HdlValueInt@@1a to 1b
    UPD HdlValueInt@@1b to 1c
    UPD HdlValueInt@@1c to 1d
    UPD HdlValueInt@@0a to 0b
    UPD HdlValueInt@@1d to 1e
    UPD HdlValueInt@@1e to 1f
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@02 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body


CommitId: 4de7a388b99118cbf3e64ab256e593b5546e72c4
This commit was generated by cvs2svn to compensate for changes in r11, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -836,7 +844,7 @@ module cpu8080(addr,     // Address out
                      raddrhold <= pc+1; // pick up jump address
                      statesel <= `mac_jmp; // finish JMP
                      // choose continue or read according to condition
-                     case (data[5:3]) // decode flag cases
+                     case (opcode[5:3]) // decode flag cases
 
                         3'b000: if (zero) state <= `cpus_fetchi;
                                 else state <= `cpus_read;

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS HdlValueInt@@02 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@03 to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state to state
    UPD HdlValueInt@@0c to 0d
    UPD HdlValueInt@@0d to 0e
    UPD HdlValueInt@@0e to 0f
    UPD HdlValueInt@@0f to 10
    UPD HdlValueInt@@10 to 11
    UPD HdlValueInt@@11 to 12
    UPD HdlValueInt@@12 to 13
    UPD HdlValueInt@@0b to 0c
    UPD HdlValueInt@@13 to 14
    UPD HdlValueInt@@14 to 15
    UPD HdlValueInt@@15 to 16
    UPD HdlValueInt@@16 to 17
    UPD HdlValueInt@@17 to 18
    UPD HdlValueInt@@18 to 19
    UPD HdlValueInt@@03 to 04
    UPD HdlValueInt@@19 to 1a
    UPD HdlValueInt@@04 to 05
    UPD HdlValueInt@@05 to 06
    UPD HdlValueInt@@06 to 07
    UPD HdlValueInt@@07 to 08
    UPD HdlValueInt@@08 to 09
    UPD HdlValueInt@@09 to 0a
    UPD HdlValueInt@@1a to 1b
    UPD HdlValueInt@@1b to 1c
    UPD HdlValueInt@@1c to 1d
    UPD HdlValueInt@@0a to 0b
    UPD HdlValueInt@@1d to 1e
    UPD HdlValueInt@@1e to 1f
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@02 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '3'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@if_false to if_false
    UPD HdlValueInt@@10 to 11

UPD HdlStmAssign@@if_false to if_false
    UPD HdlValueInt@@10 to 11

UPD HdlStmAssign@@if_false to if_false
    UPD HdlValueInt@@10 to 11

UPD HdlStmAssign@@if_false to if_false
    UPD HdlValueInt@@10 to 11

UPD HdlStmAssign@@if_false to if_false
    UPD HdlValueInt@@10 to 11

UPD HdlStmAssign@@if_false to if_false
    UPD HdlValueInt@@10 to 11

UPD HdlStmAssign@@if_false to if_false
    UPD HdlValueInt@@10 to 11

UPD HdlStmAssign@@if_false to if_false
    UPD HdlValueInt@@10 to 11

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body


CommitId: 4de7a388b99118cbf3e64ab256e593b5546e72c4
This commit was generated by cvs2svn to compensate for changes in r11, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -883,7 +891,7 @@ module cpu8080(addr,     // Address out
                      sp <= sp-2; // pushdown stack
                      statesel <= `mac_call; // finish CALL
                      // choose continue or read according to condition
-                     case (data[5:3]) // decode flag cases
+                     case (opcode[5:3]) // decode flag cases
 
                         3'b000: if (zero) state <= `cpus_fetchi; 
                                 else state <= `cpus_read;

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS HdlValueInt@@02 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@03 to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state to state
    UPD HdlValueInt@@0c to 0d
    UPD HdlValueInt@@0d to 0e
    UPD HdlValueInt@@0e to 0f
    UPD HdlValueInt@@0f to 10
    UPD HdlValueInt@@10 to 11
    UPD HdlValueInt@@11 to 12
    UPD HdlValueInt@@12 to 13
    UPD HdlValueInt@@0b to 0c
    UPD HdlValueInt@@13 to 14
    UPD HdlValueInt@@14 to 15
    UPD HdlValueInt@@15 to 16
    UPD HdlValueInt@@16 to 17
    UPD HdlValueInt@@17 to 18
    UPD HdlValueInt@@18 to 19
    UPD HdlValueInt@@03 to 04
    UPD HdlValueInt@@19 to 1a
    UPD HdlValueInt@@04 to 05
    UPD HdlValueInt@@05 to 06
    UPD HdlValueInt@@06 to 07
    UPD HdlValueInt@@07 to 08
    UPD HdlValueInt@@08 to 09
    UPD HdlValueInt@@09 to 0a
    UPD HdlValueInt@@1a to 1b
    UPD HdlValueInt@@1b to 1c
    UPD HdlValueInt@@1c to 1d
    UPD HdlValueInt@@0a to 0b
    UPD HdlValueInt@@1d to 1e
    UPD HdlValueInt@@1e to 1f
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@02 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@data to opcode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@data to opcode

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body


CommitId: 4de7a388b99118cbf3e64ab256e593b5546e72c4
This commit was generated by cvs2svn to compensate for changes in r11, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -923,7 +931,7 @@ module cpu8080(addr,     // Address out
                      sp <= sp+2; // pushup stack
                      statesel <= `mac_jmp; // finish JMP
                      // choose read or continue according to condition
-                     case (data[5:3]) // decode flag cases
+                     case (opcode[5:3]) // decode flag cases
 
                         3'b000: if (zero) state <= `cpus_fetchi; 
                                 else state <= `cpus_read;

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS HdlValueInt@@02 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@03 to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state to state
    UPD HdlValueInt@@0c to 0d
    UPD HdlValueInt@@0d to 0e
    UPD HdlValueInt@@0e to 0f
    UPD HdlValueInt@@0f to 10
    UPD HdlValueInt@@10 to 11
    UPD HdlValueInt@@11 to 12
    UPD HdlValueInt@@12 to 13
    UPD HdlValueInt@@0b to 0c
    UPD HdlValueInt@@13 to 14
    UPD HdlValueInt@@14 to 15
    UPD HdlValueInt@@15 to 16
    UPD HdlValueInt@@16 to 17
    UPD HdlValueInt@@17 to 18
    UPD HdlValueInt@@18 to 19
    UPD HdlValueInt@@03 to 04
    UPD HdlValueInt@@19 to 1a
    UPD HdlValueInt@@04 to 05
    UPD HdlValueInt@@05 to 06
    UPD HdlValueInt@@06 to 07
    UPD HdlValueInt@@07 to 08
    UPD HdlValueInt@@08 to 09
    UPD HdlValueInt@@09 to 0a
    UPD HdlValueInt@@1a to 1b
    UPD HdlValueInt@@1b to 1c
    UPD HdlValueInt@@1c to 1d
    UPD HdlValueInt@@0a to 0b
    UPD HdlValueInt@@1d to 1e
    UPD HdlValueInt@@1e to 1f
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@02 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data to opcode
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@10 to 11

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body


CommitId: 4de7a388b99118cbf3e64ab256e593b5546e72c4
This commit was generated by cvs2svn to compensate for changes in r11, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -950,7 +958,7 @@ module cpu8080(addr,     // Address out
                   6'b000111, 6'b001111, 6'b010111, 6'b011111, 6'b100111, 
                   6'b101111, 6'b110111, 6'b111111: begin // RST
 
-                     pc <= data & 8'b00111000; // place restart value in PC
+                     pc <= opcode & 8'b00111000; // place restart value in PC
                      waddrhold <= sp-2; // place address on stack
                      // if interrupt cycle, use current pc, else use address
                      // after call

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS HdlValueInt@@02 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@03 to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state to state
    UPD HdlValueInt@@0c to 0d
    UPD HdlValueInt@@0d to 0e
    UPD HdlValueInt@@0e to 0f
    UPD HdlValueInt@@0f to 10
    UPD HdlValueInt@@10 to 11
    UPD HdlValueInt@@11 to 12
    UPD HdlValueInt@@12 to 13
    UPD HdlValueInt@@0b to 0c
    UPD HdlValueInt@@13 to 14
    UPD HdlValueInt@@14 to 15
    UPD HdlValueInt@@15 to 16
    UPD HdlValueInt@@16 to 17
    UPD HdlValueInt@@17 to 18
    UPD HdlValueInt@@18 to 19
    UPD HdlValueInt@@03 to 04
    UPD HdlValueInt@@19 to 1a
    UPD HdlValueInt@@04 to 05
    UPD HdlValueInt@@05 to 06
    UPD HdlValueInt@@06 to 07
    UPD HdlValueInt@@07 to 08
    UPD HdlValueInt@@08 to 09
    UPD HdlValueInt@@09 to 0a
    UPD HdlValueInt@@1a to 1b
    UPD HdlValueInt@@1b to 1c
    UPD HdlValueInt@@1c to 1d
    UPD HdlValueInt@@0a to 0b
    UPD HdlValueInt@@1d to 1e
    UPD HdlValueInt@@1e to 1f
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@02 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body


CommitId: 4de7a388b99118cbf3e64ab256e593b5546e72c4
This commit was generated by cvs2svn to compensate for changes in r11, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -965,7 +973,7 @@ module cpu8080(addr,     // Address out
 
                   6'b111011: begin // EI
 
-                     ei <= 1'b1;
+                     eienb <= 1'b1; // set delayed interrupt enable
                      state <= `cpus_fetchi; // Fetch next instruction
                      pc <= pc+1; // Next instruction byte
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS HdlValueInt@@02 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@03 to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state to state
    UPD HdlValueInt@@0c to 0d
    UPD HdlValueInt@@0d to 0e
    UPD HdlValueInt@@0e to 0f
    UPD HdlValueInt@@0f to 10
    UPD HdlValueInt@@10 to 11
    UPD HdlValueInt@@11 to 12
    UPD HdlValueInt@@12 to 13
    UPD HdlValueInt@@0b to 0c
    UPD HdlValueInt@@13 to 14
    UPD HdlValueInt@@14 to 15
    UPD HdlValueInt@@15 to 16
    UPD HdlValueInt@@16 to 17
    UPD HdlValueInt@@17 to 18
    UPD HdlValueInt@@18 to 19
    UPD HdlValueInt@@03 to 04
    UPD HdlValueInt@@19 to 1a
    UPD HdlValueInt@@04 to 05
    UPD HdlValueInt@@05 to 06
    UPD HdlValueInt@@06 to 07
    UPD HdlValueInt@@07 to 08
    UPD HdlValueInt@@08 to 09
    UPD HdlValueInt@@09 to 0a
    UPD HdlValueInt@@1a to 1b
    UPD HdlValueInt@@1b to 1c
    UPD HdlValueInt@@1c to 1d
    UPD HdlValueInt@@0a to 0b
    UPD HdlValueInt@@1d to 1e
    UPD HdlValueInt@@1e to 1f
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@02 from 

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0d
    HdlValueId: state

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body


CommitId: 58e4ac24ea252cb45a2b804df2e62245754f9c98
This commit was generated by cvs2svn to compensate for changes in r9, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -203,6 +209,7 @@ module cpu8080(addr,     // Address out
    reg    [1:0]  popdes;      // POP destination code
    reg    [5:0]  statesel;    // state map selector
    reg    [4:0]  nextstate;   // next state output
+   reg           eienb;       // interrupt enable delay shift reg
    
    // Register file. Note that 3'b110 (6) is not used, and is the code for a
    // memory reference.

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueInt: 03
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: AND_LOG
                        list: ops
                            HdlValueId: intr
                            HdlValueId: ei
                    HdlStmAssign: if_true
                        HdlValueInt: 01
                        HdlValueId: state
                    list: elifs
                    HdlStmAssign: if_false
                        HdlValueInt: 03
                        HdlValueId: state
    INS HdlValueInt@@01 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@02 to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body
HdlStmIf
    HdlValueId: eienb
    HdlStmAssign: if_true
        HdlValueInt: 1
        HdlValueId: ei
    list: elifs

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: eienb

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 1
                HdlValueId: intcyc
            HdlStmAssign
                HdlValueInt: 1
                HdlValueId: inta
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: ei
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@01 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@02 from 
    DEL tuple@@ from cases
    tuple
        HdlValueInt: 03
        HdlStmBlock: SEQ
            list: body

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@11 from 


CommitId: 58e4ac24ea252cb45a2b804df2e62245754f9c98
This commit was generated by cvs2svn to compensate for changes in r9, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -217,6 +224,7 @@ module cpu8080(addr,     // Address out
    reg           zero; // zero bit
    reg           parity; // parity bit
    reg           ei; // interrupt enable
+   reg           intcyc; // in interrupt cycle
 
    // ALU communication
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueInt: 03
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: AND_LOG
                        list: ops
                            HdlValueId: intr
                            HdlValueId: ei
                    HdlStmAssign: if_true
                        HdlValueInt: 01
                        HdlValueId: state
                    list: elifs
                    HdlStmAssign: if_false
                        HdlValueInt: 03
                        HdlValueId: state
    INS HdlValueInt@@01 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@02 to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@01 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@02 from 
    DEL tuple@@ from cases
    tuple
        HdlValueInt: 03
        HdlStmBlock: SEQ
            list: body

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@11 from 


CommitId: 58e4ac24ea252cb45a2b804df2e62245754f9c98
This commit was generated by cvs2svn to compensate for changes in r9, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -245,18 +253,31 @@ module cpu8080(addr,     // Address out
       readio <= 0;
       writeio <= 0;
       inta <= 0;
-      ei <= 1; // interrupts on on reset, check this
+      intcyc <= 0;
+      ei <= 1;
+      eienb <= 0;
 
    end else case (state)
        
       `cpus_fetchi: begin // start of instruction fetch
        
-         // interrupt is like a normal instruction cycle, except we set the 
-         // acknowledge for the entire instruction fetch.
-         if (intr && ei) inta <= 1; // interrupt request, set interrupt acknowledge
-         else inta <= 0; // clear interrupt acknowledge
+         // if interrupt request is on, enter interrupt cycle, else exit it now
+         if (intr&&ei) begin
+
+            intcyc <= 1; // enter interrupt cycle
+            inta <= 1; // activate interrupt acknowledge
+            ei <= 0; // disable interrupts
+
+         end else begin
+
+            intcyc <= 0; // leave interrupt cycle
+            readmem <= 1; // activate instruction memory read
+
+         end
+            
          addr <= pc; // place current program count on output
-         readmem <= 1; // activate instruction memory read
+         if (eienb) ei <=1; // process delayed interrupt enable
+         eienb <=0; // reset interrupt enabler
          state <= `cpus_fetchi2; // next state
        
       end

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueInt: 03
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: AND_LOG
                        list: ops
                            HdlValueId: intr
                            HdlValueId: ei
                    HdlStmAssign: if_true
                        HdlValueInt: 01
                        HdlValueId: state
                    list: elifs
                    HdlStmAssign: if_false
                        HdlValueInt: 03
                        HdlValueId: state
    INS HdlValueInt@@01 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@02 to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@11 to 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@01 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@02 from 
    DEL tuple@@ from cases
    tuple
        HdlValueInt: 03
        HdlStmBlock: SEQ
            list: body

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@11 from 


CommitId: 58e4ac24ea252cb45a2b804df2e62245754f9c98
This commit was generated by cvs2svn to compensate for changes in r9, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -264,6 +285,7 @@ module cpu8080(addr,     // Address out
       `cpus_fetchi2: begin // complete instruction memory read
        
          readmem <= 0; // Deactivate instruction memory read
+         inta <= 0; // and interrupt acknowledge
           
          // We split off the instructions into 4 groups. Most of the 8080
          // instructions are in the MOV and ACC operations class.

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueInt: 03
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: AND_LOG
                        list: ops
                            HdlValueId: intr
                            HdlValueId: ei
                    HdlStmAssign: if_true
                        HdlValueInt: 01
                        HdlValueId: state
                    list: elifs
                    HdlStmAssign: if_false
                        HdlValueInt: 03
                        HdlValueId: state
    INS HdlValueInt@@01 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@02 to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@11 to 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@01 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@02 from 
    DEL tuple@@ from cases
    tuple
        HdlValueInt: 03
        HdlStmBlock: SEQ
            list: body

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@11 from 


CommitId: 58e4ac24ea252cb45a2b804df2e62245754f9c98
This commit was generated by cvs2svn to compensate for changes in r9, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -842,7 +864,10 @@ module cpu8080(addr,     // Address out
 
                      raddrhold <= pc+1; // pick up call address
                      waddrhold <= sp-2; // place address on stack
-                     { wdatahold2, wdatahold } <= pc+3; // of address after call
+                     // if interrupt cycle, use current pc, else use address
+                     // after call
+                     if (intcyc) { wdatahold2, wdatahold } <= pc;
+                     else { wdatahold2, wdatahold } <= pc+3;
                      sp <= sp-2; // pushdown stack
                      statesel <= `mac_call; // finish CALL
                      state <= `cpus_read;

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueInt: 03
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: AND_LOG
                        list: ops
                            HdlValueId: intr
                            HdlValueId: ei
                    HdlStmAssign: if_true
                        HdlValueInt: 01
                        HdlValueId: state
                    list: elifs
                    HdlStmAssign: if_false
                        HdlValueInt: 03
                        HdlValueId: state
    INS HdlValueInt@@01 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@02 to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@01 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@02 from 
    DEL tuple@@ from cases
    tuple
        HdlValueInt: 03
        HdlStmBlock: SEQ
            list: body

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: 58e4ac24ea252cb45a2b804df2e62245754f9c98
This commit was generated by cvs2svn to compensate for changes in r9, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -927,6 +952,10 @@ module cpu8080(addr,     // Address out
 
                      pc <= data & 8'b00111000; // place restart value in PC
                      waddrhold <= sp-2; // place address on stack
+                     // if interrupt cycle, use current pc, else use address
+                     // after call
+                     if (intcyc) { wdatahold2, wdatahold } <= pc;
+                     else { wdatahold2, wdatahold } <= pc+3;
                      { wdatahold2, wdatahold } <= pc+1; // of address after call
                      sp <= sp-2; // pushdown stack
                      statesel <= `mac_writedbyte; // finish RST

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueInt: 03
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: AND_LOG
                        list: ops
                            HdlValueId: intr
                            HdlValueId: ei
                    HdlStmAssign: if_true
                        HdlValueInt: 01
                        HdlValueId: state
                    list: elifs
                    HdlStmAssign: if_false
                        HdlValueInt: 03
                        HdlValueId: state
    INS HdlValueInt@@01 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@02 to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@01 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@02 from 
    DEL tuple@@ from cases
    tuple
        HdlValueInt: 03
        HdlStmBlock: SEQ
            list: body


CommitId: 58e4ac24ea252cb45a2b804df2e62245754f9c98
This commit was generated by cvs2svn to compensate for changes in r9, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -1040,7 +1069,8 @@ module cpu8080(addr,     // Address out
 
          addr <= raddrhold; // place address on output
          raddrhold <= raddrhold+1; // next address
-         readmem <= 1; // activate instruction memory read
+         if (intcyc) inta <= 1; // activate interrupt acknowledge
+         else readmem <= 1; // activate instruction memory read
          state <= `cpus_read2; // next state
          
       end

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueInt: 03
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: AND_LOG
                        list: ops
                            HdlValueId: intr
                            HdlValueId: ei
                    HdlStmAssign: if_true
                        HdlValueInt: 01
                        HdlValueId: state
                    list: elifs
                    HdlStmAssign: if_false
                        HdlValueInt: 03
                        HdlValueId: state
    INS HdlValueInt@@01 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@02 to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@01 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@02 from 
    DEL tuple@@ from cases
    tuple
        HdlValueInt: 03
        HdlStmBlock: SEQ
            list: body


CommitId: 58e4ac24ea252cb45a2b804df2e62245754f9c98
This commit was generated by cvs2svn to compensate for changes in r9, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -1052,6 +1082,7 @@ module cpu8080(addr,     // Address out
             rdatahold2 <= rdatahold; // shift data
             rdatahold <= data; // read new data
             readmem <= 0; // deactivate instruction memory read
+            inta <= 0; // deactivate interrupt acknowledge
             state <= nextstate; // get next macro state
             statesel <= statesel+1; // and index next in macro 
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueInt: 03
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: AND_LOG
                        list: ops
                            HdlValueId: intr
                            HdlValueId: ei
                    HdlStmAssign: if_true
                        HdlValueInt: 01
                        HdlValueId: state
                    list: elifs
                    HdlStmAssign: if_false
                        HdlValueInt: 03
                        HdlValueId: state
    INS HdlValueInt@@01 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@02 to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@01 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@02 from 
    DEL tuple@@ from cases
    tuple
        HdlValueInt: 03
        HdlStmBlock: SEQ
            list: body


CommitId: 58e4ac24ea252cb45a2b804df2e62245754f9c98
This commit was generated by cvs2svn to compensate for changes in r9, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -1140,8 +1171,11 @@ module cpu8080(addr,     // Address out
 
       `cpus_halt: begin // Halt waiting for interrupt
 
-         // nothing to do, we leave the state at halt, which will cause it to
-         // be executed continually until we exit.
+         // If there is an interrupt request and interrupts are enabled, then we
+         // can leave halt. Otherwise we stay here.
+         if (intr&&ei) state <= `cpus_fetchi; // Fetch next instruction
+         else state <= `cpus_halt;
+        
 
       end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueInt: 03
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: AND_LOG
                        list: ops
                            HdlValueId: intr
                            HdlValueId: ei
                    HdlStmAssign: if_true
                        HdlValueInt: 01
                        HdlValueId: state
                    list: elifs
                    HdlStmAssign: if_false
                        HdlValueInt: 03
                        HdlValueId: state
    INS HdlValueInt@@01 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@02 to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@01 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@02 from 
    DEL tuple@@ from cases
    tuple
        HdlValueInt: 03
        HdlStmBlock: SEQ
            list: body


CommitId: a78500c1fb90e0550feb0e437644bf3a2c720990
This commit was generated by cvs2svn to compensate for changes in r24, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -884,7 +887,6 @@ module cpu8080(addr,     // Address out
                      // after call
                      if (intcyc) { wdatahold2, wdatahold } <= pc;
                      else { wdatahold2, wdatahold } <= pc+3;
-                     sp <= sp-2; // pushdown stack
                      statesel <= `mac_call; // finish CALL
                      state <= `cpus_read;
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueInt@@04 to 
    INS HdlValueInt@@23 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@24 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: a78500c1fb90e0550feb0e437644bf3a2c720990
This commit was generated by cvs2svn to compensate for changes in r24, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -896,7 +898,6 @@ module cpu8080(addr,     // Address out
                      raddrhold <= pc+1; // pick up call address
                      waddrhold <= sp-2; // place address on stack
                      { wdatahold2, wdatahold } <= pc+3; // of address after call
-                     sp <= sp-2; // pushdown stack
                      statesel <= `mac_call; // finish CALL
                      // choose continue or read according to condition
                      case (opcode[5:3]) // decode flag cases

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueInt@@04 to 
    INS HdlValueInt@@23 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@24 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: a78500c1fb90e0550feb0e437644bf3a2c720990
This commit was generated by cvs2svn to compensate for changes in r24, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -926,8 +927,7 @@ module cpu8080(addr,     // Address out
                   6'b001001: begin // RET
 
                      raddrhold <= sp; // read from stack
-                     sp <= sp+2; // pushup stack
-                     statesel <= `mac_jmp; // finish JMP
+                     statesel <= `mac_ret; // finish RET
                      state <= `cpus_read;
 
                   end

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueInt@@04 to 
    INS HdlValueInt@@23 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@24 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: a78500c1fb90e0550feb0e437644bf3a2c720990
This commit was generated by cvs2svn to compensate for changes in r24, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -936,8 +936,7 @@ module cpu8080(addr,     // Address out
                   6'b101000, 6'b110000, 6'b111000: begin // Rcc
 
                      raddrhold <= sp; // read from stack
-                     sp <= sp+2; // pushup stack
-                     statesel <= `mac_jmp; // finish JMP
+                     statesel <= `mac_ret; // finish JMP
                      // choose read or continue according to condition
                      case (opcode[5:3]) // decode flag cases
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueInt@@04 to 
    INS HdlValueInt@@23 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@24 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: a78500c1fb90e0550feb0e437644bf3a2c720990
This commit was generated by cvs2svn to compensate for changes in r24, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -1146,6 +1145,22 @@ module cpu8080(addr,     // Address out
 
       end
 
+      `cpus_call: begin // call address
+
+         sp <= sp-2; // pushdown stack
+         state <= `cpus_fetchi; // and return to instruction fetch
+         pc <= { rdatahold, rdatahold2 };
+
+      end
+
+      `cpus_ret: begin // return from call
+
+         sp <= sp+2; // pushup stack
+         state <= `cpus_fetchi; // and return to instruction fetch
+         pc <= { rdatahold, rdatahold2 };
+
+      end
+
       `cpus_in: begin // input single byte to A
 
          addr <= rdatahold; // place I/O address on address lines

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueInt@@04 to 
    INS HdlValueInt@@23 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@24 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -253,17 +280,17 @@ module cpu8080(addr,     // Address out
    always @(posedge clock)
       if (reset) begin // syncronous reset actions
        
-      state <= `cpus_fetchi; // Clear CPU state to initial fetch
-      pc <= 0; // reset program counter to 1st location
-      dataeno <= 0; // get off the data bus
-      readmem <= 0; // all signals out false
+      state    <= `cpus_fetchi; // Clear CPU state to initial fetch
+      pc       <= 0; // reset program counter to 1st location
+      dataeno  <= 0; // get off the data bus
+      readmem  <= 0; // all signals out false
       writemem <= 0;
-      readio <= 0;
-      writeio <= 0;
-      inta <= 0;
-      intcyc <= 0;
-      ei <= 1;
-      eienb <= 0;
+      readio   <= 0;
+      writeio  <= 0;
+      inta     <= 0;
+      intcyc   <= 0;
+      ei       <= 1; // interrupts on by default
+      eienb    <= 0;
 
    end else case (state)
        

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -273,12 +300,12 @@ module cpu8080(addr,     // Address out
          if (intr&&ei) begin
 
             intcyc <= 1; // enter interrupt cycle
-            inta <= 1; // activate interrupt acknowledge
-            ei <= 0; // disable interrupts
+            inta   <= 1; // activate interrupt acknowledge
+            ei     <= 0; // disable interrupts
 
          end else begin
 
-            intcyc <= 0; // leave interrupt cycle
+            intcyc  <= 0; // leave interrupt cycle
             readmem <= 1; // activate instruction memory read
 
          end

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmAssign@@if_true to if_true
    UPD HdlOp@@ADD to ADD
        UPD HdlValueInt@@6 to 06

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -298,7 +325,10 @@ module cpu8080(addr,     // Address out
 
       `cpus_fetchi3: begin // complete instruction memory read
 
-         if (!waitr) begin // no wait selected, otherwise cycle
+`ifndef NOWAIT
+         if (!waitr) 
+`endif
+            begin // no wait selected, otherwise cycle
 
             opcode <= data; // latch opcode
             readmem <= 0; // Deactivate instruction memory read

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -306,7 +336,7 @@ module cpu8080(addr,     // Address out
             state <= `cpus_fetchi4; // next state
 
          end
-         
+   
       end
        
       `cpus_fetchi4: begin // complete instruction memory read

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -325,7 +355,7 @@ module cpu8080(addr,     // Address out
                      // yes, do nothing
 
                      state <= `cpus_fetchi; // Fetch next instruction
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -333,7 +363,7 @@ module cpu8080(addr,     // Address out
 
                      carry <= 1; // set carry flag
                      state <= `cpus_fetchi; // Fetch next instruction
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -341,7 +371,7 @@ module cpu8080(addr,     // Address out
 
                      carry <= ~carry; // complement carry flag
                      state <= `cpus_fetchi; // Fetch next instruction
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -349,7 +379,7 @@ module cpu8080(addr,     // Address out
 
                      regfil[`reg_a] <= ~regfil[`reg_a]; // complement accumulator
                      state <= `cpus_fetchi; // Fetch next instruction
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -359,9 +389,9 @@ module cpu8080(addr,     // Address out
                      // results in nybbles greater than 9
 
                      if (regfil[`reg_a][3:0] > 9 || auxcar)
-                        { auxcar, regfil[`reg_a] } <= regfil[`reg_a]+6;
+                        { auxcar, regfil[`reg_a] } <= regfil[`reg_a]+8'h06;
                      state <= `cpus_daa; // finish DAA
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -382,7 +412,7 @@ module cpu8080(addr,     // Address out
                         state <= `cpus_read; // read byte
 
                      end else state <= `cpus_indcb; // go inr/dcr cycleback
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -395,7 +425,7 @@ module cpu8080(addr,     // Address out
                         waddrhold <= regfil[`reg_b] << 8|regfil[`reg_c];
                      statesel <= `mac_writebyte; // write byte
                      state <= `cpus_write;
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
                     
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -408,7 +438,7 @@ module cpu8080(addr,     // Address out
                         raddrhold <= regfil[`reg_b]<<8|regfil[`reg_c];
                      statesel <= `mac_readbtoreg; // read byte to register
                      state <= `cpus_read;
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -418,7 +448,7 @@ module cpu8080(addr,     // Address out
                      { carry, regfil[`reg_a] } <= 
                         (regfil[`reg_a] << 1)+regfil[`reg_a][7];
                      state <= `cpus_fetchi; // Fetch next instruction
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -427,7 +457,7 @@ module cpu8080(addr,     // Address out
                      // rotate left through carry
                      { carry, regfil[`reg_a] } <= (regfil[`reg_a] << 1)+carry;
                      state <= `cpus_fetchi; // Fetch next instruction
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -438,7 +468,7 @@ module cpu8080(addr,     // Address out
                         (regfil[`reg_a] >> 1)+(regfil[`reg_a][0] << 7);
                      carry <= regfil[`reg_a][0];
                      state <= `cpus_fetchi; // Fetch next instruction
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -448,7 +478,7 @@ module cpu8080(addr,     // Address out
                      regfil[`reg_a] <= (regfil[`reg_a] >> 1)+(carry << 7);
                      carry <= regfil[`reg_a][0];
                      state <= `cpus_fetchi; // Fetch next instruction
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -459,7 +489,7 @@ module cpu8080(addr,     // Address out
                         (regfil[`reg_h] << 8)+regfil[`reg_l]+
                         (regfil[`reg_b] << 8)+regfil[`reg_c];
                      state <= `cpus_fetchi; // Fetch next instruction
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -470,7 +500,7 @@ module cpu8080(addr,     // Address out
                         (regfil[`reg_h] << 8)+regfil[`reg_l]+
                         (regfil[`reg_d] << 8)+regfil[`reg_e];
                      state <= `cpus_fetchi; // Fetch next instruction
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -481,7 +511,7 @@ module cpu8080(addr,     // Address out
                         (regfil[`reg_h] << 8)+regfil[`reg_l]+
                         (regfil[`reg_h] << 8)+regfil[`reg_l];
                      state <= `cpus_fetchi; // Fetch next instruction
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -491,7 +521,7 @@ module cpu8080(addr,     // Address out
                      { carry, regfil[`reg_h], regfil[`reg_l] } <= 
                         (regfil[`reg_h] << 8)+regfil[`reg_l]+sp;
                      state <= `cpus_fetchi; // Fetch next instruction
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -499,11 +529,11 @@ module cpu8080(addr,     // Address out
 
                      // increment BC, no flags set
                      regfil[`reg_b] <= 
-                        (((regfil[`reg_b] << 8)+regfil[`reg_c])+1)>>8;
+                        (((regfil[`reg_b] << 8)+regfil[`reg_c])+16'h1)>>8;
                      regfil[`reg_c] <= 
-                        ((regfil[`reg_b] << 8)+regfil[`reg_c])+1;
+                        ((regfil[`reg_b] << 8)+regfil[`reg_c])+16'h1;
                      state <= `cpus_fetchi; // Fetch next instruction
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -511,11 +541,11 @@ module cpu8080(addr,     // Address out
 
                      // increment DE, no flags set
                      regfil[`reg_d] <= 
-                        (((regfil[`reg_d] << 8)+regfil[`reg_e])+1)>>8;
+                        (((regfil[`reg_d] << 8)+regfil[`reg_e])+16'h1)>>8;
                      regfil[`reg_e] <= 
-                        ((regfil[`reg_d] << 8)+regfil[`reg_e])+1;
+                        ((regfil[`reg_d] << 8)+regfil[`reg_e])+16'h1;
                      state <= `cpus_fetchi; // Fetch next instruction
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -523,20 +553,20 @@ module cpu8080(addr,     // Address out
 
                      // increment HL, no flags set
                      regfil[`reg_h] <= 
-                        (((regfil[`reg_h] << 8)+regfil[`reg_l])+1)>>8;
+                        (((regfil[`reg_h] << 8)+regfil[`reg_l])+16'h1)>>8;
                      regfil[`reg_l] <= 
-                        ((regfil[`reg_h] << 8)+regfil[`reg_l])+1;
+                        ((regfil[`reg_h] << 8)+regfil[`reg_l])+16'h1;
                      state <= `cpus_fetchi; // Fetch next instruction
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 
                   6'b110011: begin // INX SP
 
                      // increment SP, no flags set
-                     sp <= sp+1;
+                     sp <= sp + 16'b1;
                      state <= `cpus_fetchi; // Fetch next instruction
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlOp: ADD
        list: ops
            HdlValueId: pc
            HdlValueInt: 3
    HdlValueId: pc


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -544,11 +574,11 @@ module cpu8080(addr,     // Address out
 
                      // decrement BC, no flags set
                      regfil[`reg_b] <= 
-                        (((regfil[`reg_b] << 8)+regfil[`reg_c])-1)>>8;
+                        (((regfil[`reg_b] << 8)+regfil[`reg_c])-16'h1)>>8;
                      regfil[`reg_c] <= 
-                        ((regfil[`reg_b] << 8)+regfil[`reg_c])-1;
+                        ((regfil[`reg_b] << 8)+regfil[`reg_c])-16'h1;
                      state <= `cpus_fetchi; // Fetch next instruction
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -556,11 +586,11 @@ module cpu8080(addr,     // Address out
 
                      // decrement DE, no flags set
                      regfil[`reg_d] <= 
-                        (((regfil[`reg_d] << 8)+regfil[`reg_e])-1)>>8;
+                        (((regfil[`reg_d] << 8)+regfil[`reg_e])-16'h1)>>8;
                      regfil[`reg_e] <= 
-                        ((regfil[`reg_d] << 8)+regfil[`reg_e])-1;
+                        ((regfil[`reg_d] << 8)+regfil[`reg_e])-16'h1;
                      state <= `cpus_fetchi; // Fetch next instruction
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -568,57 +598,56 @@ module cpu8080(addr,     // Address out
 
                      // decrement HL, no flags set
                      regfil[`reg_h] <= 
-                        (((regfil[`reg_h] << 8)+regfil[`reg_l])-1)>>8;
+                        (((regfil[`reg_h] << 8)+regfil[`reg_l])-16'h1)>>8;
                      regfil[`reg_l] <= 
-                        ((regfil[`reg_h] << 8)+regfil[`reg_l])-1;
+                        ((regfil[`reg_h] << 8)+regfil[`reg_l])-16'h1;
                      state <= `cpus_fetchi; // Fetch next instruction
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+1'h1; // Next instruction byte
 
                   end
 
                   6'b111011: begin // DCX SP
 
                      // decrement SP, no flags set
-                     sp <= sp-1;
+                     sp <= sp-16'b1;
                      state <= `cpus_fetchi; // Fetch next instruction
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 
                   6'b000001: begin // LXI B
 
-                     raddrhold <= pc+1; // pick up after instruction
+                     raddrhold <= pc+16'h1; // pick up after instruction
                      statesel <= `mac_readdtobc; // read double to BC
                      state <= `cpus_read;
-                     pc <= pc+3; // skip
+                     pc <= pc+16'h3; // skip
 
                   end
 
                   6'b010001: begin // LXI D
 
-                     raddrhold <= pc+1; // pick up after instruction
+                     raddrhold <= pc+16'h1; // pick up after instruction
                      statesel <= `mac_readdtode; // read double to DE
                      state <= `cpus_read;
-                     pc <= pc+3; // skip
+                     pc <= pc+16'h3; // skip
 
                   end
 
                   6'b100001: begin // LXI H
 
-                     raddrhold <= pc+1; // pick up after instruction
+                     raddrhold <= pc+16'h1; // pick up after instruction
                      statesel <= `mac_readdtohl; // read double to HL
                      state <= `cpus_read;
-                     pc <= pc+3; // skip
+                     pc <= pc+16'h3; // skip
 
                   end
 
                   6'b110001: begin // LXI SP
 
-                     raddrhold <= pc+1; // pick up after instruction
-                     pc <= pc+3; // skip
+                     raddrhold <= pc+16'h1; // pick up after instruction
                      statesel <= `mac_readdtosp; // read double to SP
                      state <= `cpus_read;
-                     pc <= pc+3; // skip
+                     pc <= pc+16'h3; // skip
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -627,7 +656,7 @@ module cpu8080(addr,     // Address out
 
                      // move immediate to register
                      regd <= opcode[5:3]; // set destination register
-                     raddrhold <= pc+1; // set pickup address
+                     raddrhold <= pc+16'h1; // set pickup address
                      if (opcode[5:3] == `reg_m) begin // it's mvi m,imm
 
                         regd <= opcode[5:3]; // set destination register

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -638,27 +667,27 @@ module cpu8080(addr,     // Address out
                      end else 
                         statesel <= `mac_readbmtr; // read byte and move to register
                      state <= `cpus_read;
-                     pc <= pc+2; // advance over byte
+                     pc <= pc+16'h2; // advance over byte
 
                   end
 
                   6'b110010: begin // STA
 
                      wdatahold <= regfil[`reg_a]; // set write data
-                     raddrhold <= pc+1; // set read address
+                     raddrhold <= pc+16'h1; // set read address
                      statesel <= `mac_sta; // perform sta
                      state <= `cpus_read;
-                     pc <= pc+3; // next
+                     pc <= pc + 16'h3; // next
 
                   end
 
                   6'b111010: begin // LDA
 
-                     raddrhold <= pc+1; // set read address
+                     raddrhold <= pc+16'h1; // set read address
                      regd <= `reg_a; // set destination
                      statesel <= `mac_lda; // perform lda
                      state <= `cpus_read;
-                     pc <= pc+3; // next
+                     pc <= pc+16'h3; // next
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -666,19 +695,19 @@ module cpu8080(addr,     // Address out
 
                      wdatahold <= regfil[`reg_l]; // set write data
                      wdatahold2 <= regfil[`reg_h];
-                     raddrhold <= pc+1; // set read address
+                     raddrhold <= pc+16'h1; // set read address
                      statesel <= `mac_shld; // perform SHLD
                      state <= `cpus_read;
-                     pc <= pc+3; // next
+                     pc <= pc+16'h3; // skip
 
                   end
 
                   6'b101010: begin // LHLD
 
-                     raddrhold <= pc+1; // set read address
+                     raddrhold <= pc+16'h1; // set read address
                      statesel <= `mac_lhld; // perform LHLD
                      state <= `cpus_read;
-                     pc <= pc+3; // next
+                     pc <= pc+16'h3; // skip
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlValueInt@@001011 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011001 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@101101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@111101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -688,7 +717,7 @@ module cpu8080(addr,     // Address out
                   6'b110000, 6'b110000: begin 
 
                      state <= `cpus_fetchi; // fetch next instruction
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlValueInt@@001011 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011001 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@101101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@111101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -733,7 +762,7 @@ module cpu8080(addr,     // Address out
                   end
 
                end
-               pc <= pc+1; // Next instruction byte
+               pc <= pc+16'h1; // Next instruction byte
              
             end
              

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueInt@@001011 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011001 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@101101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@111101 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlValueInt@@001011 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011001 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@101101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@111101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -753,7 +782,7 @@ module cpu8080(addr,     // Address out
 
                end else
                   state <= `cpus_alucb; // go to alu cycleback
-               pc <= pc+1; // Next instruction byte
+               pc <= pc+16'h1; // Next instruction byte
 
             end
              

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueInt@@001011 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011001 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@101101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@111101 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlValueInt@@001011 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011001 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@101101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@111101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -763,8 +792,8 @@ module cpu8080(addr,     // Address out
 
                   6'b000101, 6'b010101, 6'b100101, 6'b110101: begin // PUSH
 
-                     waddrhold <= sp-2; // write to stack
-                     sp <= sp-2; // pushdown stack
+                     waddrhold <= sp-16'h2; // write to stack
+                     sp <= sp-16'h2; // pushdown stack
                      case (opcode[5:4]) // register set
 
                         2'b00: { wdatahold2, wdatahold } <= 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueInt@@001011 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011001 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@101101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@111101 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlValueInt@@001011 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011001 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@101101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@111101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -780,7 +809,7 @@ module cpu8080(addr,     // Address out
                      endcase
                      statesel <= `mac_writedbyte; // write double byte
                      state <= `cpus_write;
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueInt@@001011 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011001 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@101101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@111101 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlValueInt@@001011 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011001 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@101101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@111101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -788,10 +817,10 @@ module cpu8080(addr,     // Address out
 
                      popdes <= opcode[5:4]; // set destination
                      raddrhold <= sp; // read from stack
-                     sp <= sp+2; // pushup stack
+                     sp <= sp+16'h2; // pushup stack
                      statesel <= `mac_pop; // perform POP
                      state <= `cpus_read;
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueInt@@001011 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011001 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@101101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@111101 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlValueInt@@001011 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011001 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@101101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@111101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -802,7 +831,7 @@ module cpu8080(addr,     // Address out
                      regfil[`reg_h] <= regfil[`reg_d];
                      regfil[`reg_l] <= regfil[`reg_e];
                      state <= `cpus_fetchi; // Fetch next instruction
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueInt@@001011 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011001 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@101101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@111101 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlValueInt@@001011 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011001 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@101101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@111101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -814,7 +843,7 @@ module cpu8080(addr,     // Address out
                      wdatahold2 <= regfil[`reg_h];
                      statesel <= `mac_xthl; // perform XTHL
                      state <= `cpus_read;
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueInt@@001011 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011001 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@101101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@111101 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlValueInt@@001011 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011001 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@101101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@111101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -822,7 +851,7 @@ module cpu8080(addr,     // Address out
 
                      sp <= { regfil[`reg_h], regfil[`reg_l] };
                      state <= `cpus_fetchi; // Fetch next instruction
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueInt@@001011 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011001 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@101101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@111101 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlValueInt@@001011 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011001 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@101101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@111101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -833,10 +862,10 @@ module cpu8080(addr,     // Address out
                      aluopra <= regfil[`reg_a]; // load as alu a
                      alusel <= opcode[5:3]; // set alu operation from instruction
                      alucin <= carry; // input carry
-                     raddrhold <= pc+1; // read at PC
+                     raddrhold <= pc+16'h1; // read at PC
                      statesel <= `mac_accimm; // finish accumulator immediate
                      state <= `cpus_read;
-                     pc <= pc+2; // skip immediate byte
+                     pc <= pc+16'h2; // skip immediate byte
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueInt@@001011 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011001 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@101101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@111101 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlValueInt@@001011 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011001 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@101101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@111101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -849,7 +878,7 @@ module cpu8080(addr,     // Address out
 
                   6'b000011: begin // JMP
 
-                     raddrhold <= pc+1; // pick up jump address
+                     raddrhold <= pc+16'h1; // pick up jump address
                      statesel <= `mac_jmp; // finish JMP
                      state <= `cpus_read;
   

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueInt@@001011 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011001 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@101101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@111101 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlValueInt@@001011 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011001 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@101101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@111101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -858,7 +887,7 @@ module cpu8080(addr,     // Address out
                   6'b000010, 6'b001010, 6'b010010, 6'b011010, 6'b100010, 
                   6'b101010, 6'b110010, 6'b111010: begin // Jcc
 
-                     raddrhold <= pc+1; // pick up jump address
+                     raddrhold <= pc+16'h1; // pick up jump address
                      statesel <= `mac_jmp; // finish JMP
                      // choose continue or read according to condition
                      case (opcode[5:3]) // decode flag cases

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueInt@@001011 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011001 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@101101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@111101 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlValueInt@@001011 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011001 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@101101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@111101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -881,18 +910,18 @@ module cpu8080(addr,     // Address out
                                 else state <= `cpus_read;
 
                      endcase
-                     pc <= pc+3; // advance after jump for false
+                     pc <= pc+16'h3; // advance after jump for false
 
                   end
 
                   6'b001101: begin // CALL
 
-                     raddrhold <= pc+1; // pick up call address
-                     waddrhold <= sp-2; // place address on stack
+                     raddrhold <= pc+16'h1; // pick up call address
+                     waddrhold <= sp-16'h2; // place address on stack
                      // if interrupt cycle, use current pc, else use address
                      // after call
                      if (intcyc) { wdatahold2, wdatahold } <= pc;
-                     else { wdatahold2, wdatahold } <= pc+3;
+                     else { wdatahold2, wdatahold } <= pc+16'h3;
                      statesel <= `mac_call; // finish CALL
                      state <= `cpus_read;
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueInt@@001011 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011001 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@101101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@111101 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlValueInt@@001011 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011001 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@101101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@111101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -901,9 +930,10 @@ module cpu8080(addr,     // Address out
                   6'b000100, 6'b001100, 6'b010100, 6'b011100, 6'b100100, 
                   6'b101100, 6'b110100, 6'b111100: begin // Ccc
 
-                     raddrhold <= pc+1; // pick up call address
-                     waddrhold <= sp-2; // place address on stack
-                     { wdatahold2, wdatahold } <= pc+3; // of address after call
+                     raddrhold <= pc+16'h1; // pick up call address
+                     waddrhold <= sp-16'h2; // place address on stack
+                     // of address after call
+                     { wdatahold2, wdatahold } <= pc + 16'h3;
                      statesel <= `mac_call; // finish CALL
                      // choose continue or read according to condition
                      case (opcode[5:3]) // decode flag cases

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueInt@@001011 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011001 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@101101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@111101 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlValueInt@@001011 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011001 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@101101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@111101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -926,7 +956,7 @@ module cpu8080(addr,     // Address out
                                 else state <= `cpus_read;
 
                      endcase
-                     pc <= pc+3; // advance after jump for false
+                     pc <= pc+16'h3; // advance after jump for false
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueInt@@001011 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011001 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@101101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@111101 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlValueInt@@001011 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011001 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@011101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@101101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueInt@@111101 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlOp: ADD
        list: ops
            HdlValueId: pc
            HdlValueInt: 2
    HdlValueId: pc


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -964,7 +994,7 @@ module cpu8080(addr,     // Address out
                                 else state <= `cpus_read;
 
                      endcase
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueInt@@001011 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011001 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@101101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@111101 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -972,13 +1002,13 @@ module cpu8080(addr,     // Address out
                   6'b101111, 6'b110111, 6'b111111: begin // RST
 
                      pc <= opcode & 8'b00111000; // place restart value in PC
-                     waddrhold <= sp-2; // place address on stack
+                     waddrhold <= sp-16'h2; // place address on stack
                      // if interrupt cycle, use current pc, else use address
                      // after call
                      if (intcyc) { wdatahold2, wdatahold } <= pc;
-                     else { wdatahold2, wdatahold } <= pc+3;
-                     { wdatahold2, wdatahold } <= pc+1; // of address after call
-                     sp <= sp-2; // pushdown stack
+                     else { wdatahold2, wdatahold } <= pc+16'h3;
+                     { wdatahold2, wdatahold } <= pc+16'h1; // of address after call
+                     sp <= sp-16'h2; // pushdown stack CNS
                      statesel <= `mac_writedbyte; // finish RST
                      state <= `cpus_write; // write to stack
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueInt@@001011 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011001 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@011101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@101101 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueInt@@111101 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -988,7 +1018,7 @@ module cpu8080(addr,     // Address out
 
                      eienb <= 1'b1; // set delayed interrupt enable
                      state <= `cpus_fetchi; // Fetch next instruction
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -996,27 +1026,39 @@ module cpu8080(addr,     // Address out
 
                      ei <= 1'b0;
                      state <= `cpus_fetchi; // Fetch next instruction
-                     pc <= pc+1; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 
                   6'b011011: begin // IN p
 
+`ifndef NOIO
+                     // perform input
                      raddrhold <= pc+1; // pick up byte I/O address
-                     pc <= pc+2; // next
                      statesel <= `mac_in; // finish IN
                      state <= `cpus_read;
-                     pc <= pc+2; // Next instruction byte
+                     pc <= pc+16'h2; // advance over byte
+`else
+                     // ignore instruction
+                     state <= `cpus_fetchi; // fetch next instruction
+                     pc <= pc+16'h1; // Next instruction byte
+`endif       
 
                   end
 
                   6'b010011: begin // OUT p
 
+`ifndef NOIO
+                     // perform output
                      raddrhold <= pc+1; // pick up byte I/O address
-                     pc <= pc+2; // next
                      statesel <= `mac_out; // finish OUT
                      state <= `cpus_read;
-                     pc <= pc+2; // Next instruction byte
+                     pc <= pc+16'h2; // advance over byte
+`else
+                     // ignore instruction
+                     state <= `cpus_fetchi; // fetch next instruction
+                     pc <= pc+16'h1; // Next instruction byte
+`endif       
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -1026,7 +1068,7 @@ module cpu8080(addr,     // Address out
                   6'b111101: begin
 
                      state <= `cpus_fetchi; // fetch next instruction
-                     pc <= pc+2; // Next instruction byte
+                     pc <= pc+16'h1; // Next instruction byte
 
                   end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -1048,7 +1090,7 @@ module cpu8080(addr,     // Address out
       `cpus_write: begin
 
          addr <= waddrhold; // place address on output
-         waddrhold <= waddrhold+1; // next address
+         waddrhold <= waddrhold + 1'b1; // next address
          datao <= wdatahold; // set data to output
          wdatahold <= wdatahold2; // next data
          dataeno <= 1; // enable output data

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmAssign@@ to 
    MOV HdlOp@@AND to 
    HdlOp: AND
        list: ops
            HdlOp: SRL
                list: ops
                    HdlValueId: rdatahold2
                    HdlValueInt: 7
            HdlValueInt: 1

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -1065,7 +1107,10 @@ module cpu8080(addr,     // Address out
 
       `cpus_write3: begin // continue write #3
 
-         if (!waitr) begin // no wait selected, otherwise cycle
+`ifndef NOWAIT
+         if (!waitr) 
+`endif
+            begin // no wait selected, otherwise cycle
 
             writemem <= 0; // disable write memory data
             state <= `cpus_write4; // idle hold time

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -1078,7 +1123,7 @@ module cpu8080(addr,     // Address out
 
          dataeno <= 0; // disable output data
          state <= nextstate; // get next macro state
-         statesel <= statesel+1; // and index next in macro 
+         statesel <= statesel+6'b1; // and index next in macro 
 
       end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -1089,7 +1134,7 @@ module cpu8080(addr,     // Address out
       `cpus_read: begin
 
          addr <= raddrhold; // place address on output
-         raddrhold <= raddrhold+1; // next address
+         raddrhold <= raddrhold + 16'h1; // next address
          if (intcyc) inta <= 1; // activate interrupt acknowledge
          else readmem <= 1; // activate memory read
          state <= `cpus_read2; // next state

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -1105,14 +1150,17 @@ module cpu8080(addr,     // Address out
 
       `cpus_read3: begin // continue read #3
 
-         if (!waitr) begin // no wait selected, otherwise cycle
+`ifndef NOWAIT
+         if (!waitr) 
+`endif
+            begin // no wait selected, otherwise cycle
 
             rdatahold2 <= rdatahold; // shift data
             rdatahold <= data; // read new data
             readmem <= 0; // deactivate instruction memory read
             inta <= 0; // deactivate interrupt acknowledge
             state <= nextstate; // get next macro state
-            statesel <= statesel+1; // and index next in macro 
+            statesel <= statesel+6'b1; // and index next in macro 
 
          end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmAssign@@ to 
    INS HdlOp@@TERNARY to 
    UPD HdlOp@@TERNARY to TERNARY
        INS list@@ops to TERNARY
        INS HdlValueInt@@1 to ops
        INS HdlValueInt@@0 to ops

UPD HdlStmAssign@@ to 
    INS HdlOp@@TERNARY to 
    UPD HdlOp@@TERNARY to TERNARY
        INS list@@ops to TERNARY
        INS HdlValueInt@@1 to ops
        INS HdlValueInt@@0 to ops

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -1131,11 +1179,11 @@ module cpu8080(addr,     // Address out
             2'b11: begin
 
                regfil[`reg_a] <= rdatahold;
-               sign <= rdatahold2 >> 7&1;
-               zero <= rdatahold2 >> 6&1;
-               auxcar <= rdatahold2 >> 4&1;
-               parity <= rdatahold2 >> 2&1;
-               carry <= rdatahold2 >> 0&1;
+               sign   <= ((rdatahold2 >> 7)& 1'b1) ? 1'b1:1'b0;
+               zero   <= ((rdatahold2 >> 6)& 1'b1) ? 1'b1:1'b0;
+               auxcar <= ((rdatahold2 >> 4)& 1'b1) ? 1'b1:1'b0;
+               parity <= ((rdatahold2 >> 2)& 1'b1) ? 1'b1:1'b0;
+               carry  <= ((rdatahold2 >> 0)& 1'b1) ? 1'b1:1'b0;
 
             end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -1153,7 +1201,7 @@ module cpu8080(addr,     // Address out
 
       `cpus_call: begin // call address
 
-         sp <= sp-2; // pushdown stack
+         sp <= sp-16'h2; // pushdown stack
          state <= `cpus_fetchi; // and return to instruction fetch
          pc <= { rdatahold, rdatahold2 };
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -1161,12 +1209,13 @@ module cpu8080(addr,     // Address out
 
       `cpus_ret: begin // return from call
 
-         sp <= sp+2; // pushup stack
+         sp <= sp+16'h2; // pushup stack
          state <= `cpus_fetchi; // and return to instruction fetch
          pc <= { rdatahold, rdatahold2 };
 
       end
 
+`ifndef NOIO // if I/O instructions are to be included
       `cpus_in: begin // input single byte to A
 
          addr <= rdatahold; // place I/O address on address lines

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -1184,7 +1233,10 @@ module cpu8080(addr,     // Address out
 
       `cpus_in3: begin // input single byte to A #3
 
-         if (!waitr) begin // no wait selected, otherwise cycle
+`ifndef NOWAIT
+         if (!waitr) 
+`endif
+            begin // no wait selected, otherwise cycle
 
             regfil[`reg_a] <= data; // place input data
             readio <= 0; // clear read I/O

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -1212,7 +1264,10 @@ module cpu8080(addr,     // Address out
 
       `cpus_out3: begin // continue out #3
 
-         if (!waitr) begin // no wait selected, otherwise cycle
+`ifndef NOWAIT
+         if (!waitr) 
+`endif
+            begin // no wait selected, otherwise cycle
 
             writeio <= 0; // disable write I/O data
             state <= `cpus_out4; // idle hold time

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -1227,6 +1282,7 @@ module cpu8080(addr,     // Address out
          state <= `cpus_fetchi; // Fetch next instruction
 
       end
+`endif
 
       `cpus_halt: begin // Halt waiting for interrupt
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -1241,7 +1297,7 @@ module cpu8080(addr,     // Address out
 
          regfil[regd] <= rdatahold; // place data
          state <= nextstate; // get next macro state
-         statesel <= statesel+1; // and index next in macro 
+         statesel <= statesel+6'b1; // and index next in macro 
 
       end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -1249,7 +1305,7 @@ module cpu8080(addr,     // Address out
 
          aluopra <= rdatahold; // place data
          state <= nextstate; // get next macro state
-         statesel <= statesel+1; // and index next in macro 
+         statesel <= statesel+6'b1; // and index next in macro 
 
       end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -1257,7 +1313,7 @@ module cpu8080(addr,     // Address out
 
          aluoprb <= rdatahold; // place data
          state <= nextstate; // get next macro state
-         statesel <= statesel+1; // and index next in macro 
+         statesel <= statesel+6'b1; // and index next in macro 
 
       end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -1293,7 +1349,7 @@ module cpu8080(addr,     // Address out
          parity <= alupar; // place parity
          auxcar <= aluaxc; // place auxiliary carry
          state <= nextstate; // get next macro state
-         statesel <= statesel+1; // and index next in macro 
+         statesel <= statesel+6'b1; // and index next in macro 
 
       end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -1332,7 +1388,7 @@ module cpu8080(addr,     // Address out
 
          wdatahold <= rdatahold; // move read to write data
          state <= nextstate; // get next macro state
-         statesel <= statesel+1; // and index next in macro 
+         statesel <= statesel+6'b1; // and index next in macro
 
       end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -1340,7 +1396,7 @@ module cpu8080(addr,     // Address out
 
          waddrhold <= { rdatahold, rdatahold2 };
          state <= nextstate; // get next macro state
-         statesel <= statesel+1; // and index next in macro 
+         statesel <= statesel+6'b1; // and index next in macro
 
       end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -1348,7 +1404,7 @@ module cpu8080(addr,     // Address out
 
          raddrhold <= { rdatahold, rdatahold2 };
          state <= nextstate; // get next macro state
-         statesel <= statesel+1; // and index next in macro 
+         statesel <= statesel+6'b1; // and index next in macro
 
       end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -1357,7 +1413,7 @@ module cpu8080(addr,     // Address out
          regfil[`reg_l] <= rdatahold2; // low
          regfil[`reg_h] <= rdatahold; // high
          state <= nextstate; // get next macro state
-         statesel <= statesel+1; // and index next in macro 
+         statesel <= statesel+6'b1; // and index next in macro CNS
 
       end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS HdlValueInt@@04 to 


CommitId: c1da6b56ccb55e3406a52065b296fb75640b736f
This commit was generated by cvs2svn to compensate for changes in r30, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -1569,43 +1625,47 @@ module alu(res, opra, oprb, cin, cout, zout, sout, parity, auxcar, sel);
          `aluop_add: begin // add
 
             { cout, resi } = opra+oprb; // find result and carry
-            auxcar = (opra[3:0]+oprb[3:0]) >> 4 & 1; // find auxiliary carry
+            // find auxiliary carry
+            auxcar = (((opra[3:0]+oprb[3:0]) >> 4) & 8'b1) ? 1'b1 : 1'b0;
 
          end
          `aluop_adc: begin // adc
 
             { cout, resi } = opra+oprb+cin; // find result and carry
-            auxcar = (opra[3:0]+oprb[3:0]+cin) >> 4 & 1; // find auxiliary carry
+            // find auxiliary carry
+            auxcar = (((opra[3:0]+oprb[3:0]+cin) >> 4) & 8'b1) ? 1'b1 : 1'b0;
 
          end
          `aluop_sub, `aluop_cmp: begin // sub/cmp
 
             { cout, resi } = opra-oprb; // find result and carry
-            auxcar = (opra[3:0]-oprb[3:0]) >> 4 & 1; // find auxiliary borrow
+            // find auxiliary borrow
+            auxcar = (((opra[3:0]-oprb[3:0]) >> 4) & 8'b1) ? 1'b1 : 1'b0;
 
          end
          `aluop_sbb: begin // sbb
 
             { cout, resi } = opra-oprb-cin; // find result and carry
-            auxcar = (opra[3:0]-oprb[3:0]-cin >> 4) & 1; // find auxiliary borrow
+            // find auxiliary borrow 
+            auxcar = (((opra[3:0]-oprb[3:0]-cin >> 4)) & 8'b1) ? 1'b1 : 1'b0;
 
          end
          `aluop_and: begin // ana
 
             { cout, resi } = {1'b0, opra&oprb}; // find result and carry
-            auxcar = 0; // clear auxillary carry
+            auxcar = 1'b0; // clear auxillary carry
 
           end
          `aluop_xor: begin // xra
 
             { cout, resi } = {1'b0, opra^oprb}; // find result and carry
-            auxcar = 0; // clear auxillary carry
+            auxcar = 1'b0; // clear auxillary carry
 
          end
          `aluop_or:  begin // ora
 
             { cout, resi } = {1'b0, opra|oprb}; // find result and carry
-            auxcar = 0; // clear auxillary carry
+            auxcar = 1'b0; // clear auxillary carry
 
          end
                      

ParseResult:
UPD HdlStmCase@@sel to sel
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                INS HdlValueInt@@1 to ops
                INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                INS HdlValueInt@@1 to ops
                INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                INS HdlValueInt@@1 to ops
                INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                INS HdlValueInt@@1 to ops
                INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                INS HdlValueInt@@1 to ops
                INS HdlValueInt@@0 to ops


CommitId: 4341f2d124625912e398bc41c607fd66814b1df3
This commit was generated by cvs2svn to compensate for changes in r28, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -353,12 +358,8 @@ module cpu8080(addr,     // Address out
                      // decimal adjust accumulator, or remove by carry any 
                      // results in nybbles greater than 9
 
-                     if (regfil[`reg_a][3:0] > 9 || auxcar) begin
-
-                        { carry, regfil[`reg_a] } <= regfil[`reg_a]+6;
-                        auxcar <= (regfil[`reg_a][3:0]+6 >> 4) & 1;
-
-                     end
+                     if (regfil[`reg_a][3:0] > 9 || auxcar)
+                        { auxcar, regfil[`reg_a] } <= regfil[`reg_a]+6;
                      state <= `cpus_daa; // finish DAA
                      pc <= pc+1; // Next instruction byte
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    tuple
        HdlValueInt: 25
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: rdatahold
                    HdlValueId: aluopra
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS tuple@@ to cases
    tuple
        HdlValueInt: 26
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: rdatahold
                    HdlValueId: aluoprb
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS tuple@@ to cases
    tuple
        HdlValueInt: 27
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: OR
                        list: ops
                            HdlOp: SLL
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: regfil
                                            HdlValueInt: 100
                                    HdlValueInt: 8
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: regfil
                                    HdlValueInt: 101
                    HdlValueId: waddrhold
                HdlStmAssign
                    HdlValueId: alures
                    HdlValueId: wdatahold
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alures
                            HdlValueInt: 7
                    HdlValueId: sign
                HdlStmAssign
                    HdlValueId: aluzout
                    HdlValueId: zero
                HdlStmAssign
                    HdlValueId: alupar
                    HdlValueId: parity
                HdlStmAssign
                    HdlValueId: aluaxc
                    HdlValueId: auxcar
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: 4341f2d124625912e398bc41c607fd66814b1df3
This commit was generated by cvs2svn to compensate for changes in r28, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -374,7 +375,13 @@ module cpu8080(addr,     // Address out
                      aluoprb <= 1; // load 1 as alu b
                      if (opcode[0]) alusel <= `aluop_sub; // set subtract
                      else alusel <= `aluop_add; // set add
-                     state <= `cpus_indcb; // go inr/dcr cycleback
+                     if (opcode[5:3] == `reg_m) begin
+
+                        raddrhold <= regfil[`reg_h]<<8|regfil[`reg_l];
+                        statesel <= `mac_indm; // inc/dec m
+                        state <= `cpus_read; // read byte
+
+                     end else state <= `cpus_indcb; // go inr/dcr cycleback
                      pc <= pc+1; // Next instruction byte
 
                   end

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    tuple
        HdlValueInt: 25
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: rdatahold
                    HdlValueId: aluopra
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS tuple@@ to cases
    tuple
        HdlValueInt: 26
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: rdatahold
                    HdlValueId: aluoprb
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS tuple@@ to cases
    tuple
        HdlValueInt: 27
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: OR
                        list: ops
                            HdlOp: SLL
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: regfil
                                            HdlValueInt: 100
                                    HdlValueInt: 8
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: regfil
                                    HdlValueInt: 101
                    HdlValueId: waddrhold
                HdlStmAssign
                    HdlValueId: alures
                    HdlValueId: wdatahold
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alures
                            HdlValueInt: 7
                    HdlValueId: sign
                HdlStmAssign
                    HdlValueId: aluzout
                    HdlValueId: zero
                HdlStmAssign
                    HdlValueId: alupar
                    HdlValueId: parity
                HdlStmAssign
                    HdlValueId: aluaxc
                    HdlValueId: auxcar
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: 4341f2d124625912e398bc41c607fd66814b1df3
This commit was generated by cvs2svn to compensate for changes in r28, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -383,7 +390,7 @@ module cpu8080(addr,     // Address out
 
                      wdatahold <= regfil[`reg_a]; // place A as source
                      if (opcode[4]) // use DE pair
-                        waddrhold <= regfil[`reg_d]<<8|regfil[`reg_d];
+                        waddrhold <= regfil[`reg_d]<<8|regfil[`reg_e];
                      else // use BC pair
                         waddrhold <= regfil[`reg_b] << 8|regfil[`reg_c];
                      statesel <= `mac_writebyte; // write byte

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    tuple
        HdlValueInt: 25
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: rdatahold
                    HdlValueId: aluopra
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS tuple@@ to cases
    tuple
        HdlValueInt: 26
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: rdatahold
                    HdlValueId: aluoprb
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS tuple@@ to cases
    tuple
        HdlValueInt: 27
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: OR
                        list: ops
                            HdlOp: SLL
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: regfil
                                            HdlValueInt: 100
                                    HdlValueInt: 8
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: regfil
                                    HdlValueInt: 101
                    HdlValueId: waddrhold
                HdlStmAssign
                    HdlValueId: alures
                    HdlValueId: wdatahold
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alures
                            HdlValueInt: 7
                    HdlValueId: sign
                HdlStmAssign
                    HdlValueId: aluzout
                    HdlValueId: zero
                HdlStmAssign
                    HdlValueId: alupar
                    HdlValueId: parity
                HdlStmAssign
                    HdlValueId: aluaxc
                    HdlValueId: auxcar
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: 4341f2d124625912e398bc41c607fd66814b1df3
This commit was generated by cvs2svn to compensate for changes in r28, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -396,7 +403,7 @@ module cpu8080(addr,     // Address out
 
                      regd <= `reg_a; // set A as destination
                      if (opcode[4]) // use DE pair
-                        raddrhold <= regfil[`reg_d]<<8|regfil[`reg_d];
+                        raddrhold <= regfil[`reg_d]<<8|regfil[`reg_e];
                      else // use BC pair
                         raddrhold <= regfil[`reg_b]<<8|regfil[`reg_c];
                      statesel <= `mac_readbtoreg; // read byte to register

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    tuple
        HdlValueInt: 25
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: rdatahold
                    HdlValueId: aluopra
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS tuple@@ to cases
    tuple
        HdlValueInt: 26
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: rdatahold
                    HdlValueId: aluoprb
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS tuple@@ to cases
    tuple
        HdlValueInt: 27
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: OR
                        list: ops
                            HdlOp: SLL
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: regfil
                                            HdlValueInt: 100
                                    HdlValueInt: 8
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: regfil
                                    HdlValueInt: 101
                    HdlValueId: waddrhold
                HdlStmAssign
                    HdlValueId: alures
                    HdlValueId: wdatahold
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alures
                            HdlValueInt: 7
                    HdlValueId: sign
                HdlStmAssign
                    HdlValueId: aluzout
                    HdlValueId: zero
                HdlStmAssign
                    HdlValueId: alupar
                    HdlValueId: parity
                HdlStmAssign
                    HdlValueId: aluaxc
                    HdlValueId: auxcar
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: 4341f2d124625912e398bc41c607fd66814b1df3
This commit was generated by cvs2svn to compensate for changes in r28, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -551,7 +558,7 @@ module cpu8080(addr,     // Address out
                      regfil[`reg_d] <= 
                         (((regfil[`reg_d] << 8)+regfil[`reg_e])-1)>>8;
                      regfil[`reg_e] <= 
-                        ((regfil[`reg_d] << 8)+regfil[`reg_e])-11;
+                        ((regfil[`reg_d] << 8)+regfil[`reg_e])-1;
                      state <= `cpus_fetchi; // Fetch next instruction
                      pc <= pc+1; // Next instruction byte
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    tuple
        HdlValueInt: 25
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: rdatahold
                    HdlValueId: aluopra
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS tuple@@ to cases
    tuple
        HdlValueInt: 26
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: rdatahold
                    HdlValueId: aluoprb
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS tuple@@ to cases
    tuple
        HdlValueInt: 27
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: OR
                        list: ops
                            HdlOp: SLL
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: regfil
                                            HdlValueInt: 100
                                    HdlValueInt: 8
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: regfil
                                    HdlValueInt: 101
                    HdlValueId: waddrhold
                HdlStmAssign
                    HdlValueId: alures
                    HdlValueId: wdatahold
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alures
                            HdlValueInt: 7
                    HdlValueId: sign
                HdlStmAssign
                    HdlValueId: aluzout
                    HdlValueId: zero
                HdlStmAssign
                    HdlValueId: alupar
                    HdlValueId: parity
                HdlStmAssign
                    HdlValueId: aluaxc
                    HdlValueId: auxcar
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: 4341f2d124625912e398bc41c607fd66814b1df3
This commit was generated by cvs2svn to compensate for changes in r28, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -709,7 +716,7 @@ module cpu8080(addr,     // Address out
                      state <= `cpus_read;
 
                   // Check memory destination, use state if so
-                  end else if (regd == `reg_m) begin
+                  end else if (opcode[5:3] == `reg_m) begin
 
                      // place hl as address
                      waddrhold <= regfil[`reg_h]<<8|regfil[`reg_l];

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    tuple
        HdlValueInt: 25
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: rdatahold
                    HdlValueId: aluopra
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS tuple@@ to cases
    tuple
        HdlValueInt: 26
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: rdatahold
                    HdlValueId: aluoprb
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS tuple@@ to cases
    tuple
        HdlValueInt: 27
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: OR
                        list: ops
                            HdlOp: SLL
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: regfil
                                            HdlValueInt: 100
                                    HdlValueInt: 8
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: regfil
                                    HdlValueInt: 101
                    HdlValueId: waddrhold
                HdlStmAssign
                    HdlValueId: alures
                    HdlValueId: wdatahold
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alures
                            HdlValueInt: 7
                    HdlValueId: sign
                HdlStmAssign
                    HdlValueId: aluzout
                    HdlValueId: zero
                HdlStmAssign
                    HdlValueId: alupar
                    HdlValueId: parity
                HdlStmAssign
                    HdlValueId: aluaxc
                    HdlValueId: auxcar
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 011011
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: pc
                            HdlValueInt: 1
                    HdlValueId: raddrhold
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: pc
                            HdlValueInt: 2
                    HdlValueId: pc
                HdlStmAssign
                    HdlValueInt: 51
                    HdlValueId: statesel
                HdlStmAssign
                    HdlValueInt: 12
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: pc
                            HdlValueInt: 2
                    HdlValueId: pc
    UPD HdlValueInt@@010011 to 011011
    UPD HdlValueInt@@011011 to 010011
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@38 to 39

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@38 to 39

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@38 to 39

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@38 to 39

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 


CommitId: 4341f2d124625912e398bc41c607fd66814b1df3
This commit was generated by cvs2svn to compensate for changes in r28, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -741,9 +748,8 @@ module cpu8080(addr,     // Address out
 
                   // set read address
                   raddrhold <= regfil[`reg_h]<<8|regfil[`reg_l];
-                  regd <= `reg_a; // set destination always a
-                  statesel <= `mac_readbtoreg; // read byte to register
-                  state <= `cpus_read;
+                  statesel <= `mac_alum; // alu from m
+                  state <= `cpus_read; // read byte
 
                end else
                   state <= `cpus_alucb; // go to alu cycleback

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    tuple
        HdlValueInt: 25
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: rdatahold
                    HdlValueId: aluopra
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS tuple@@ to cases
    tuple
        HdlValueInt: 26
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: rdatahold
                    HdlValueId: aluoprb
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS tuple@@ to cases
    tuple
        HdlValueInt: 27
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: OR
                        list: ops
                            HdlOp: SLL
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: regfil
                                            HdlValueInt: 100
                                    HdlValueInt: 8
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: regfil
                                    HdlValueInt: 101
                    HdlValueId: waddrhold
                HdlStmAssign
                    HdlValueId: alures
                    HdlValueId: wdatahold
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alures
                            HdlValueInt: 7
                    HdlValueId: sign
                HdlStmAssign
                    HdlValueId: aluzout
                    HdlValueId: zero
                HdlStmAssign
                    HdlValueId: alupar
                    HdlValueId: parity
                HdlStmAssign
                    HdlValueId: aluaxc
                    HdlValueId: auxcar
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS HdlValueInt@@04 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    INS HdlValueInt@@00 to 
    INS HdlValueInt@@11 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 011011
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: pc
                            HdlValueInt: 1
                    HdlValueId: raddrhold
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: pc
                            HdlValueInt: 2
                    HdlValueId: pc
                HdlStmAssign
                    HdlValueInt: 51
                    HdlValueId: statesel
                HdlStmAssign
                    HdlValueInt: 12
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: pc
                            HdlValueInt: 2
                    HdlValueId: pc
    UPD HdlValueInt@@010011 to 011011
    UPD HdlValueInt@@011011 to 010011
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '5'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['opcode',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '6'}]}]} 
    DEL HdlValueInt@@00 from 
    DEL HdlValueInt@@11 from 


CommitId: 4341f2d124625912e398bc41c607fd66814b1df3
This commit was generated by cvs2svn to compensate for changes in r28, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -1129,7 +1135,7 @@ module cpu8080(addr,     // Address out
                zero <= rdatahold2 >> 6&1;
                auxcar <= rdatahold2 >> 4&1;
                parity <= rdatahold2 >> 2&1;
-               carry <= rdatahold2 >> 1&1;
+               carry <= rdatahold2 >> 0&1;
 
             end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    tuple
        HdlValueInt: 25
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: rdatahold
                    HdlValueId: aluopra
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS tuple@@ to cases
    tuple
        HdlValueInt: 26
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: rdatahold
                    HdlValueId: aluoprb
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS tuple@@ to cases
    tuple
        HdlValueInt: 27
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: OR
                        list: ops
                            HdlOp: SLL
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: regfil
                                            HdlValueInt: 100
                                    HdlValueInt: 8
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: regfil
                                    HdlValueInt: 101
                    HdlValueId: waddrhold
                HdlStmAssign
                    HdlValueId: alures
                    HdlValueId: wdatahold
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alures
                            HdlValueInt: 7
                    HdlValueId: sign
                HdlStmAssign
                    HdlValueId: aluzout
                    HdlValueId: zero
                HdlStmAssign
                    HdlValueId: alupar
                    HdlValueId: parity
                HdlStmAssign
                    HdlValueId: aluaxc
                    HdlValueId: auxcar
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS HdlValueInt@@04 to 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 


CommitId: 4341f2d124625912e398bc41c607fd66814b1df3
This commit was generated by cvs2svn to compensate for changes in r28, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -1228,7 +1234,6 @@ module cpu8080(addr,     // Address out
          // can leave halt. Otherwise we stay here.
          if (intr&&ei) state <= `cpus_fetchi; // Fetch next instruction
          else state <= `cpus_halt;
-        
 
       end
 

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    tuple
        HdlValueInt: 25
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: rdatahold
                    HdlValueId: aluopra
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS tuple@@ to cases
    tuple
        HdlValueInt: 26
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: rdatahold
                    HdlValueId: aluoprb
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS tuple@@ to cases
    tuple
        HdlValueInt: 27
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: OR
                        list: ops
                            HdlOp: SLL
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: regfil
                                            HdlValueInt: 100
                                    HdlValueInt: 8
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: regfil
                                    HdlValueInt: 101
                    HdlValueId: waddrhold
                HdlStmAssign
                    HdlValueId: alures
                    HdlValueId: wdatahold
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alures
                            HdlValueInt: 7
                    HdlValueId: sign
                HdlStmAssign
                    HdlValueId: aluzout
                    HdlValueId: zero
                HdlStmAssign
                    HdlValueId: alupar
                    HdlValueId: parity
                HdlStmAssign
                    HdlValueId: aluaxc
                    HdlValueId: auxcar
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS HdlValueInt@@04 to 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 


CommitId: 4341f2d124625912e398bc41c607fd66814b1df3
This commit was generated by cvs2svn to compensate for changes in r28, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -1240,6 +1245,22 @@ module cpu8080(addr,     // Address out
 
       end
 
+      `cpus_movtalua: begin // move to alu a
+
+         aluopra <= rdatahold; // place data
+         state <= nextstate; // get next macro state
+         statesel <= statesel+1; // and index next in macro 
+
+      end
+
+      `cpus_movtalub: begin // move to alu b
+
+         aluoprb <= rdatahold; // place data
+         state <= nextstate; // get next macro state
+         statesel <= statesel+1; // and index next in macro 
+
+      end
+
       `cpus_alucb: begin // alu cycleback
 
          regfil[`reg_a] <= alures; // place alu result back to A

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    tuple
        HdlValueInt: 25
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: rdatahold
                    HdlValueId: aluopra
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS tuple@@ to cases
    tuple
        HdlValueInt: 26
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: rdatahold
                    HdlValueId: aluoprb
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS tuple@@ to cases
    tuple
        HdlValueInt: 27
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: OR
                        list: ops
                            HdlOp: SLL
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: regfil
                                            HdlValueInt: 100
                                    HdlValueInt: 8
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: regfil
                                    HdlValueInt: 101
                    HdlValueId: waddrhold
                HdlStmAssign
                    HdlValueId: alures
                    HdlValueId: wdatahold
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alures
                            HdlValueInt: 7
                    HdlValueId: sign
                HdlStmAssign
                    HdlValueId: aluzout
                    HdlValueId: zero
                HdlStmAssign
                    HdlValueId: alupar
                    HdlValueId: parity
                HdlStmAssign
                    HdlValueId: aluaxc
                    HdlValueId: auxcar
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS HdlValueInt@@04 to 

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 


CommitId: 4341f2d124625912e398bc41c607fd66814b1df3
This commit was generated by cvs2svn to compensate for changes in r28, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -1263,6 +1284,19 @@ module cpu8080(addr,     // Address out
 
       end
 
+      `cpus_indm: begin // inr/dcr cycleback to m
+
+         waddrhold <= regfil[`reg_h]<<8|regfil[`reg_l]; // place address
+         wdatahold <= alures; // place data to write
+         sign <= alures[7]; // place sign
+         zero <= aluzout; // place zero
+         parity <= alupar; // place parity
+         auxcar <= aluaxc; // place auxiliary carry
+         state <= nextstate; // get next macro state
+         statesel <= statesel+1; // and index next in macro 
+
+      end
+
       `cpus_movmtbc: begin // finish LXI B
 
          regfil[`reg_b] <= rdatahold; // place upper

ParseResult:
UPD HdlStmIf@@body to body
    INS HdlValueId@@reset to body
    INS list@@elifs to body

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    tuple
        HdlValueInt: 25
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: rdatahold
                    HdlValueId: aluopra
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS tuple@@ to cases
    tuple
        HdlValueInt: 26
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: rdatahold
                    HdlValueId: aluoprb
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS tuple@@ to cases
    tuple
        HdlValueInt: 27
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: OR
                        list: ops
                            HdlOp: SLL
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: regfil
                                            HdlValueInt: 100
                                    HdlValueInt: 8
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: regfil
                                    HdlValueInt: 101
                    HdlValueId: waddrhold
                HdlStmAssign
                    HdlValueId: alures
                    HdlValueId: wdatahold
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alures
                            HdlValueInt: 7
                    HdlValueId: sign
                HdlStmAssign
                    HdlValueId: aluzout
                    HdlValueId: zero
                HdlStmAssign
                    HdlValueId: alupar
                    HdlValueId: parity
                HdlStmAssign
                    HdlValueId: aluaxc
                    HdlValueId: auxcar
                HdlStmAssign
                    HdlValueId: nextstate
                    HdlValueId: state
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: statesel
                            HdlValueInt: 1
                    HdlValueId: statesel
    INS HdlValueInt@@04 to 

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlOp: ADD
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: regfil
                                HdlValueInt: 111
                        HdlValueInt: 60
                HdlOp: CONCAT
                    list: ops
                        HdlValueId: carry
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: regfil
                                HdlValueInt: 111

MOV HdlStmIf@@ to body
HdlStmIf
    HdlOp: OR_LOG
        list: ops
            HdlOp: GT
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: regfil
                                    HdlValueInt: 111
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 7
                                    HdlValueInt: 4
                    HdlValueInt: 9
            HdlValueId: carry
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlOp: ADD
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: regfil
                                HdlValueInt: 111
                        HdlValueInt: 60
                HdlOp: CONCAT
                    list: ops
                        HdlValueId: carry
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: regfil
                                HdlValueInt: 111
    list: elifs

UPD HdlStmAssign@@ to if_true

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: ADD
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: regfil
                    HdlValueInt: 111
            HdlValueInt: 60
    HdlOp: CONCAT
        list: ops
            HdlValueId: carry
            HdlOp: INDEX
                list: ops
                    HdlValueId: regfil
                    HdlValueInt: 111

UPD HdlStmIf@@body to body
    DEL HdlValueId@@reset from body
    DEL list@@elifs from body

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL HdlValueInt@@04 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 


CommitId: 4341f2d124625912e398bc41c607fd66814b1df3
This commit was generated by cvs2svn to compensate for changes in r28, which
--- a/project/cpu8080.v
+++ b/project/cpu8080.v
@@ -1336,11 +1370,8 @@ module cpu8080(addr,     // Address out
 
       `cpus_daa: begin
 
-         if (regfil[`reg_a][7:4] > 9 || carry) begin
-
+         if (regfil[`reg_a][7:4] > 9 || carry)
             { carry, regfil[`reg_a] } <= regfil[`reg_a]+8'h60;
-
-         end
          state <= `cpus_fetchi; // and return to instruction fetch
 
       end

ParseResult:
UPD HdlStmCase@@statesel to statesel
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 55
        HdlOp: ASSIGN
            list: ops
                HdlValueId: nextstate
                HdlValueInt: 12
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 20
        HdlOp: ASSIGN
            list: ops
                HdlValueId: nextstate
                HdlValueInt: 12
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 22
        HdlOp: ASSIGN
            list: ops
                HdlValueId: nextstate
                HdlValueInt: 12
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 27
        HdlOp: ASSIGN
            list: ops
                HdlValueId: nextstate
                HdlValueInt: 0e
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 25
        HdlOp: ASSIGN
            list: ops
                HdlValueId: nextstate
                HdlValueInt: 12
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 30
        HdlOp: ASSIGN
            list: ops
                HdlValueId: nextstate
                HdlValueInt: 12
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 35
        HdlOp: ASSIGN
            list: ops
                HdlValueId: nextstate
                HdlValueInt: 01
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 32
        HdlOp: ASSIGN
            list: ops
                HdlValueId: nextstate
                HdlValueInt: 12
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 38
        HdlOp: ASSIGN
            list: ops
                HdlValueId: nextstate
                HdlValueInt: 12
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 36
        HdlOp: ASSIGN
            list: ops
                HdlValueId: nextstate
                HdlValueInt: 0e
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 40
        HdlOp: ASSIGN
            list: ops
                HdlValueId: nextstate
                HdlValueInt: 12
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 54
        HdlOp: ASSIGN
            list: ops
                HdlValueId: nextstate
                HdlValueInt: 0d
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 41
        HdlOp: ASSIGN
            list: ops
                HdlValueId: nextstate
                HdlValueInt: 0e
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 48
        HdlOp: ASSIGN
            list: ops
                HdlValueId: nextstate
                HdlValueInt: 0e
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 46
        HdlOp: ASSIGN
            list: ops
                HdlValueId: nextstate
                HdlValueInt: 0d
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 47
        HdlOp: ASSIGN
            list: ops
                HdlValueId: nextstate
                HdlValueInt: 12
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 53
        HdlOp: ASSIGN
            list: ops
                HdlValueId: nextstate
                HdlValueInt: 0e
    UPD HdlValueInt@@13 to 14
    UPD HdlValueInt@@14 to 15
    UPD HdlValueInt@@15 to 16
    UPD HdlValueInt@@16 to 17
    UPD HdlValueInt@@17 to 18
    UPD HdlValueInt@@18 to 19
    UPD HdlValueInt@@19 to 20
    UPD HdlValueInt@@55 to 21
    UPD HdlValueInt@@21 to 22
    UPD HdlValueInt@@20 to 23
    UPD HdlValueInt@@23 to 24
    UPD HdlValueInt@@24 to 25
    UPD HdlValueInt@@22 to 26
    UPD HdlValueInt@@26 to 27
    UPD HdlValueInt@@27 to 29
    UPD HdlValueInt@@29 to 30
    UPD HdlValueInt@@25 to 31
    UPD HdlValueInt@@31 to 32
    UPD HdlValueInt@@30 to 34
    UPD HdlValueInt@@34 to 35
    UPD HdlValueInt@@37 to 36
    UPD HdlValueInt@@35 to 38
    UPD HdlValueInt@@32 to 39
    UPD HdlValueInt@@39 to 40
    UPD HdlValueInt@@38 to 41
    UPD HdlValueInt@@36 to 43
    UPD HdlValueInt@@43 to 44
    UPD HdlValueInt@@44 to 45
    UPD HdlValueInt@@40 to 46
    UPD HdlValueInt@@54 to 47
    UPD HdlValueInt@@45 to 48
    UPD HdlValueInt@@41 to 50
    UPD HdlValueInt@@50 to 51
    UPD HdlValueInt@@51 to 52
    UPD HdlValueInt@@52 to 53
    UPD HdlValueInt@@48 to 54
    UPD HdlValueInt@@46 to 55
    UPD HdlValueInt@@47 to 56
    UPD HdlValueInt@@56 to 57
    UPD HdlValueInt@@53 to 62

UPD HdlStmCase@@statesel to statesel
    INS tuple@@ to cases
    tuple
        HdlValueInt: 13
        HdlOp: ASSIGN
            list: ops
                HdlValueId: nextstate
                HdlValueInt: 0e
    INS tuple@@ to cases
    tuple
        HdlValueInt: 37
        HdlOp: ASSIGN
            list: ops
                HdlValueId: nextstate
                HdlValueInt: 0e
    INS tuple@@ to cases
    tuple
        HdlValueInt: 58
        HdlOp: ASSIGN
            list: ops
                HdlValueId: nextstate
                HdlValueInt: 26
    INS tuple@@ to cases
    tuple
        HdlValueInt: 59
        HdlOp: ASSIGN
            list: ops
                HdlValueId: nextstate
                HdlValueInt: 06
    INS tuple@@ to cases
    tuple
        HdlValueInt: 60
        HdlOp: ASSIGN
            list: ops
                HdlValueId: nextstate
                HdlValueInt: 25
    INS tuple@@ to cases
    tuple
        HdlValueInt: 61
        HdlOp: ASSIGN
            list: ops
                HdlValueId: nextstate
                HdlValueInt: 27
    INS tuple@@ to cases
    tuple
        HdlValueInt: 63
        HdlOp: ASSIGN
            list: ops
                HdlValueId: nextstate
                HdlValueInt: 01


