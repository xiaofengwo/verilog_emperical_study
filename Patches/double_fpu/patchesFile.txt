CommitId: 96ace6d237062194f2017a87988d0a1f82bd7488
This commit was generated by cvs2svn to compensate for changes in r8, which
--- a/pipeline/fpu_mul.v
+++ b/pipeline/fpu_mul.v
@@ -32,21 +32,26 @@
 ////                                                             ////
 /////////////////////////////////////////////////////////////////////
 
+// rmode = 00 (nearest), 01 (to zero), 10 (+ infinity), 11 (- infinity)
+
 `timescale 1ns / 100ps
 
-module fpu_mul( clk, rst, enable, opa, opb, ready, outfp);
+module fpu_mul( clk, rst, enable, rmode, opa, opb, ready, outfp);
 input		clk;
 input		rst;
 input		enable;
+input	[1:0]	rmode;
 input	[63:0]	opa, opb;
 output		ready; 
 output  [63:0] outfp;
 
 
-
 reg  	product_shift;
-reg   sign, sign_1, sign_2, sign_3, sign_4, sign_5, sign_6, sign_7, sign_8;
-reg   sign_9, sign_10, sign_11, sign_12, sign_13, sign_14, sign_15, sign_16, sign_17;
+reg		[1:0] rm_1, rm_2, rm_3, rm_4, rm_5, rm_6, rm_7, rm_8, rm_9;
+reg		[1:0] rm_10, rm_11, rm_12, rm_13, rm_14, rm_15;
+reg   	sign, sign_1, sign_2, sign_3, sign_4, sign_5, sign_6, sign_7, sign_8;
+reg   	sign_9, sign_10, sign_11, sign_12, sign_13, sign_14, sign_15, sign_16, sign_17;
+reg	 	sign_18, sign_19, sign_20;
 reg   [51:0] mantissa_a1, mantissa_a2;
 reg   [51:0] mantissa_b1, mantissa_b2;
 reg   [10:0] exponent_a;

ParseResult:
INS HdlIdDef@@rm_1 to objs
HdlIdDef: rm_1
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@rm_2 to objs
HdlIdDef: rm_2
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@rm_3 to objs
HdlIdDef: rm_3
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@rm_4 to objs
HdlIdDef: rm_4
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@rm_5 to objs
HdlIdDef: rm_5
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@rm_6 to objs
HdlIdDef: rm_6
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@rm_7 to objs
HdlIdDef: rm_7
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@rm_8 to objs
HdlIdDef: rm_8
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@rm_9 to objs
HdlIdDef: rm_9
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@rm_10 to objs
HdlIdDef: rm_10
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@rm_11 to objs
HdlIdDef: rm_11
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@rm_12 to objs
HdlIdDef: rm_12
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@rm_13 to objs
HdlIdDef: rm_13
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@rm_14 to objs
HdlIdDef: rm_14
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@rm_15 to objs
HdlIdDef: rm_15
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@sign_18 to objs
HdlIdDef: sign_18
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@sign_19 to objs
HdlIdDef: sign_19
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@sign_20 to objs
HdlIdDef: sign_20
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@rmode to ports
HdlIdDef: rmode
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: IN

UPD HdlIdDef@@outfp to outfp
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@product_4 to product_7
            UPD HdlOp@@DOWNTO to DOWNTO
                UPD HdlValueInt@@53 to 51
                UPD HdlValueInt@@2 to 0
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@exponent_6 to exponent_9


CommitId: 96ace6d237062194f2017a87988d0a1f82bd7488
This commit was generated by cvs2svn to compensate for changes in r8, which
--- a/pipeline/fpu_mul.v
+++ b/pipeline/fpu_mul.v
@@ -58,14 +63,13 @@ reg		in_zero_1;
 reg   [11:0] exponent_terms_1, exponent_terms_2, exponent_terms_3, exponent_terms_4;
 reg   [11:0] exponent_terms_5, exponent_terms_6, exponent_terms_7;
 reg   [11:0] exponent_terms_8, exponent_terms_9;
-reg    exponent_gt_expoffset;
+reg    	exponent_gt_expoffset;
 reg   [11:0] exponent_1;
 wire   [11:0] exponent = 0;
 reg   [11:0] exponent_2, exponent_2_0, exponent_2_1;
-reg   exponent_gt_prodshift, exponent_is_infinity, exponent_is_infinity_2;
-reg   [11:0] exponent_3;
-reg   [11:0] exponent_4;
-reg  set_mantissa_zero;
+reg   	exponent_gt_prodshift, exponent_is_infinity;
+reg   [11:0] exponent_3, exponent_4;
+reg  	set_mantissa_zero, set_mz_1;
 reg   [52:0] mul_a, mul_a1, mul_a2, mul_a3, mul_a4, mul_a5, mul_a6, mul_a7, mul_a8;
 reg   [52:0] mul_b, mul_b1, mul_b2, mul_b3, mul_b4, mul_b5, mul_b6, mul_b7, mul_b8;
 reg		[40:0] product_a;

ParseResult:
MOV HdlIdDef@@exponent_is_infinity_2 to objs
HdlIdDef: exponent_is_infinity_2
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

UPD HdlIdDef@@exponent_is_infinity_2 to set_mz_1


CommitId: 96ace6d237062194f2017a87988d0a1f82bd7488
This commit was generated by cvs2svn to compensate for changes in r8, which
--- a/pipeline/fpu_mul.v
+++ b/pipeline/fpu_mul.v
@@ -95,13 +99,17 @@ reg		[29:0] sum_6;
 reg		[36:0] sum_7;
 reg		[16:0] sum_7_2;
 reg		[30:0] sum_8;
-reg   [105:0] product;
-reg   [105:0] product_1;
-reg   [105:0] product_2, product_3;
-reg		product_lsb; // if there are any 1's in the remainder
-reg  [55:0] product_4; 
-reg  [11:0] exponent_5, exponent_6;		
-wire  [63:0] outfp = { sign, exponent_6[10:0], product_4[53:2]};
+reg   	[105:0] product;
+reg   	[105:0] product_1;
+reg   	[52:0] product_2, product_3;
+reg  	[53:0] product_4, product_5, product_6, product_7; 
+reg		product_overflow;
+reg  	[11:0] exponent_5, exponent_6, exponent_7, exponent_8, exponent_9;		
+reg		round_nearest_mode, round_posinf_mode, round_neginf_mode;
+reg		round_nearest_trigger, round_nearest_exception;
+reg		round_nearest_enable, round_posinf_trigger, round_posinf_enable;
+reg		round_neginf_trigger, round_neginf_enable, round_enable;
+wire  	[63:0] outfp = { sign, exponent_9[10:0], product_7[51:0]};
 
 always @(posedge clk) 
 begin

ParseResult:
MOV HdlIdDef@@product_lsb to objs
HdlIdDef: product_lsb
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@product_2 to objs
HdlIdDef: product_2
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 52
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@product_3 to objs
HdlIdDef: product_3
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 52
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@product_4 to objs
HdlIdDef: product_4
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 53
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@product_5 to objs
HdlIdDef: product_5
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 53
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@product_6 to objs
HdlIdDef: product_6
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 53
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@product_7 to objs
HdlIdDef: product_7
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 53
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@product_overflow to objs
HdlIdDef: product_overflow
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@exponent_7 to objs
HdlIdDef: exponent_7
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 11
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@exponent_8 to objs
HdlIdDef: exponent_8
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 11
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@exponent_9 to objs
HdlIdDef: exponent_9
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 11
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@round_nearest_mode to objs
HdlIdDef: round_nearest_mode
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@round_posinf_mode to objs
HdlIdDef: round_posinf_mode
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@round_neginf_mode to objs
HdlIdDef: round_neginf_mode
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@round_nearest_trigger to objs
HdlIdDef: round_nearest_trigger
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@round_nearest_exception to objs
HdlIdDef: round_nearest_exception
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

UPD HdlIdDef@@product_lsb to round_nearest_enable

INS HdlIdDef@@round_posinf_trigger to objs
HdlIdDef: round_posinf_trigger
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@round_posinf_enable to objs
HdlIdDef: round_posinf_enable
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@round_neginf_trigger to objs
HdlIdDef: round_neginf_trigger
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@round_neginf_enable to objs
HdlIdDef: round_neginf_enable
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@round_enable to objs
HdlIdDef: round_enable
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

DEL HdlIdDef@@product_2 from objs
HdlIdDef: product_2
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 105
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@product_3 from objs
HdlIdDef: product_3
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 105
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@product_4 from objs
HdlIdDef: product_4
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 55
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 96ace6d237062194f2017a87988d0a1f82bd7488
This commit was generated by cvs2svn to compensate for changes in r8, which
--- a/pipeline/fpu_mul.v
+++ b/pipeline/fpu_mul.v
@@ -230,9 +222,26 @@ begin
 		product <= { sum_8, sum_7_2[16:0], sum_5_4[6:0], sum_4_5[9:0], sum_2_7[6:0],
 					sum_1_8[9:0], sum_0_9[6:0], product_a_10[16:0] };
 		product_1 <= product << product_shift;
-		product_2 <= product_1; product_3 <= product_2;
-		product_4 <= set_mantissa_zero ? 56'b0 : { 1'b0, product_3[105:52] , |product_3[51:0]};
+		product_2 <= product_1[105:53]; product_3 <= product_2;
+		product_4 <= set_mantissa_zero ? 54'b0 : { 1'b0, product_3};
 		product_shift <= !sum_8[30]; 
+		round_nearest_mode <= rm_15 == 2'b00;
+		round_posinf_mode <= rm_15 == 2'b10;
+		round_neginf_mode <= rm_15 == 2'b11;
+		round_nearest_trigger <= product_1[52];
+		round_nearest_exception <= !(|product_1[51:0]) & (product_1[53] == 0);
+		round_nearest_enable <= round_nearest_mode & round_nearest_trigger & !round_nearest_exception;
+		round_posinf_trigger <= |product_1[52:0] & !sign_15;
+		round_posinf_enable <= round_posinf_mode & round_posinf_trigger;
+		round_neginf_trigger <= |product_1[52:0] & sign_15;
+		round_neginf_enable <= round_neginf_mode & round_neginf_trigger;
+		round_enable <= round_posinf_enable | round_neginf_enable | round_nearest_enable;
+		product_5 <= round_enable & !set_mz_1 ? product_4 + 1 : product_4;
+		product_overflow <= product_5[53];
+		product_6 <= product_5;
+		product_7 <= product_overflow ? product_6 >> 1 : product_6;
+		exponent_7 <= exponent_6; exponent_8 <= exponent_7;
+		exponent_9 <= product_overflow ? exponent_8 + 1 : exponent_8;  
 	end
 end
 

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlValueId@@rst to 

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: set_mantissa_zero
            HdlValueInt: 0
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlValueInt: 0
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: product_3
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 105
                                            HdlValueInt: 52
                    HdlOp: OR_UNARY
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: product_3
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 51
                                            HdlValueInt: 0
    HdlValueId: product_4

INS HdlStmAssign@@ to body

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: EQ
        list: ops
            HdlValueId: rm_15
            HdlValueInt: 00
    HdlValueId: round_nearest_mode

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: EQ
        list: ops
            HdlValueId: rm_15
            HdlValueInt: 10
    HdlValueId: round_posinf_mode

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: EQ
        list: ops
            HdlValueId: rm_15
            HdlValueInt: 11
    HdlValueId: round_neginf_mode

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: product_1
            HdlValueInt: 52
    HdlValueId: round_nearest_trigger

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: round_nearest_mode
                    HdlValueId: round_nearest_trigger
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: round_nearest_exception
    HdlValueId: round_nearest_enable

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: OR_UNARY
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: product_1
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 52
                                    HdlValueInt: 0
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: sign_15
    HdlValueId: round_posinf_trigger

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: round_posinf_mode
            HdlValueId: round_posinf_trigger
    HdlValueId: round_posinf_enable

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: OR_UNARY
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: product_1
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 52
                                    HdlValueInt: 0
            HdlValueId: sign_15
    HdlValueId: round_neginf_trigger

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: round_neginf_mode
            HdlValueId: round_neginf_trigger
    HdlValueId: round_neginf_enable

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: OR
        list: ops
            HdlOp: OR
                list: ops
                    HdlValueId: round_posinf_enable
                    HdlValueId: round_neginf_enable
            HdlValueId: round_nearest_enable
    HdlValueId: round_enable

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: round_enable
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: set_mz_1
            HdlOp: ADD
                list: ops
                    HdlValueId: product_4
                    HdlValueInt: 1
            HdlValueId: product_4
    HdlValueId: product_5

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: product_5
            HdlValueInt: 53
    HdlValueId: product_overflow

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: product_5
    HdlValueId: product_6

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: product_overflow
            HdlOp: SRL
                list: ops
                    HdlValueId: product_6
                    HdlValueInt: 1
            HdlValueId: product_6
    HdlValueId: product_7

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: exponent_6
    HdlValueId: exponent_7

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: exponent_7
    HdlValueId: exponent_8

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: product_overflow
            HdlOp: ADD
                list: ops
                    HdlValueId: exponent_8
                    HdlValueInt: 1
            HdlValueId: exponent_8
    HdlValueId: exponent_9

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to AND
    UPD HdlValueId@@product_4 to round_nearest_exception
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlValueId@@set_mantissa_zero to ops
        HdlValueId: set_mantissa_zero
        MOV HdlValueInt@@0 to ops
        HdlValueInt: 0
        UPD HdlOp@@CONCAT to NEG_LOG
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@OR_UNARY to OR_UNARY
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlValueId@@product_3 to product_1
            DEL HdlOp@@CONCAT from ops
            HdlOp: CONCAT
                list: ops
                    HdlValueInt: 0
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: product_3
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 105
                                    HdlValueInt: 52

UPD HdlStmAssign@@ to 
    MOV HdlValueId@@product_1 to 
    HdlValueId: product_1

UPD HdlStmIf@@ to 
    DEL HdlValueId@@rst from 


CommitId: 96ace6d237062194f2017a87988d0a1f82bd7488
This commit was generated by cvs2svn to compensate for changes in r8, which
--- a/pipeline/fpu_mul.v
+++ b/pipeline/fpu_mul.v
@@ -245,8 +254,8 @@ begin
 	end
 	else if (enable) begin
 		ready <= count_ready;
-		count_ready_0 <= count == 15;
-		count_ready <= count == 16;
+		count_ready_0 <= count == 18;
+		count_ready <= count == 19;
 	end
 end
 
ParseResult:
INS HdlStmProcess@@ to objs

UPD HdlStmProcess@@ to 
    MOV list@@sensitivity to 
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlValueId@@rst to 

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: ready
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: count_ready_0
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: count_ready
    DEL HdlValueId@@rst from 
    DEL HdlValueId@@enable from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from elifs
    DEL list@@elifs from 

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: count_ready
    HdlValueId: ready

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: EQ
        list: ops
            HdlValueId: count
            HdlValueInt: 18
    HdlValueId: count_ready_0

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: EQ
        list: ops
            HdlValueId: count
            HdlValueInt: 19
    HdlValueId: count_ready

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlOp: EQ
        list: ops
            HdlValueId: count
            HdlValueInt: 15
    HdlValueId: count_ready_0

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlOp: EQ
        list: ops
            HdlValueId: count
            HdlValueInt: 16
    HdlValueId: count_ready

DEL HdlStmIf@@ from body

DEL HdlStmProcess@@ from objs


CommitId: cf173d0b7cc13f0ec367c07f8b322850a1428c74
This commit was generated by cvs2svn to compensate for changes in r10, which
--- a/fpu_div.v
+++ b/fpu_div.v
@@ -72,7 +72,7 @@ wire [10:0] expon_a = opa[62:52];
 wire [10:0] expon_b = opb[62:52];
 wire	a_is_norm = |expon_a;
 wire	b_is_norm = |expon_b;
-wire	a_is_zero = !(opa[62:0]); 
+wire	a_is_zero = !(|opa[62:0]); 
 wire [11:0] exponent_a = { 1'b0, expon_a};
 wire [11:0] exponent_b = { 1'b0, expon_b};
 reg [51:0] dividend_a;

ParseResult:
UPD HdlIdDef@@a_is_zero to a_is_zero
    INS HdlOp@@NEG_LOG to a_is_zero
    UPD HdlOp@@NEG_LOG to NEG_LOG
        INS list@@ops to NEG_LOG

UPD HdlIdDef@@a_is_zero to a_is_zero
    UPD HdlOp@@NEG_LOG to OR_UNARY
    MOV HdlOp@@NEG_LOG to a_is_zero
    HdlOp: NEG_LOG
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: opa
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 62
                            HdlValueInt: 0


CommitId: cf173d0b7cc13f0ec367c07f8b322850a1428c74
This commit was generated by cvs2svn to compensate for changes in r10, which
--- a/fpu_div.v
+++ b/fpu_div.v
@@ -92,7 +92,6 @@ reg [53:0] remainder_out;
 reg remainder_msb;
 reg count_nonzero_reg;
 reg count_nonzero_reg_2;
-wire count_preset = (count_index == preset);
 reg [11:0] expon_term;
 reg expon_uf_1;
 reg [11:0] expon_uf_term_1;

ParseResult:
DEL HdlIdDef@@count_preset from objs
HdlIdDef: count_preset
    HdlOp: EQ
        list: ops
            HdlValueId: count_index
            HdlValueId: preset
    HdlDirection: INTERNAL


CommitId: cf173d0b7cc13f0ec367c07f8b322850a1428c74
This commit was generated by cvs2svn to compensate for changes in r10, which
--- a/fpu_mul.v
+++ b/fpu_mul.v
@@ -162,8 +162,8 @@ begin
 		exponent_b <= opb[62:52];
 		a_is_norm <= |exponent_a;
 		b_is_norm <= |exponent_b;
-		a_is_zero <= !(opa[62:0]); 
-		b_is_zero <= !(opb[62:0]); 
+		a_is_zero <= !(|opa[62:0]); 
+		b_is_zero <= !(|opb[62:0]); 
 		in_zero <= a_is_zero | b_is_zero;
 		exponent_terms <= exponent_a + exponent_b + !a_is_norm + !b_is_norm;
 		exponent_gt_expoffset <= exponent_terms > 1021;

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@NEG_LOG to 
    UPD HdlOp@@NEG_LOG to NEG_LOG
        INS list@@ops to NEG_LOG

UPD HdlStmAssign@@ to 
    INS HdlOp@@NEG_LOG to 
    UPD HdlOp@@NEG_LOG to NEG_LOG
        INS list@@ops to NEG_LOG

UPD HdlStmAssign@@ to 
    UPD HdlOp@@NEG_LOG to OR_UNARY
    MOV HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: opa
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 62
                            HdlValueInt: 0

UPD HdlStmAssign@@ to 
    UPD HdlOp@@NEG_LOG to OR_UNARY
    MOV HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: opb
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 62
                            HdlValueInt: 0


CommitId: 96ace6d237062194f2017a87988d0a1f82bd7488
This commit was generated by cvs2svn to compensate for changes in r8, which
--- a/pipeline/fpu_addsub.v
+++ b/pipeline/fpu_addsub.v
@@ -113,22 +133,29 @@ always @(posedge clk)
 			mantissa_small_2 <= 0; mantissa_large_2 <= 0;
 			mantissa_small_3 <= 0; mantissa_large_3 <= 0;
 			exponent_diff <= 0; exponent_diff_2 <= 0; exponent_diff_3 <= 0;
-			exponent_diff_4 <= 0; large_add <= 0; large_add_2 <= 0;
+			bits_shifted_out <= 0;
+			bits_shifted_out_2 <= 0; bits_shifted <= 0;
+			large_add <= 0; large_add_2 <= 0;
 			large_add_3 <= 0; large_add_4 <= 0; large_add_5 <= 0; small_add <= 0;
 			small_shift <= 0; small_shift_2 <= 0; small_shift_3 <= 0; 
 			small_shift_4 <= 0; small_shift_nonzero <= 0;
 			small_is_nonzero <= 0; small_is_nonzero_2 <= 0; small_is_nonzero_3 <= 0;
 			small_fraction_enable <= 0;
 			sum <= 0; sum_2 <= 0; sum_overflow <= 0; sum_3 <= 0; sum_4 <= 0;
-			exponent_add <= 0; exp_add2 <= 0; 
-			minuend <= 0; minuend_2 <= 0; minuend_3 <= 0; 
-			minuend_4 <= 0; minuend_5 <= 0; subtrahend <= 0;
-			subtra_shift <= 0; subtra_shift_2 <= 0; subtra_shift_3 <= 0; 
-			subtra_shift_4 <= 0; subtra_shift_nonzero <= 0;
-			subtra_fraction_enable <= 0; diff_shift_2 <= 0; diff <= 0;
-			diffshift_gt_exponent <= 0; diffshift_et_53 <= 0; diff_2 <= 0;
-			diff_3 <= 0; diff_4 <= 0; diff_5 <= 0; exponent_sub <= 0; 
-			exponent_sub_2 <= 0; outfp <= 0; outfp_2 <= 0;  out <= 0;
+			sum_5 <= 0; sum_6 <= 0; sum_7 <= 0; sum_8 <= 0; sum_9 <= 0; sum_10 <= 0; 
+			sum_11 <= 0; sumround_overflow <= 0;	sum_lsb <= 0; sum_lsb_2 <= 0;
+			exponent_add <= 0; exp_add_2 <= 0; exp_add_3 <= 0;  exp_add_4 <= 0; 
+			exp_add_5 <= 0;  exp_add_6 <= 0; exp_add_7 <= 0; exp_add_8 <= 0;
+			exp_add_9 <= 0; diff_shift_2 <= 0; diff <= 0;
+			diffshift_gt_exponent <= 0; diffshift_et_55 <= 0; diff_2 <= 0;
+			diff_3 <= 0; diff_4 <= 0; diff_5 <= 0; diff_6 <= 0; diff_7 <= 0; diff_8 <= 0;
+			diff_9 <= 0; diff_10 <= 0; 
+			diff_11 <= 0; diffround_overflow <= 0; exponent_sub <= 0; 
+			exp_sub_2 <= 0; exp_sub_3 <= 0; exp_sub_4 <= 0; exp_sub_5 <= 0;
+			exp_sub_6 <= 0; exp_sub_7 <= 0; exp_sub_8 <= 0; outfp <= 0; 
+			round_nearest_mode <= 0; round_posinf_mode <= 0; round_neginf_mode <= 0; round_nearest_trigger <= 0; 
+			round_nearest_exception <= 0; round_nearest_enable <= 0; round_posinf_trigger <= 0; round_posinf_enable <= 0;
+			round_neginf_trigger <= 0; round_neginf_enable <= 0; round_enable <= 0;
 		end
 		else if (enable) begin
 			fpu_op_1 <= fpu_op; fpu_op_final <= fpu_op_1 ^ (sign_a ^ sign_b);

ParseResult:
UPD HdlModuleDef@@fpu to fpu_addsub

UPD HdlModuleDec@@fpu to fpu_addsub

UPD HdlStmIf@@ to 
    INS HdlValueId@@rst to 

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: exponent_add

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: bits_shifted_out_2

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: bits_shifted

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: sum_5

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: exp_add_2

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: exp_add_7

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: exp_add_8

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: exp_add_9

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: diff_6

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: diff_7

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: diff_8

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: diff_9

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: diff_10

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: diff_11

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: diffround_overflow

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: exp_sub_3

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: exp_sub_4

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: exp_sub_5

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: exp_sub_6

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: exp_sub_7

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: exp_sub_8

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: round_neginf_mode

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: round_nearest_trigger

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: round_nearest_exception

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: round_nearest_enable

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: round_posinf_trigger

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: round_posinf_enable

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: round_neginf_trigger

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: round_neginf_enable

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: round_enable

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@exponent_diff_4 to bits_shifted_out

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@exp_add2 to sum_6

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@minuend to sum_7

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@minuend_2 to sum_8

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@minuend_3 to sum_9

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@minuend_4 to sum_10

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@minuend_5 to sum_11

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@subtrahend to sumround_overflow

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@subtra_shift to sum_lsb

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@subtra_shift_2 to sum_lsb_2

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@subtra_shift_3 to exp_add_3

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@subtra_shift_4 to exp_add_4

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@subtra_shift_nonzero to exp_add_5

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@subtra_fraction_enable to exp_add_6

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@diffshift_et_53 to diffshift_et_55

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@exponent_sub_2 to exp_sub_2

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@outfp_2 to round_nearest_mode

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@out to round_posinf_mode

UPD HdlStmIf@@ to 
    DEL HdlValueId@@rst from 


CommitId: 96ace6d237062194f2017a87988d0a1f82bd7488
This commit was generated by cvs2svn to compensate for changes in r8, which
--- a/pipeline/fpu_addsub.v
+++ b/pipeline/fpu_addsub.v
@@ -136,7 +163,13 @@ always @(posedge clk)
 			fpuf_5 <= fpuf_4; fpuf_6 <= fpuf_5; fpuf_7 <= fpuf_6; fpuf_8 <= fpuf_7; 
 			fpuf_9 <= fpuf_8; fpuf_10 <= fpuf_9; fpuf_11 <= fpuf_10; fpuf_12 <= fpuf_11; 
 			fpuf_13 <= fpuf_12; fpuf_14 <= fpuf_13; fpuf_15 <= fpuf_14; 
-			fpu_op_2 <= fpu_op_1; fpu_op_3 <= fpu_op_2; fpu_op_4 <= fpu_op_3;
+			fpuf_16 <= fpuf_15; fpuf_17 <= fpuf_16; fpuf_18 <= fpuf_17;
+			fpuf_19 <= fpuf_18; fpuf_20 <= fpuf_19; fpuf_21 <= fpuf_20;
+			fpu_op_2 <= fpu_op_1; fpu_op_3 <= fpu_op_2;
+			rm_1 <= rmode; rm_2 <= rm_1; rm_3 <= rm_2; rm_4 <= rm_3; 
+			rm_5 <= rm_4; rm_6 <= rm_5; rm_7 <= rm_6; rm_8 <= rm_7; rm_9 <= rm_8; 
+			rm_10 <= rm_9; rm_11 <= rm_10; rm_12 <= rm_11; rm_13 <= rm_12; 
+			rm_14 <= rm_13; rm_15 <= rm_14; rm_16 <= rm_15;
 			sign_a <= opa[63]; sign_b <= opb[63]; sign_a2 <= sign_a;
 			sign_b2 <= sign_b; sign_a3 <= sign_a2; sign_b3 <= sign_b2;
 			exponent_a <= opa[62:52]; expa_2 <= exponent_a; expa_3 <= expa_2;

ParseResult:
UPD HdlModuleDef@@fpu to fpu_addsub

UPD HdlModuleDec@@fpu to fpu_addsub

UPD HdlStmIf@@ to 
    INS HdlValueId@@rst to 

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: fpuf_15
    HdlValueId: fpuf_16

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: fpuf_16
    HdlValueId: fpuf_17

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: fpuf_17
    HdlValueId: fpuf_18

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: fpuf_18
    HdlValueId: fpuf_19

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: fpuf_19
    HdlValueId: fpuf_20

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: fpuf_20
    HdlValueId: fpuf_21

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: rmode
    HdlValueId: rm_1

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: rm_1
    HdlValueId: rm_2

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: rm_2
    HdlValueId: rm_3

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: rm_4
    HdlValueId: rm_5

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: rm_5
    HdlValueId: rm_6

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: rm_6
    HdlValueId: rm_7

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: rm_7
    HdlValueId: rm_8

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: rm_8
    HdlValueId: rm_9

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: rm_9
    HdlValueId: rm_10

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: rm_10
    HdlValueId: rm_11

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: rm_11
    HdlValueId: rm_12

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: rm_12
    HdlValueId: rm_13

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: rm_13
    HdlValueId: rm_14

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: rm_14
    HdlValueId: rm_15

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: rm_15
    HdlValueId: rm_16

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@fpu_op_3 to rm_3
    UPD HdlValueId@@fpu_op_4 to rm_4

UPD HdlStmIf@@ to 
    DEL HdlValueId@@rst from 


CommitId: 96ace6d237062194f2017a87988d0a1f82bd7488
This commit was generated by cvs2svn to compensate for changes in r8, which
--- a/pipeline/fpu_addsub.v
+++ b/pipeline/fpu_addsub.v
@@ -149,7 +182,9 @@ always @(posedge clk)
 			in_inf3 <= in_inf2; in_inf4 <= in_inf3; in_inf5 <= in_inf4; in_inf6 <= in_inf5;
 			in_inf7 <= in_inf6; in_inf8 <= in_inf7; in_inf9 <= in_inf8; in_inf10 <= in_inf9;
 			in_inf11 <= in_inf10; in_inf12 <= in_inf11; in_inf13 <= in_inf12; 
-			in_inf14 <= in_inf13; in_inf15 <= in_inf14;
+			in_inf14 <= in_inf13; in_inf15 <= in_inf14; in_inf16 <= in_inf15;
+			in_inf17 <= in_inf16; in_inf18 <= in_inf17; in_inf19 <= in_inf18;
+			in_inf20 <= in_inf19; in_inf21 <= in_inf20;
 			expa_gt_expb <= exponent_a > exponent_b;
 			expa_et_expb <= exponent_a == exponent_b;
 			mana_gtet_manb <= mantissa_a >= mantissa_b;

ParseResult:
UPD HdlModuleDef@@fpu to fpu_addsub

UPD HdlModuleDec@@fpu to fpu_addsub

UPD HdlStmIf@@ to 
    INS HdlValueId@@rst to 

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: in_inf15
    HdlValueId: in_inf16

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: in_inf16
    HdlValueId: in_inf17

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: in_inf17
    HdlValueId: in_inf18

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: in_inf18
    HdlValueId: in_inf19

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: in_inf19
    HdlValueId: in_inf20

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: in_inf20
    HdlValueId: in_inf21

UPD HdlStmIf@@ to 
    DEL HdlValueId@@rst from 


CommitId: 96ace6d237062194f2017a87988d0a1f82bd7488
This commit was generated by cvs2svn to compensate for changes in r8, which
--- a/pipeline/fpu_addsub.v
+++ b/pipeline/fpu_addsub.v
@@ -158,6 +193,9 @@ always @(posedge clk)
    			sign_2 <= sign; sign_3 <= sign_2; sign_4 <= sign_3; sign_5 <= sign_4;
    			sign_6 <= sign_5; sign_7 <= sign_6; sign_8 <= sign_7; sign_9 <= sign_8;
    			sign_10 <= sign_9; sign_11 <= sign_10; sign_12 <= sign_11;
+   			sign_13 <= sign_12; sign_14 <= sign_13; sign_15 <= sign_14;
+   			sign_16 <= sign_15; sign_17 <= sign_16; sign_18 <= sign_17;
+   			sign_19 <= sign_18;
    			exponent_small  <= a_gtet_b ? expb_3 : expa_3;
    			exponent_large  <= a_gtet_b ? expa_3 : expb_3; 
    			expl_2 <= exponent_large; expl_3 <= expl_2; expl_4 <= expl_3;

ParseResult:
UPD HdlModuleDef@@fpu to fpu_addsub

UPD HdlModuleDec@@fpu to fpu_addsub

UPD HdlStmIf@@ to 
    INS HdlValueId@@rst to 

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: sign_12
    HdlValueId: sign_13

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: sign_13
    HdlValueId: sign_14

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: sign_14
    HdlValueId: sign_15

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: sign_15
    HdlValueId: sign_16

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: sign_16
    HdlValueId: sign_17

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: sign_17
    HdlValueId: sign_18

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: sign_18
    HdlValueId: sign_19

UPD HdlStmIf@@ to 
    DEL HdlValueId@@rst from 


CommitId: 96ace6d237062194f2017a87988d0a1f82bd7488
This commit was generated by cvs2svn to compensate for changes in r8, which
--- a/pipeline/fpu_addsub.v
+++ b/pipeline/fpu_addsub.v
@@ -289,8 +344,8 @@ begin
 	end
 	else if (enable) begin
 		ready <= count_ready;
-		count_ready_0 <= count == 15;
-		count_ready <= count == 16;
+		count_ready_0 <= count == 21;
+		count_ready <= count == 22;
 	end
 end
 

ParseResult:
UPD HdlModuleDef@@fpu to fpu_addsub

UPD HdlModuleDec@@fpu to fpu_addsub

INS HdlStmProcess@@ to objs

UPD HdlStmProcess@@ to 
    MOV list@@sensitivity to 
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['diff',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '54'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['diff',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '54'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlOp@@INDEX to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['diff',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '54'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        INS list@@ops to INDEX
        INS HdlOp@@DOWNTO to ops
        HdlOp: DOWNTO
            list: ops
                HdlValueInt: 54
                HdlValueInt: 0
    INS tuple@@ to cases
    tuple
        HdlValueInt: 0000000000000000000000000000000000000000000000000000001
        HdlStmAssign
            HdlValueInt: 54
            HdlValueId: diff_shift
    INS tuple@@ to cases
    tuple
        HdlValueInt: 0000000000000000000000000000000000000000000000000000000
        HdlStmAssign
            HdlValueInt: 55
            HdlValueId: diff_shift

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: ready
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: count_ready_0
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: count_ready
    DEL HdlValueId@@rst from 
    DEL HdlValueId@@enable from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from elifs
    DEL list@@elifs from 

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: count_ready
    HdlValueId: ready

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: EQ
        list: ops
            HdlValueId: count
            HdlValueInt: 21
    HdlValueId: count_ready_0

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: EQ
        list: ops
            HdlValueId: count
            HdlValueInt: 22
    HdlValueId: count_ready

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlOp: EQ
        list: ops
            HdlValueId: count
            HdlValueInt: 15
    HdlValueId: count_ready_0

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlOp: EQ
        list: ops
            HdlValueId: count
            HdlValueInt: 16
    HdlValueId: count_ready

DEL HdlStmIf@@ from body

DEL HdlStmProcess@@ from objs


CommitId: 96ace6d237062194f2017a87988d0a1f82bd7488
This commit was generated by cvs2svn to compensate for changes in r8, which
--- a/pipeline/fpu_addsub.v
+++ b/pipeline/fpu_addsub.v
@@ -302,4 +357,11 @@ begin
 		count <= count + 1;
 end
 
+always @(posedge clk) 
+begin
+	if (rst) 
+		out <= 0;
+	else if (enable & count_ready) 
+		out <= in_inf21 ? { outfp[63], 11'b11111111111, 52'b0 } : outfp;
+end
 endmodule
ParseResult:
UPD HdlModuleDef@@fpu to fpu_addsub

UPD HdlModuleDec@@fpu to fpu_addsub

INS HdlStmProcess@@ to objs

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['diff',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '54'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['diff',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '54'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlOp@@INDEX to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['diff',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '54'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        INS list@@ops to INDEX
        INS HdlOp@@DOWNTO to ops
        HdlOp: DOWNTO
            list: ops
                HdlValueInt: 54
                HdlValueInt: 0
    INS tuple@@ to cases
    tuple
        HdlValueInt: 0000000000000000000000000000000000000000000000000000001
        HdlStmAssign
            HdlValueInt: 54
            HdlValueId: diff_shift
    INS tuple@@ to cases
    tuple
        HdlValueInt: 0000000000000000000000000000000000000000000000000000000
        HdlStmAssign
            HdlValueInt: 55
            HdlValueId: diff_shift

INS HdlStmIf@@ to body

INS HdlStmAssign@@if_true to 
HdlStmAssign: if_true
    HdlValueInt: 0
    HdlValueId: out


