CommitId: f241b86fbd5ade59a95be7638c642c171b2da50c
RTI fixed! now ALU doesn`t support RTI instruction anymore.
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -164,7 +164,7 @@ begin
 			begin
 				alu_status[B] <= 1;
 			end
-			PLP_IMP, RTI_IMP :
+			PLP_IMP : //, RTI_IMP :
 			begin
 				alu_status[C] <= alu_a[C];
 				alu_status[Z] <= alu_a[Z];

ParseResult:
UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode

UPD HdlStmCase@@alu_opcode to alu_opcode
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode
    DEL tuple@@ from cases
    tuple
        HdlValueId: RTI_IMP
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: C
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: C
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: Z
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: Z
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: I
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: I
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: D
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: D
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: B
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: B
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: V
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: V
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: N
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: N


CommitId: f241b86fbd5ade59a95be7638c642c171b2da50c
RTI fixed! now ALU doesn`t support RTI instruction anymore.
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -247,7 +247,7 @@ always @ (*) begin
 		//end
 	
 		// PLP - Pull Processor Status Register
-		PLP_IMP, RTI_IMP: begin
+		PLP_IMP : begin //, RTI_IMP: begin
 			STATUS = alu_a;
 		end
 		
ParseResult:
UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode

UPD HdlStmCase@@alu_opcode to alu_opcode
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode
    DEL tuple@@ from cases
    tuple
        HdlValueId: RTI_IMP
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: alu_a


CommitId: 697fb4220fac5972b15e30910832788eaea18739
Fixed a latch in the design
--- a/rtl/verilog/t6507lp_fsm.v
+++ b/rtl/verilog/t6507lp_fsm.v
@@ -1076,22 +1075,18 @@ module t6507lp_fsm(clk, reset_n, alu_result, alu_status, data_in, alu_x, alu_y,
 			SBC_ABX, STA_ABX: begin
 				absolute_indexed = 1'b1;
 				index_is_x = 1'b1;
-				//index = alu_x;
 			end
 			ADC_ABY, AND_ABY, CMP_ABY, EOR_ABY, LDA_ABY, LDX_ABY, ORA_ABY, SBC_ABY, STA_ABY: begin
 				absolute_indexed = 1'b1;
 				index_is_x = 1'b0;
-				//index = alu_y;
 			end
 			ADC_IDX, AND_IDX, CMP_IDX, EOR_IDX, LDA_IDX, ORA_IDX, SBC_IDX, STA_IDX: begin
 				indirectx = 1'b1;
 				index_is_x = 1'b1;
-				//index = alu_x;
 			end
 			ADC_IDY, AND_IDY, CMP_IDY, EOR_IDY, LDA_IDY, ORA_IDY, SBC_IDY, STA_IDY: begin 
 				indirecty = 1'b1;
 				index_is_x = 1'b0;
-				//index = alu_y;	
 			end
 			JMP_ABS: begin
 				absolute = 1'b1;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: index_is_x
                HdlValueInt: 0


CommitId: 4ba0a7d3137990420941c29f33526a733f2c02f7
$write and $finish primitives were removed from synthesizable blocks. Latches were removed. Top level were fixed (rw_mem and mem_rw should have the same name). All blocks were synthesized.
--- a/rtl/verilog/T6507LP_ALU.v
+++ b/rtl/verilog/T6507LP_ALU.v
@@ -93,13 +93,13 @@ begin
 		Y <= 0;
 		alu_x <= 0;
 		alu_y <= 0;
-		STATUS[C] <= 0;
-		STATUS[N] <= 0;
-		STATUS[V] <= 0;
-		STATUS[Z] <= 1;
-		STATUS[I] <= 0;
-		STATUS[B] <= 0;
-		STATUS[D] <= 0;
+		//STATUS[C] <= 0;
+		//STATUS[N] <= 0;
+		//STATUS[V] <= 0;
+		//STATUS[Z] <= 1;
+		//STATUS[I] <= 0;
+		//STATUS[B] <= 0;
+		//STATUS[D] <= 0;
 	end
 	else if ( alu_enable == 1 ) begin
 		//A <= A;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: Z
                HdlOp: TERNARY
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlValueId: result
                                HdlValueInt: 0
                        HdlValueInt: 1
                        HdlValueInt: 0
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: N
                HdlOp: INDEX
                    list: ops
                        HdlValueId: result
                        HdlValueInt: 7
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueInt: 5
                HdlValueInt: 1
        DEL list@@body from SEQ
    DEL list@@sensitivity from 
    list: sensitivity
        HdlAll
    DEL HdlStmBlock@@SEQ from 

DEL HdlStmProcess@@ from objs


CommitId: 4ba0a7d3137990420941c29f33526a733f2c02f7
$write and $finish primitives were removed from synthesizable blocks. Latches were removed. Top level were fixed (rw_mem and mem_rw should have the same name). All blocks were synthesized.
--- a/rtl/verilog/T6507LP_ALU.v
+++ b/rtl/verilog/T6507LP_ALU.v
@@ -337,8 +347,8 @@ always @ (*) begin
 		// ADC - Add with carry
 		ADC_IMM, ADC_ZPG, ADC_ZPX, ADC_ABS, ADC_ABX, ADC_ABY, ADC_IDX, ADC_IDY :
 		begin
-			temp1 = A;
-			temp2 = alu_a;
+			//temp1 = A;
+			//temp2 = alu_a;
 			if (alu_status[D] == 1) begin
 				if (A[3:0] > 9) begin
 					temp1 = A + 6; // A = A - 10 and A = A + 16

ParseResult:
UPD HdlStmCase@@alu_opcode to alu_opcode
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: result
                HdlValueId: alu_result
        INS HdlOp@@ASSIGN to body
        INS HdlOp@@ASSIGN to body
        INS HdlOp@@ASSIGN to body
        INS HdlOp@@ASSIGN to body
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: alu_status
                    HdlValueId: C
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: alu_status
                    HdlValueId: V
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: alu_status
                    HdlValueId: B
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: alu_status
                    HdlValueId: I
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: alu_status
                    HdlValueId: D

UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode


CommitId: 4ba0a7d3137990420941c29f33526a733f2c02f7
$write and $finish primitives were removed from synthesizable blocks. Latches were removed. Top level were fixed (rw_mem and mem_rw should have the same name). All blocks were synthesized.
--- a/rtl/verilog/T6507LP_ALU.v
+++ b/rtl/verilog/T6507LP_ALU.v
@@ -412,8 +422,8 @@ always @ (*) begin
 		// SBC - Subtract with Carry
 		SBC_IMM, SBC_ZPG, SBC_ZPX, SBC_ABS, SBC_ABX, SBC_ABY, SBC_IDX, SBC_IDY :
 		begin
-			temp1 = A;
-			temp2 = alu_a;
+			//temp1 = A;
+			//temp2 = alu_a;
 			if (alu_status[D] == 1) begin
 				if (A[3:0] > 9) begin
 					temp1 = A + 6; // A = A - 10 and A = A + 16
ParseResult:
UPD HdlStmCase@@alu_opcode to alu_opcode
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: temp2
                HdlValueId: alu_a

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: result
                HdlValueId: alu_result
        INS HdlOp@@ASSIGN to body
        INS HdlOp@@ASSIGN to body
        INS HdlOp@@ASSIGN to body
        INS HdlOp@@ASSIGN to body
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: alu_status
                    HdlValueId: C
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: alu_status
                    HdlValueId: V
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: alu_status
                    HdlValueId: B
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: alu_status
                    HdlValueId: I
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: alu_status
                    HdlValueId: D

UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode


CommitId: 5f0a945a7ed79f70bd0d6e97d3ee5abd9c5f18d0
Fixing bug #45
--- a/rtl/verilog/t6507lp_fsm.v
+++ b/rtl/verilog/t6507lp_fsm.v
@@ -204,7 +206,7 @@ module t6507lp_fsm(clk, reset_n, alu_result, alu_status, data_in, alu_x, alu_y,
 		if (reset_n == 1'b0) begin
 			// all registers must assume default values
 			pc <= 0; // TODO: this is written somewhere. something about a reset vector. must be checked.
-			sp <= 9'b000000000; // the default is 'h100 
+			sp <= 9'b111111111; // the default is 'h1FF 
 			ir <= 8'h00;
 			temp_addr <= 13'h0000;
 			temp_data <= 8'h00;

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state


CommitId: 5f0a945a7ed79f70bd0d6e97d3ee5abd9c5f18d0
Fixing bug #45
--- a/rtl/verilog/t6507lp_fsm.v
+++ b/rtl/verilog/t6507lp_fsm.v
@@ -221,7 +223,7 @@ module t6507lp_fsm(clk, reset_n, alu_result, alu_status, data_in, alu_x, alu_y,
 			case (state)
 				RESET: begin	// The processor was reset
 					rst_counter <= rst_counter + 1;
-					sp <= 9'b100000000; // this prevents flipflops with different drivers
+					//sp <= 9'b111111111; // this prevents flipflops with different drivers
 					//$write("under reset"); 
 				end
 				/*

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state


CommitId: 5f0a945a7ed79f70bd0d6e97d3ee5abd9c5f18d0
Fixing bug #45
--- a/rtl/verilog/t6507lp_fsm.v
+++ b/rtl/verilog/t6507lp_fsm.v
@@ -242,7 +244,12 @@ module t6507lp_fsm(clk, reset_n, alu_result, alu_status, data_in, alu_x, alu_y,
 					if (accumulator || implied) begin
 						pc <= pc; // is this better?
 						address <= pc;
-						mem_rw <= MEM_READ; 
+						mem_rw <= MEM_READ;
+		
+						if (txs) begin
+							sp[7:0] <= data_in; 
+						end
+						//alu_a
 					end
 					else if (immediate || relative) begin
 						pc <= next_pc;

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state


CommitId: 5f0a945a7ed79f70bd0d6e97d3ee5abd9c5f18d0
Fixing bug #45
--- a/rtl/verilog/t6507lp_fsm.v
+++ b/rtl/verilog/t6507lp_fsm.v
@@ -1045,6 +1058,12 @@ module t6507lp_fsm(clk, reset_n, alu_result, alu_status, data_in, alu_x, alu_y,
 			JSR_ABS: begin
 				jsr = 1'b1;
 			end
+			TSX_IMP: begin
+				tsx = 1'b1;
+			end
+			TXS_IMP: begin
+				txs = 1'b1;
+			end
 			default: begin
 				//$write("state : %b", state);
 				if (reset_n == 1'b1 && state != FETCH_OP_FIX_PC) begin // the processor is NOT being reset neither it is fixing the pc
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tsx
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: txs
                HdlValueInt: 0

UPD HdlStmCase@@ir to ir
    INS HdlStmCaseType@@CASE to ir
    INS HdlValueId@@ir to ir
    INS tuple@@ to cases
    tuple
        HdlValueId: TSX_IMP
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: tsx
                        HdlValueInt: 1
    INS tuple@@ to cases
    tuple
        HdlValueId: TXS_IMP
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: txs
                        HdlValueInt: 1

UPD HdlStmCase@@ir to ir
    DEL HdlStmCaseType@@CASE from ir
    DEL HdlValueId@@ir from ir
    DEL tuple@@ from cases
    tuple
        HdlValueId: TSX_IMP
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: implied
                        HdlValueInt: 1
    DEL tuple@@ from cases
    tuple
        HdlValueId: TXS_IMP
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: implied
                        HdlValueInt: 1


CommitId: 36c863f8d463ba8365eb561afb11648d06107ac8
BRK_IMP was asserting 0 to B flag.
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -153,7 +153,7 @@ begin
 			end
 			BRK_IMP :
 			begin
-				alu_status[B] <= 0;
+				alu_status[B] <= 1;
 			end
 			PLP_IMP, RTI_IMP :
 			begin
ParseResult:
UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode

UPD HdlStmCase@@alu_opcode to alu_opcode
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode


CommitId: eba5ea206983be29ad52130c0e97d22a41187d19
Some bugs were fixed. Testbench were expecting wrong values sometimes.
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -327,6 +327,8 @@ always @ (*) begin
 				STATUS[V] = 1;
 			else
 				STATUS[V] = 0;
+			$display("op1 + op2 + C = result + C (V)");
+			$display("%d  + %d  + %b = %d + %b (%b)", op1, op2, alu_status[C],result,STATUS[C],STATUS[V]);
 
 			if (alu_status[D] == 1) begin
 				if (result[3:0] > 9) begin

ParseResult:
UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlOp: INDEX
                    list: ops
                        HdlValueId: alu_status
                        HdlValueId: C
                HdlValueId: result
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlOp: INDEX
                    list: ops
                        HdlValueId: alu_status
                        HdlValueId: C
                HdlValueId: result
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlOp: INDEX
                    list: ops
                        HdlValueId: alu_status
                        HdlValueId: C
                HdlValueId: result
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlOp: INDEX
                    list: ops
                        HdlValueId: alu_status
                        HdlValueId: C
                HdlValueId: result
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlOp: INDEX
                    list: ops
                        HdlValueId: alu_status
                        HdlValueId: C
                HdlValueId: result
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlOp: INDEX
                    list: ops
                        HdlValueId: alu_status
                        HdlValueId: C
                HdlValueId: result
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlOp: INDEX
                    list: ops
                        HdlValueId: alu_status
                        HdlValueId: C
                HdlValueId: result
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlOp: INDEX
                    list: ops
                        HdlValueId: alu_status
                        HdlValueId: C
                HdlValueId: result
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlValueId: result

UPD HdlStmCase@@alu_opcode to alu_opcode
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode


CommitId: eba5ea206983be29ad52130c0e97d22a41187d19
Some bugs were fixed. Testbench were expecting wrong values sometimes.
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -352,7 +354,9 @@ always @ (*) begin
 
 		// EOR - Exclusive OR
 		EOR_IMM, EOR_ZPG, EOR_ZPX, EOR_ABS, EOR_ABX, EOR_ABY, EOR_IDX, EOR_IDY : begin
-			result = A ^ alu_a ;
+			result = A ^ alu_a;
+			$display("op1 ^ op2 = result");
+			$display("%d  ^ %d  = %d", op1, op2, result);
 		end
 
 		// LDA - Load Accumulator
ParseResult:
UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlOp: INDEX
                    list: ops
                        HdlValueId: alu_status
                        HdlValueId: C
                HdlValueId: result
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlOp: INDEX
                    list: ops
                        HdlValueId: alu_status
                        HdlValueId: C
                HdlValueId: result
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlOp: INDEX
                    list: ops
                        HdlValueId: alu_status
                        HdlValueId: C
                HdlValueId: result
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlOp: INDEX
                    list: ops
                        HdlValueId: alu_status
                        HdlValueId: C
                HdlValueId: result
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlOp: INDEX
                    list: ops
                        HdlValueId: alu_status
                        HdlValueId: C
                HdlValueId: result
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlOp: INDEX
                    list: ops
                        HdlValueId: alu_status
                        HdlValueId: C
                HdlValueId: result
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlOp: INDEX
                    list: ops
                        HdlValueId: alu_status
                        HdlValueId: C
                HdlValueId: result
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlOp: INDEX
                    list: ops
                        HdlValueId: alu_status
                        HdlValueId: C
                HdlValueId: result
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: op1
                HdlValueId: op2
                HdlValueId: result

UPD HdlStmCase@@alu_opcode to alu_opcode
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode


CommitId: e97d2454d46de39ea963432f501070795417b1a9
Fixed two warning messages at the FSM.
--- a/rtl/verilog/t6507lp_fsm.v
+++ b/rtl/verilog/t6507lp_fsm.v
@@ -523,13 +523,13 @@ module t6507lp_fsm(clk, reset_n, alu_result, alu_status, data_in, alu_x, alu_y,
 					end
 				end
 				PUSH_STATUS: begin
-					address <= 13'hFFFE;
+					address <= 13'h1FFE;
 					mem_rw <= MEM_READ;
 					sp <= sp_minus_one;
 				end
 				FETCH_PCL: begin
 					pc[7:0] <= data_in;
-					address <= 13'hFFFF;
+					address <= 13'h1FFF;
 					mem_rw <= MEM_READ;
 				end
 				FETCH_PCH: begin
ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state


CommitId: 5e481d2fde6e5397474c9592cae07b20e0776df7
STA, STY and STX fixed
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -435,7 +461,7 @@ if (alu_enable == 1) begin
 				result = op1 + op2 + alu_status[C];
 				STATUS[C] = ~result[7];
 			end
-				
+*/				
 			
 			if ((op1[7] == sign) && (op1[7] != result[7]))
 				STATUS[V] = 1;
ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode

UPD HdlStmCase@@alu_opcode to alu_opcode
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: 24b9afe2d29b15664e9177ccfe9c98cce3511217
SBC and PHP fixed!
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -124,7 +124,7 @@ begin
 				alu_status <= STATUS;
 			end
 			CMP_IMM, CMP_ZPG, CMP_ZPX, CMP_ABS, CMP_ABX, CMP_ABY, CMP_IDX, CMP_IDY,
-			CPX_IMM, CPX_ZPG, CPX_ABS, CPY_IMM, CPY_ZPG, CPY_ABS, PHP_IMP :
+			CPX_IMM, CPX_ZPG, CPX_ABS, CPY_IMM, CPY_ZPG, CPY_ABS :
 			begin
 				alu_status <= STATUS;
 			end

ParseResult:
UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode
    INS tuple@@ to cases
    tuple
        HdlValueId: PHP_IMP
        HdlStmBlock: SEQ
            list: body

UPD HdlStmCase@@alu_opcode to alu_opcode
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode
    DEL tuple@@ from cases
    tuple
        HdlValueId: PHP_IMP
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: STATUS
                    HdlValueId: alu_status


CommitId: 24b9afe2d29b15664e9177ccfe9c98cce3511217
SBC and PHP fixed!
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -187,6 +187,8 @@ begin
 				alu_result <= result;
 				alu_status <= STATUS;
 			end
+			PHP_IMP : begin
+			end
 			default : begin
 				//$display("ERROR");
 			end

ParseResult:
UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode

UPD HdlStmCase@@alu_opcode to alu_opcode
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode


CommitId: 24b9afe2d29b15664e9177ccfe9c98cce3511217
SBC and PHP fixed!
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -323,8 +325,11 @@ always @ (*) begin
 		// TODO: verify synthesis for % operand
 		ADC_IMM, ADC_ZPG, ADC_ZPX, ADC_ABS, ADC_ABX, ADC_ABY, ADC_IDX, ADC_IDY : begin
 			if (alu_status[D] == 1) begin
+				$display("MODO DECIMAL");
 				AL = A[3:0] + alu_a[3:0] + alu_status[C];
 				AH = A[7:4] + alu_a[7:4];
+				$display("AL = %h", AL);
+				$display("AH = %h", AH);
 				if (AL > 9) begin
 					bcdh = AH + (AL / 10);
 					bcdl = AL % 10;

ParseResult:
UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode

UPD HdlStmCase@@alu_opcode to alu_opcode
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode


CommitId: 24b9afe2d29b15664e9177ccfe9c98cce3511217
SBC and PHP fixed!
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -333,10 +338,15 @@ always @ (*) begin
 					STATUS[C] = 1;
 					bcdh2 = bcdh % 10;
 				end
+				$display("bcdh = %h", bcdh);
+				$display("bcdl = %h", bcdl);
 				result = {bcdh2[3:0],bcdl[3:0]};
+				$display("result = %h", result);
 			end
-			else
+			else begin
+				$display("MODO NORMAL");
 				{STATUS[C],result} = op1 + op2 + alu_status[C];
+			end
 			
 			if ((op1[7] == op2[7]) && (op1[7] != result[7]))
 				STATUS[V] = 1;

ParseResult:
UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode

UPD HdlStmCase@@alu_opcode to alu_opcode
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode


CommitId: 24b9afe2d29b15664e9177ccfe9c98cce3511217
SBC and PHP fixed!
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -434,7 +444,7 @@ always @ (*) begin
 				result = {bcdh[3:0],bcdl[3:0]};
 			end
 			else
-				{STATUS[C],result} = op1 - op2 - ~alu_status[C];
+				{STATUS[C],result} = op1 - op2 - ( 1 - alu_status[C]);
 			
 			if ((op1[7] == op2[7]) && (op1[7] != result[7]))
 				STATUS[V] = 1;
ParseResult:
UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode

UPD HdlStmCase@@alu_opcode to alu_opcode
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode


CommitId: f300cd87a53a7c313c32d3e07367cc70051c6009
SBC bug fixed. Borrow should be working properly.
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -71,6 +71,8 @@ reg [7:0] bcdh;
 reg [7:0] bcdh2;
 reg [7:0] AL;
 reg [7:0] AH;
+reg C_aux;
+reg sign;
 
 `include "t6507lp_package.v"
 

ParseResult:
UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode

UPD HdlStmCase@@alu_opcode to alu_opcode
    MOV tuple@@ to cases
    tuple
        HdlValueId: PLP_IMP
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: STATUS
                            HdlValueId: C
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: C
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: STATUS
                            HdlValueId: Z
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: Z
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: STATUS
                            HdlValueId: I
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: I
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: STATUS
                            HdlValueId: D
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: D
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: STATUS
                            HdlValueId: B
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: B
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: STATUS
                            HdlValueId: V
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: V
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: STATUS
                            HdlValueId: N
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: N
    UPD HdlValueId@@RTI_IMP to PLP_IMP
    UPD HdlValueId@@PLP_IMP to RTI_IMP
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode
    DEL tuple@@ from cases
    tuple
        HdlValueId: PHP_IMP
        HdlStmBlock: SEQ
            list: body


CommitId: f300cd87a53a7c313c32d3e07367cc70051c6009
SBC bug fixed. Borrow should be working properly.
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -173,6 +175,7 @@ begin
 				alu_status[B] <= STATUS[B];
 				alu_status[V] <= STATUS[V];
 				alu_status[N] <= STATUS[N];
+				alu_status[5] <= 1;
 			end
 			BIT_ZPG, BIT_ABS :
 			begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@sign to ops


CommitId: f300cd87a53a7c313c32d3e07367cc70051c6009
SBC bug fixed. Borrow should be working properly.
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -187,8 +190,8 @@ begin
 				alu_result <= result;
 				alu_status <= STATUS;
 			end
-			PHP_IMP : begin
-			end
+			//PHP_IMP : begin
+			//end
 			default : begin
 				//$display("ERROR");
 			end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@sign to ops

UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode

UPD HdlStmCase@@alu_opcode to alu_opcode
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode


CommitId: f300cd87a53a7c313c32d3e07367cc70051c6009
SBC bug fixed. Borrow should be working properly.
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -215,7 +218,7 @@ always @ (*) begin
 	bcdh2 = 0;
 	AL = 0;
 	AH = 0;
-	
+	sign = op2[7];
 
 	case (alu_opcode)
 		// BIT - Bit Test

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@sign to ops

UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode

UPD HdlStmCase@@alu_opcode to alu_opcode
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode


CommitId: f300cd87a53a7c313c32d3e07367cc70051c6009
SBC bug fixed. Borrow should be working properly.
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -448,7 +451,7 @@ always @ (*) begin
 				STATUS[V] = 0;
 */
 			if (alu_status[D] == 1) begin
-				bcdl = A[3:0] - alu_a[3:0] - ~alu_status[C];
+				bcdl = A[3:0] - alu_a[3:0] - ( 1 - alu_status[C] );
 				bcdh = A[7:4] - alu_a[7:4];
 				if (bcdl > 9) begin
 					bcdh = bcdh + bcdl[5:4];

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@sign to ops

UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode

UPD HdlStmCase@@alu_opcode to alu_opcode
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode


CommitId: f300cd87a53a7c313c32d3e07367cc70051c6009
SBC bug fixed. Borrow should be working properly.
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -460,10 +463,14 @@ always @ (*) begin
 				end
 				result = {bcdh[3:0],bcdl[3:0]};
 			end
-			else
-				{STATUS[C],result} = op1 - op2 - ( 1 - alu_status[C] );
+			else begin
+				op2 = ~alu_a;
+				{C_aux,result} = op1 + op2 + alu_status[C];
+				STATUS[C] = ~C_aux;
+			end
+				
 			
-			if ((op1[7] == op2[7]) && (op1[7] != result[7]))
+			if ((op1[7] == sign) && (op1[7] != result[7]))
 				STATUS[V] = 1;
 			else
 				STATUS[V] = 0;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@sign to ops

UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode

UPD HdlStmCase@@alu_opcode to alu_opcode
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode


CommitId: 4050d61dc16a9c4b8cd4674d4c61ee656552d245
Bug #24 from trac might be fixed. Processor register is working properly.
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -188,12 +188,12 @@ end
 always @ (*) begin
 	bcd1      = A;
 	bcd2      = alu_a;
-	result    = alu_result;
-	STATUS[C] = alu_status[C];
-	STATUS[V] = alu_status[V];
-	STATUS[B] = alu_status[B];
-	STATUS[I] = alu_status[I];
-	STATUS[D] = alu_status[D];
+	//result    = alu_result;
+	//STATUS[C] = STATUS[C];
+	//STATUS[V] = STATUS[V];
+	//STATUS[B] = STATUS[B];
+	//STATUS[I] = STATUS[I];
+	//STATUS[D] = STATUS[D];
 
 	case (alu_opcode)
 		// BIT - Bit Test

ParseResult:
UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode

UPD HdlStmCase@@alu_opcode to alu_opcode
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: A
                HdlValueId: result


CommitId: 4050d61dc16a9c4b8cd4674d4c61ee656552d245
Bug #24 from trac might be fixed. Processor register is working properly.
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -319,8 +319,8 @@ always @ (*) begin
 					bcd2 = bcd2[7:4] + 6; // A = A - 10 and A = A + 16
 				end
 			end
-			$display("op1 = %h op2 = %h result = %h", bcd1, bcd2, result);
-			$display("V = %b C = %b D = %b", STATUS[V], STATUS[C], STATUS[D]);
+			//$display("op1 = %h op2 = %h result = %h", bcd1, bcd2, result);
+			//$display("V = %b C = %b D = %b", STATUS[V], STATUS[C], STATUS[D]);
 			{STATUS[C],result} = bcd1 + bcd2 + alu_status[C];
 			if ((bcd1[7] == bcd2[7]) && (bcd1[7] != alu_result[7]))
 				STATUS[V] = 1;
ParseResult:
UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: result
                HdlValueId: alu_result
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: alu_status
                        HdlValueId: C
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
                HdlOp: INDEX
                    list: ops
                        HdlValueId: alu_status
                        HdlValueId: V
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: B
                HdlOp: INDEX
                    list: ops
                        HdlValueId: alu_status
                        HdlValueId: B
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: I
                HdlOp: INDEX
                    list: ops
                        HdlValueId: alu_status
                        HdlValueId: I
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: D
                HdlOp: INDEX
                    list: ops
                        HdlValueId: alu_status
                        HdlValueId: D

UPD HdlStmCase@@alu_opcode to alu_opcode
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: bcd1
                HdlValueId: bcd2
                HdlValueId: result
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: D
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: bcd1
                HdlValueId: bcd2
                HdlValueId: result
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: D
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: bcd1
                HdlValueId: bcd2
                HdlValueId: result
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: D
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: bcd1
                HdlValueId: bcd2
                HdlValueId: result
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: D
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: bcd1
                HdlValueId: bcd2
                HdlValueId: result
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: D
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: bcd1
                HdlValueId: bcd2
                HdlValueId: result
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: D
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: bcd1
                HdlValueId: bcd2
                HdlValueId: result
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: D
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: bcd1
                HdlValueId: bcd2
                HdlValueId: result
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: D


CommitId: 0147674005fe198f0bceb828915ccb7d5c7f271a
ADC with decimal mode ON, bug fixed!
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -400,7 +377,7 @@ always @ (*) begin
 
 		// SBC - Subtract with Carry
 		SBC_IMM, SBC_ZPG, SBC_ZPX, SBC_ABS, SBC_ABX, SBC_ABY, SBC_IDX, SBC_IDY : begin
-			if (alu_status[D] == 1) begin
+/*			if (alu_status[D] == 1) begin
 				bcdl = A[3:0] + alu_a[3:0] + alu_status[C];
 				bcdh = A[7:4] + alu_a[7:4];
 				if (bcdl > 9) begin

ParseResult:
UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: CONCAT
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: STATUS
                                HdlValueId: C
                        HdlValueId: result
                HdlOp: SUB
                    list: ops
                        HdlOp: SUB
                            list: ops
                                HdlValueId: op1
                                HdlValueId: op2
                        HdlOp: NEG
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: alu_status
                                        HdlValueId: C
        DEL list@@body from SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: result
                HdlOp: CONCAT
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: bcdh
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 3
                                        HdlValueInt: 0
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: bcdl
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 3
                                        HdlValueInt: 0
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: CONCAT
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: STATUS
                                HdlValueId: C
                        HdlValueId: result
                HdlOp: SUB
                    list: ops
                        HdlOp: SUB
                            list: ops
                                HdlValueId: op1
                                HdlValueId: op2
                        HdlOp: NEG
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: alu_status
                                        HdlValueId: C
        DEL list@@body from SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: result
                HdlOp: CONCAT
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: bcdh
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 3
                                        HdlValueInt: 0
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: bcdl
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 3
                                        HdlValueInt: 0
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: CONCAT
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: STATUS
                                HdlValueId: C
                        HdlValueId: result
                HdlOp: SUB
                    list: ops
                        HdlOp: SUB
                            list: ops
                                HdlValueId: op1
                                HdlValueId: op2
                        HdlOp: NEG
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: alu_status
                                        HdlValueId: C
        DEL list@@body from SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: result
                HdlOp: CONCAT
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: bcdh
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 3
                                        HdlValueInt: 0
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: bcdl
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 3
                                        HdlValueInt: 0
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: CONCAT
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: STATUS
                                HdlValueId: C
                        HdlValueId: result
                HdlOp: SUB
                    list: ops
                        HdlOp: SUB
                            list: ops
                                HdlValueId: op1
                                HdlValueId: op2
                        HdlOp: NEG
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: alu_status
                                        HdlValueId: C
        DEL list@@body from SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: result
                HdlOp: CONCAT
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: bcdh
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 3
                                        HdlValueInt: 0
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: bcdl
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 3
                                        HdlValueInt: 0
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: CONCAT
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: STATUS
                                HdlValueId: C
                        HdlValueId: result
                HdlOp: SUB
                    list: ops
                        HdlOp: SUB
                            list: ops
                                HdlValueId: op1
                                HdlValueId: op2
                        HdlOp: NEG
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: alu_status
                                        HdlValueId: C
        DEL list@@body from SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: result
                HdlOp: CONCAT
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: bcdh
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 3
                                        HdlValueInt: 0
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: bcdl
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 3
                                        HdlValueInt: 0
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: CONCAT
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: STATUS
                                HdlValueId: C
                        HdlValueId: result
                HdlOp: SUB
                    list: ops
                        HdlOp: SUB
                            list: ops
                                HdlValueId: op1
                                HdlValueId: op2
                        HdlOp: NEG
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: alu_status
                                        HdlValueId: C
        DEL list@@body from SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: result
                HdlOp: CONCAT
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: bcdh
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 3
                                        HdlValueInt: 0
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: bcdl
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 3
                                        HdlValueInt: 0
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: CONCAT
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: STATUS
                                HdlValueId: C
                        HdlValueId: result
                HdlOp: SUB
                    list: ops
                        HdlOp: SUB
                            list: ops
                                HdlValueId: op1
                                HdlValueId: op2
                        HdlOp: NEG
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: alu_status
                                        HdlValueId: C
        DEL list@@body from SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: result
                HdlOp: CONCAT
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: bcdh
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 3
                                        HdlValueInt: 0
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: bcdl
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 3
                                        HdlValueInt: 0
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: CONCAT
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: STATUS
                                HdlValueId: C
                        HdlValueId: result
                HdlOp: SUB
                    list: ops
                        HdlOp: SUB
                            list: ops
                                HdlValueId: op1
                                HdlValueId: op2
                        HdlOp: NEG
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: alu_status
                                        HdlValueId: C
        DEL list@@body from SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: result
                HdlOp: CONCAT
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: bcdh
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 3
                                        HdlValueInt: 0
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: bcdl
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 3
                                        HdlValueInt: 0
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmCase@@alu_opcode to alu_opcode
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode


CommitId: 7971b18c4e81a9e9e10a6019245562bda9e9f1b7
ADC with decimal mode bug... is it ok now?
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -321,17 +323,17 @@ always @ (*) begin
 		// TODO: verify synthesis for % operand
 		ADC_IMM, ADC_ZPG, ADC_ZPX, ADC_ABS, ADC_ABX, ADC_ABY, ADC_IDX, ADC_IDY : begin
 			if (alu_status[D] == 1) begin
-				bcdl = A[3:0] + alu_a[3:0] + alu_status[C];
-				bcdh = A[7:4] + alu_a[7:4];
-				if (bcdl > 9) begin
-					bcdh = bcdh + bcdl[5:4];
-					bcdl = bcdl % 10;
+				AL = A[3:0] + alu_a[3:0] + alu_status[C];
+				AH = A[7:4] + alu_a[7:4];
+				if (AL > 9) begin
+					bcdh = AH + (AL / 10);
+					bcdl = AL % 10;
 				end
-				if (bcdh > 9) begin
+				if (AH > 9) begin
 					STATUS[C] = 1;
-					bcdh = bcdh % 10;
+					bcdh2 = bcdh % 10;
 				end
-				result = {bcdh[3:0],bcdl[3:0]};
+				result = {bcdh2[3:0],bcdl[3:0]};
 			end
 			else
 				{STATUS[C],result} = op1 + op2 + alu_status[C];
ParseResult:
UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode

UPD HdlStmCase@@alu_opcode to alu_opcode
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode


CommitId: 3c84efc08bbef460d22d477ebdefa36bb05cf451
Bug #60: added a brief simulation to the video_converter module.
--- a/rtl/verilog/video.v
+++ b/rtl/verilog/video.v
@@ -44,7 +45,7 @@
 
 `include "timescale.v"
 
-module video(clk, reset_n, io_lines, enable, mem_rw, address, data, pixel);
+module video(clk, reset_n, io_lines, enable, mem_rw, address, data, pixel, write_addr, write_data, write_enable_n);
 	parameter [3:0] DATA_SIZE = 4'd8;
 	parameter [3:0] ADDR_SIZE = 4'd10; // this is the *local* addr_size
 

ParseResult:
INS HdlIdDef@@write_addr to ports
HdlIdDef: write_addr
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 10
                    HdlValueInt: 0
    HdlDirection: OUT

INS HdlIdDef@@write_data to ports
HdlIdDef: write_data
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 2
                    HdlValueInt: 0
    HdlDirection: OUT

INS HdlIdDef@@write_enable_n to ports
HdlIdDef: write_enable_n
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: OUT


CommitId: 3c84efc08bbef460d22d477ebdefa36bb05cf451
Bug #60: added a brief simulation to the video_converter module.
--- a/rtl/verilog/video.v
+++ b/rtl/verilog/video.v
@@ -84,7 +88,7 @@ module video(clk, reset_n, io_lines, enable, mem_rw, address, data, pixel);
 	reg [3:0] PF0; //  playfield register byte 0
 	reg [7:0] PF1; //  playfield register byte 1
 	reg [7:0] PF2; //  playfield register byte 2
-	reg RESP0; //  s t r o b e reset player 0
+	//reg RESP0; //  s t r o b e reset player 0
 	reg RESP1; //  s t r o b e reset player 1
 	reg RESM0; //  s t r o b e reset missile 0
 	reg RESM1; //  s t r o b e reset missile 1

ParseResult:
MOV HdlIdDef@@RESP0 to objs
HdlIdDef: RESP0
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

UPD HdlIdDef@@RESP0 to draw_p0


CommitId: 3c84efc08bbef460d22d477ebdefa36bb05cf451
Bug #60: added a brief simulation to the video_converter module.
--- a/rtl/verilog/video.v
+++ b/rtl/verilog/video.v
@@ -128,16 +132,25 @@ module video(clk, reset_n, io_lines, enable, mem_rw, address, data, pixel);
 	reg INPT4; // read input
 	reg INPT5; // read input
 
-	reg [5:0] hor_counter; // this counter is the "current pixel". when it reaches 39 the wsync register must be driven to zero
+	reg [8:0] vert_counter;
+	reg [7:0] hor_counter;
 
 	always @(posedge clk  or negedge reset_n) begin
 		if (reset_n == 1'b0) begin
-			hor_counter <= 6'd0;
+			hor_counter <= 8'd0;
+			vert_counter <= 9'd0;
 		end
 		else begin
-			if (hor_counter == 6'd39) begin
-				hor_counter <= 6'd0;
-				WSYNC <= 1'b0;
+			if (hor_counter == 8'd227) begin
+				hor_counter <= 8'd0;
+				WSYNC <= 1'b0; // TODO: check this on stella pdf
+
+				if (vert_counter == 9'd261) begin
+					vert_counter <= 9'd0;
+				end
+				else begin
+					vert_counter <= vert_counter + 9'd1;
+				end
 			end
 			else begin
 				hor_counter <= hor_counter + 6'd1;

ParseResult:
INS HdlIdDef@@vert_counter to objs
HdlIdDef: vert_counter
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 8
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@hor_counter to objs
HdlIdDef: hor_counter
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@hor_counter from objs
HdlIdDef: hor_counter
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 5
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 3c84efc08bbef460d22d477ebdefa36bb05cf451
Bug #60: added a brief simulation to the video_converter module.
--- a/rtl/verilog/video.v
+++ b/rtl/verilog/video.v
@@ -150,7 +163,7 @@ module video(clk, reset_n, io_lines, enable, mem_rw, address, data, pixel);
 			data_drv <= 8'h00;
 			WSYNC <= 1'b0;
 		end
-		else begin
+		else if (enable == 1'b1) begin
 			if (mem_rw == 1'b0) begin // reading! 
 				case (address) 
 					6'h00: data_drv <= {CXM0P, 6'b000000};

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@39 to 227


CommitId: 3c84efc08bbef460d22d477ebdefa36bb05cf451
Bug #60: added a brief simulation to the video_converter module.
--- a/rtl/verilog/video.v
+++ b/rtl/verilog/video.v
@@ -221,7 +234,7 @@ module video(clk, reset_n, io_lines, enable, mem_rw, address, data, pixel);
 						PF2 <= data;
 					end
 					6'h10: begin
-						RESP0 <= 1'b1; // STROBE
+						//RESP0 <= 1'b1; // STROBE
 					end
 					6'h11: begin
 						RESP1 <= 1'b1; // STROBE

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 
    INS tuple@@ to elifs
    INS HdlOp@@EQ to 
    UPD HdlOp@@EQ to EQ
        INS HdlValueId@@enable to ops
        INS HdlValueInt@@1 to ops

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlValueId: mem_rw
                        HdlValueInt: 0
                HdlStmBlock: SEQ
                    list: body
                        HdlStmCase: address
                            HdlStmCaseType: CASE
                            HdlValueId: address
                            list: cases
                                tuple
                                    HdlValueInt: 00
                                    HdlStmAssign
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlValueId: CXM0P
                                                HdlValueInt: 000000
                                        HdlValueId: data_drv
                                tuple
                                    HdlValueInt: 01
                                    HdlStmAssign
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlValueId: CXM1P
                                                HdlValueInt: 000000
                                        HdlValueId: data_drv
                                tuple
                                    HdlValueInt: 02
                                    HdlStmAssign
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlValueId: CXP0FB
                                                HdlValueInt: 000000
                                        HdlValueId: data_drv
                                tuple
                                    HdlValueInt: 03
                                    HdlStmAssign
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlValueId: CXP1FB
                                                HdlValueInt: 000000
                                        HdlValueId: data_drv
                                tuple
                                    HdlValueInt: 04
                                    HdlStmAssign
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlValueId: CXM0FB
                                                HdlValueInt: 000000
                                        HdlValueId: data_drv
                                tuple
                                    HdlValueInt: 05
                                    HdlStmAssign
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlValueId: CXM1FB
                                                HdlValueInt: 000000
                                        HdlValueId: data_drv
                                tuple
                                    HdlValueInt: 06
                                    HdlStmAssign
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlValueId: CXBLPF
                                                HdlValueInt: 000000
                                        HdlValueId: data_drv
                                tuple
                                    HdlValueInt: 07
                                    HdlStmAssign
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlValueId: CXPPMM
                                                HdlValueInt: 000000
                                        HdlValueId: data_drv
                                tuple
                                    HdlValueInt: 08
                                    HdlStmAssign
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlValueId: INPT0
                                                HdlValueInt: 000000
                                        HdlValueId: data_drv
                                tuple
                                    HdlValueInt: 09
                                    HdlStmAssign
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlValueId: INPT1
                                                HdlValueInt: 000000
                                        HdlValueId: data_drv
                                tuple
                                    HdlValueInt: 0a
                                    HdlStmAssign
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlValueId: INPT2
                                                HdlValueInt: 000000
                                        HdlValueId: data_drv
                                tuple
                                    HdlValueInt: 0b
                                    HdlStmAssign
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlValueId: INPT3
                                                HdlValueInt: 000000
                                        HdlValueId: data_drv
                                tuple
                                    HdlValueInt: 0c
                                    HdlStmAssign
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlValueId: INPT4
                                                HdlValueInt: 000000
                                        HdlValueId: data_drv
                                tuple
                                    HdlValueInt: 0d
                                    HdlStmAssign
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlValueId: INPT5
                                                HdlValueInt: 000000
                                        HdlValueId: data_drv
                            HdlStmNop: default
                list: elifs
                HdlStmBlock: SEQ
                    list: body
                        HdlStmCase: address
                            HdlStmCaseType: CASE
                            HdlValueId: address
                            list: cases
                                tuple
                                    HdlValueInt: 00
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: data
                                                        HdlValueInt: 1
                                                HdlValueId: VSYNC
                                tuple
                                    HdlValueInt: 01
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: data
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 7
                                                                        HdlValueInt: 6
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: data
                                                                HdlValueInt: 1
                                                HdlValueId: VBLANK
                                tuple
                                    HdlValueInt: 02
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 1
                                                HdlValueId: WSYNC
                                tuple
                                    HdlValueInt: 03
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 1
                                                HdlValueId: RSYNC
                                tuple
                                    HdlValueInt: 04
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: data
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 5
                                                                HdlValueInt: 0
                                                HdlValueId: NUSIZ0
                                tuple
                                    HdlValueInt: 05
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: data
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 5
                                                                HdlValueInt: 0
                                                HdlValueId: NUSIZ1
                                tuple
                                    HdlValueInt: 06
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: data
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 1
                                                HdlValueId: COLUP0
                                tuple
                                    HdlValueInt: 07
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: data
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 1
                                                HdlValueId: COLUP1
                                tuple
                                    HdlValueInt: 08
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: data
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 1
                                                HdlValueId: COLUPF
                                tuple
                                    HdlValueInt: 09
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: data
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 1
                                                HdlValueId: COLUBK
                                tuple
                                    HdlValueInt: 0a
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: data
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 5
                                                                        HdlValueInt: 4
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: data
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                HdlValueId: CTRLPF
                                tuple
                                    HdlValueInt: 0b
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: data
                                                        HdlValueInt: 3
                                                HdlValueId: REFP0
                                tuple
                                    HdlValueInt: 0c
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: data
                                                        HdlValueInt: 3
                                                HdlValueId: REFP1
                                tuple
                                    HdlValueInt: 0d
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: data
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 4
                                                HdlValueId: PF0
                                tuple
                                    HdlValueInt: 0e
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: data
                                                HdlValueId: PF1
                                tuple
                                    HdlValueInt: 0f
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: data
                                                HdlValueId: PF2
                                tuple
                                    HdlValueInt: 10
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 1
                                                HdlValueId: RESP0
                                tuple
                                    HdlValueInt: 11
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 1
                                                HdlValueId: RESP1
                                tuple
                                    HdlValueInt: 12
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 1
                                                HdlValueId: RESM0
                                tuple
                                    HdlValueInt: 13
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 1
                                                HdlValueId: RESM1
                                tuple
                                    HdlValueInt: 14
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 1
                                                HdlValueId: RESBL
                                tuple
                                    HdlValueInt: 15
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: data
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 3
                                                                HdlValueInt: 0
                                                HdlValueId: AUDC0
                                tuple
                                    HdlValueInt: 16
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: data
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 4
                                                                HdlValueInt: 0
                                                HdlValueId: AUDC1
                                tuple
                                    HdlValueInt: 17
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: data
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 4
                                                                HdlValueInt: 0
                                                HdlValueId: AUDF0
                                tuple
                                    HdlValueInt: 18
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: data
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 3
                                                                HdlValueInt: 0
                                                HdlValueId: AUDF1
                                tuple
                                    HdlValueInt: 19
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: data
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 3
                                                                HdlValueInt: 0
                                                HdlValueId: AUDV0
                                tuple
                                    HdlValueInt: 1a
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: data
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 3
                                                                HdlValueInt: 0
                                                HdlValueId: AUDV1
                                tuple
                                    HdlValueInt: 1b
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: data
                                                HdlValueId: GRP0
                                tuple
                                    HdlValueInt: 1c
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: data
                                                HdlValueId: GRP1
                                tuple
                                    HdlValueInt: 1d
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: data
                                                        HdlValueInt: 1
                                                HdlValueId: ENAM0
                                tuple
                                    HdlValueInt: 1e
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: data
                                                        HdlValueInt: 1
                                                HdlValueId: ENAM1
                                tuple
                                    HdlValueInt: 1f
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: data
                                                        HdlValueInt: 1
                                                HdlValueId: ENABL
                                tuple
                                    HdlValueInt: 20
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: data
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 4
                                                HdlValueId: HMP0
                                tuple
                                    HdlValueInt: 21
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: data
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 4
                                                HdlValueId: HMP1
                                tuple
                                    HdlValueInt: 22
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: data
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 4
                                                HdlValueId: HMM0
                                tuple
                                    HdlValueInt: 23
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: data
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 4
                                                HdlValueId: HMM1
                                tuple
                                    HdlValueInt: 24
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: data
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 4
                                                HdlValueId: HMBL
                                tuple
                                    HdlValueInt: 25
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: data
                                                        HdlValueInt: 0
                                                HdlValueId: VDELP0
                                tuple
                                    HdlValueInt: 26
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: data
                                                        HdlValueInt: 0
                                                HdlValueId: VDEL01
                                tuple
                                    HdlValueInt: 27
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: data
                                                        HdlValueInt: 0
                                                HdlValueId: VDELBL
                                tuple
                                    HdlValueInt: 28
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: data
                                                        HdlValueInt: 1
                                                HdlValueId: RESMP0
                                tuple
                                    HdlValueInt: 29
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: data
                                                        HdlValueInt: 1
                                                HdlValueId: RESMP1
                                tuple
                                    HdlValueInt: 2a
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 1
                                                HdlValueId: HMOVE
                                tuple
                                    HdlValueInt: 2b
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 1
                                                HdlValueId: HMCLR
                                tuple
                                    HdlValueInt: 2c
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: CXM0P
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: CXM1P
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: CXP0FB
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: CXP1FB
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: CXM0FB
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: CXM1FB
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: CXBLPF
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: CXPPMM
                            HdlStmBlock: SEQ
                                list: body
    UPD list@@elifs to ops
    MOV list@@elifs to 
    list: elifs


CommitId: b57febebc779e2ac58579b7ed944d8d253f95a9c
Fixing conflicts.
--- a/rtl/verilog/vga_controller.v
+++ b/rtl/verilog/vga_controller.v
@@ -44,9 +44,9 @@
 
 `include "timescale.v"
 
-module vga_controller ( reset, clk_50, line, vert_counter, SW, VGA_R, VGA_G, VGA_B, LEDR, VGA_VS, VGA_HS);
+module vga_controller ( reset_n, clk_50, line, vert_counter, SW, VGA_R, VGA_G, VGA_B, LEDR, VGA_VS, VGA_HS);
 
-input reset;
+input reset_n;
 input clk_50;
 input [8:0] SW;
 input [479:0] line;

ParseResult:
UPD HdlIdDef@@reset to reset_n


CommitId: b57febebc779e2ac58579b7ed944d8d253f95a9c
Fixing conflicts.
--- a/rtl/verilog/vga_controller.v
+++ b/rtl/verilog/vga_controller.v
@@ -111,9 +111,9 @@ begin
 	end
 end
 
-always @ (posedge clk_25 or negedge reset)
+always @ (posedge clk_25 or negedge reset_n)
 begin
-	if (!reset) begin
+	if (!reset_n) begin
 		vc <= 0;
 		VGA_VS <= 1;
 	end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlOp@@FALLING to FALLING
        UPD HdlValueId@@reset to reset_n

UPD HdlStmIf@@ to 
    UPD HdlOp@@NEG_LOG to NEG_LOG
        UPD HdlValueId@@reset to reset_n


CommitId: 467586b658daedaa2bf472990f680847f188cebb
SBC borrow flag bug fixed... again
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -464,9 +426,8 @@ always @ (*) begin
 				result = {bcdh[3:0],bcdl[3:0]};
 			end
 			else begin
-				op2 = ~alu_a;
 				{C_aux,result} = op1 + op2 + alu_status[C];
-				STATUS[C] = ~C_aux;
+				STATUS[C] = ~result[7];
 			end
 				
 			
ParseResult:
UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@NEG to NEG
                INS list@@ops to NEG
                INS HdlOp@@INDEX to ops
                UPD HdlOp@@INDEX to INDEX
                    INS HdlValueInt@@7 to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@NEG to NEG
                INS list@@ops to NEG
                INS HdlOp@@INDEX to ops
                UPD HdlOp@@INDEX to INDEX
                    INS HdlValueInt@@7 to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@NEG to NEG
                INS list@@ops to NEG
                INS HdlOp@@INDEX to ops
                UPD HdlOp@@INDEX to INDEX
                    INS HdlValueInt@@7 to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@NEG to NEG
                INS list@@ops to NEG
                INS HdlOp@@INDEX to ops
                UPD HdlOp@@INDEX to INDEX
                    INS HdlValueInt@@7 to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@NEG to NEG
                INS list@@ops to NEG
                INS HdlOp@@INDEX to ops
                UPD HdlOp@@INDEX to INDEX
                    INS HdlValueInt@@7 to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@NEG to NEG
                INS list@@ops to NEG
                INS HdlOp@@INDEX to ops
                UPD HdlOp@@INDEX to INDEX
                    INS HdlValueInt@@7 to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@NEG to NEG
                INS list@@ops to NEG
                INS HdlOp@@INDEX to ops
                UPD HdlOp@@INDEX to INDEX
                    INS HdlValueInt@@7 to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@NEG to NEG
                INS list@@ops to NEG
                INS HdlOp@@INDEX to ops
                UPD HdlOp@@INDEX to INDEX
                    INS HdlValueInt@@7 to ops

UPD HdlStmCase@@alu_opcode to alu_opcode
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode


CommitId: c94876a10f4edab47657db5048278dea7cc0a24c
Bug #56: ZPX page crossing.
--- a/rtl/verilog/t6507lp_fsm.v
+++ b/rtl/verilog/t6507lp_fsm.v
@@ -217,6 +226,7 @@ module t6507lp_fsm(clk, reset_n, alu_result, alu_status, data_in, alu_x, alu_y,
 			mem_rw <= MEM_READ;
 			data_out <= 8'h00;
 			rst_counter <= 3'h0;
+			index <= 8'h00;
 		end
 		else begin
 			state <= next_state;

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state


CommitId: c94876a10f4edab47657db5048278dea7cc0a24c
Bug #56: ZPX page crossing.
--- a/rtl/verilog/t6507lp_fsm.v
+++ b/rtl/verilog/t6507lp_fsm.v
@@ -242,6 +252,18 @@ module t6507lp_fsm(clk, reset_n, alu_result, alu_status, data_in, alu_x, alu_y,
 				all instructions execute this cycle.
 				*/
 				FETCH_LOW: begin
+					//$display("index_is_x = %b",index_is_x);
+					if (index_is_x == 1'b1) begin
+						index <= alu_x;
+						//$display("alu_x = %d",alu_x);
+					end
+					else begin
+						index <= alu_y;
+						//$display("alu_y = %d",alu_y);
+					end
+					if (index_is_branch) begin
+						index <= temp_data;
+					end
 					if (accumulator || implied || txs || tsx) begin
 						pc <= pc; // is this better?
 						address <= pc;

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state


CommitId: c94876a10f4edab47657db5048278dea7cc0a24c
Bug #56: ZPX page crossing.
--- a/rtl/verilog/t6507lp_fsm.v
+++ b/rtl/verilog/t6507lp_fsm.v
@@ -967,7 +996,8 @@ module t6507lp_fsm(clk, reset_n, alu_result, alu_status, data_in, alu_x, alu_y,
 			end
 			BNE_REL: begin
 				relative = 1'b1;
-				index = temp_data;
+				index_is_branch = 1'b1;
+				//index = temp_data;
 				
 				if (alu_status[Z] == 1'b0) begin
 					branch = 1'b1;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: index
                HdlValueInt: 00


CommitId: c94876a10f4edab47657db5048278dea7cc0a24c
Bug #56: ZPX page crossing.
--- a/rtl/verilog/t6507lp_fsm.v
+++ b/rtl/verilog/t6507lp_fsm.v
@@ -978,7 +1008,8 @@ module t6507lp_fsm(clk, reset_n, alu_result, alu_status, data_in, alu_x, alu_y,
 			end
 			BPL_REL: begin
 				relative = 1'b1;
-				index = temp_data;
+				index_is_branch = 1'b1;
+				//index = temp_data;
 				
 				if (!alu_status[N]) begin
 					branch = 1'b1;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: index_is_branch
                HdlValueInt: 0

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: index
                HdlValueInt: 00


CommitId: c94876a10f4edab47657db5048278dea7cc0a24c
Bug #56: ZPX page crossing.
--- a/rtl/verilog/t6507lp_fsm.v
+++ b/rtl/verilog/t6507lp_fsm.v
@@ -989,7 +1020,8 @@ module t6507lp_fsm(clk, reset_n, alu_result, alu_status, data_in, alu_x, alu_y,
 			end
 			BMI_REL: begin
 				relative = 1'b1;
-				index = temp_data;
+				index_is_branch = 1'b1;
+				//index = temp_data;
 				
 				if (alu_status[N]) begin
 					branch = 1'b1;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: index_is_branch
                HdlValueInt: 0

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: index
                HdlValueInt: 00


CommitId: c94876a10f4edab47657db5048278dea7cc0a24c
Bug #56: ZPX page crossing.
--- a/rtl/verilog/t6507lp_fsm.v
+++ b/rtl/verilog/t6507lp_fsm.v
@@ -1000,7 +1032,8 @@ module t6507lp_fsm(clk, reset_n, alu_result, alu_status, data_in, alu_x, alu_y,
 			end
 			BVC_REL: begin
 				relative = 1'b1;
-				index = temp_data;
+				index_is_branch = 1'b1;
+				//index = temp_data;
 				
 				if (!alu_status[V]) begin
 					branch = 1'b1;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: index_is_branch
                HdlValueInt: 0

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: index
                HdlValueInt: 00


CommitId: c94876a10f4edab47657db5048278dea7cc0a24c
Bug #56: ZPX page crossing.
--- a/rtl/verilog/t6507lp_fsm.v
+++ b/rtl/verilog/t6507lp_fsm.v
@@ -1011,7 +1044,8 @@ module t6507lp_fsm(clk, reset_n, alu_result, alu_status, data_in, alu_x, alu_y,
 			end
 			BVS_REL: begin
 				relative = 1'b1;
-				index = temp_data;
+				index_is_branch = 1'b1;
+				//index = temp_data;
 				
 				if (alu_status[V]) begin
 					branch = 1'b1;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: index_is_branch
                HdlValueInt: 0

UPD HdlStmCase@@ir to ir
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_branch
            DEL HdlValueId@@temp_data from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_branch
            DEL HdlValueId@@temp_data from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_branch
            DEL HdlValueId@@temp_data from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_branch
            DEL HdlValueId@@temp_data from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_branch
            DEL HdlValueId@@temp_data from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_branch
            DEL HdlValueId@@temp_data from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_branch
            DEL HdlValueId@@temp_data from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_branch
            DEL HdlValueId@@temp_data from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    DEL HdlStmCaseType@@CASE from ir
    DEL HdlValueId@@ir from ir

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: index
                HdlValueInt: 00


CommitId: c94876a10f4edab47657db5048278dea7cc0a24c
Bug #56: ZPX page crossing.
--- a/rtl/verilog/t6507lp_fsm.v
+++ b/rtl/verilog/t6507lp_fsm.v
@@ -1027,19 +1061,23 @@ module t6507lp_fsm(clk, reset_n, alu_result, alu_status, data_in, alu_x, alu_y,
 			ADC_ABX, AND_ABX, ASL_ABX, CMP_ABX, DEC_ABX, EOR_ABX, INC_ABX, LDA_ABX, LDY_ABX, LSR_ABX, ORA_ABX, ROL_ABX, ROR_ABX,
 			SBC_ABX, STA_ABX: begin
 				absolute_indexed = 1'b1;
-				index = alu_x;
+				index_is_x = 1'b1;
+				//index = alu_x;
 			end
 			ADC_ABY, AND_ABY, CMP_ABY, EOR_ABY, LDA_ABY, LDX_ABY, ORA_ABY, SBC_ABY, STA_ABY: begin
 				absolute_indexed = 1'b1;
-				index = alu_y;
+				index_is_x = 1'b0;
+				//index = alu_y;
 			end
 			ADC_IDX, AND_IDX, CMP_IDX, EOR_IDX, LDA_IDX, ORA_IDX, SBC_IDX, STA_IDX: begin
 				indirectx = 1'b1;
-				index = alu_x;
+				index_is_x = 1'b1;
+				//index = alu_x;
 			end
 			ADC_IDY, AND_IDY, CMP_IDY, EOR_IDY, LDA_IDY, ORA_IDY, SBC_IDY, STA_IDY: begin 
 				indirecty = 1'b1;
-				index = alu_y;	
+				index_is_x = 1'b0;
+				//index = alu_y;	
 			end
 			JMP_ABS: begin
 				absolute = 1'b1;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: index_is_branch
                HdlValueInt: 0

UPD HdlStmCase@@ir to ir
    INS HdlStmCaseType@@CASE to ir
    INS HdlValueId@@ir to ir
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: index_is_x
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops

UPD HdlStmCase@@ir to ir
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_branch
            DEL HdlValueId@@temp_data from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_branch
            DEL HdlValueId@@temp_data from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_branch
            DEL HdlValueId@@temp_data from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_branch
            DEL HdlValueId@@temp_data from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_branch
            DEL HdlValueId@@temp_data from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_branch
            DEL HdlValueId@@temp_data from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_branch
            DEL HdlValueId@@temp_data from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_branch
            DEL HdlValueId@@temp_data from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    DEL HdlStmCaseType@@CASE from ir
    DEL HdlValueId@@ir from ir

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: index
                HdlValueInt: 00


CommitId: c94876a10f4edab47657db5048278dea7cc0a24c
Bug #56: ZPX page crossing.
--- a/rtl/verilog/t6507lp_fsm.v
+++ b/rtl/verilog/t6507lp_fsm.v
@@ -1079,6 +1117,7 @@ module t6507lp_fsm(clk, reset_n, alu_result, alu_status, data_in, alu_x, alu_y,
 				txs = 1'b1;
 			end
 			default: begin
+				index_is_x = 1'b1;
 				//$write("state : %b", state);
 				if (reset_n == 1'b1 && state != FETCH_OP_FIX_PC) begin // the processor is NOT being reset neither it is fixing the pc
 					//$write("\nunknown OPCODE!!!!! 0x%h\n", ir);
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: index_is_branch
                HdlValueInt: 0

UPD HdlStmCase@@ir to ir
    INS HdlStmCaseType@@CASE to ir
    INS HdlValueId@@ir to ir
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: index_is_x
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops

UPD HdlStmCase@@ir to ir
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_branch
            DEL HdlValueId@@temp_data from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_branch
            DEL HdlValueId@@temp_data from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_branch
            DEL HdlValueId@@temp_data from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_branch
            DEL HdlValueId@@temp_data from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_branch
            DEL HdlValueId@@temp_data from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_branch
            DEL HdlValueId@@temp_data from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_branch
            DEL HdlValueId@@temp_data from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_branch
            DEL HdlValueId@@temp_data from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_x from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@index to index_is_x
            DEL HdlValueId@@alu_y from ops
    DEL HdlStmCaseType@@CASE from ir
    DEL HdlValueId@@ir from ir

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: index
                HdlValueInt: 00


CommitId: 07dfd73483a79c4918f3d2ecba94d4200222fe33
Bug #24 from trac might be fixed. Processor register is working properly.
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -163,7 +163,13 @@ begin
 			end
 			PLP_IMP, RTI_IMP :
 			begin
-				alu_status <= alu_a;
+				alu_status[C] <= alu_a[C];
+				alu_status[Z] <= alu_a[Z];
+				alu_status[I] <= alu_a[I];
+				alu_status[D] <= alu_a[D];
+				alu_status[B] <= alu_a[B];
+				alu_status[V] <= alu_a[V];
+				alu_status[N] <= alu_a[N];
 			end
 			BIT_ZPG, BIT_ABS :
 			begin

ParseResult:
UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode
    INS tuple@@ to cases
    tuple
        HdlValueId: PLP_IMP
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: C
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: C
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: Z
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: Z
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: I
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: I
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: D
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: D
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: B
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: B
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: V
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: V
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: N
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: N
    INS tuple@@ to cases
    tuple
        HdlValueId: RTI_IMP
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: C
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: C
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: Z
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: Z
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: I
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: I
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: D
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: D
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: B
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: B
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: V
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: V
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: N
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: N

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str

UPD HdlStmCase@@alu_opcode to alu_opcode
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode
    DEL tuple@@ from cases
    tuple
        HdlValueId: PLP_IMP
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: alu_a
                    HdlValueId: alu_status
    DEL tuple@@ from cases
    tuple
        HdlValueId: RTI_IMP
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: alu_a
                    HdlValueId: alu_status


CommitId: 07dfd73483a79c4918f3d2ecba94d4200222fe33
Bug #24 from trac might be fixed. Processor register is working properly.
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -188,12 +194,16 @@ end
 always @ (*) begin
 	bcd1      = A;
 	bcd2      = alu_a;
-	//result    = alu_result;
-	//STATUS[C] = STATUS[C];
-	//STATUS[V] = STATUS[V];
-	//STATUS[B] = STATUS[B];
-	//STATUS[I] = STATUS[I];
-	//STATUS[D] = STATUS[D];
+	result    = alu_result;
+	STATUS[N] = alu_status[N];
+	STATUS[C] = alu_status[C];
+	STATUS[V] = alu_status[V];
+	STATUS[B] = alu_status[B];
+	STATUS[I] = alu_status[I];
+	STATUS[D] = alu_status[D];
+	STATUS[Z] = alu_status[Z];
+	STATUS[N] = alu_status[N];
+	STATUS[5] = alu_status[5];
 
 	case (alu_opcode)
 		// BIT - Bit Test

ParseResult:
UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode
    INS tuple@@ to cases
    tuple
        HdlValueId: PLP_IMP
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: C
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: C
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: Z
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: Z
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: I
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: I
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: D
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: D
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: B
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: B
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: V
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: V
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: N
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: N
    INS tuple@@ to cases
    tuple
        HdlValueId: RTI_IMP
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: C
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: C
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: Z
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: Z
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: I
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: I
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: D
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: D
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: B
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: B
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: V
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: V
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_a
                            HdlValueId: N
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_status
                            HdlValueId: N

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str

UPD HdlStmCase@@alu_opcode to alu_opcode
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode
    DEL tuple@@ from cases
    tuple
        HdlValueId: PLP_IMP
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: alu_a
                    HdlValueId: alu_status
    DEL tuple@@ from cases
    tuple
        HdlValueId: RTI_IMP
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: alu_a
                    HdlValueId: alu_status


CommitId: 07dfd73483a79c4918f3d2ecba94d4200222fe33
Bug #24 from trac might be fixed. Processor register is working properly.
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -336,8 +346,8 @@ always @ (*) begin
 					STATUS[C] = 1;
 				end
 			end
-			$display("op1 = %h op2 = %h result = %h", bcd1, bcd2, result);
-			$display("V = %b C = %b D = %b", STATUS[V], STATUS[C], STATUS[D]);
+			//$display("op1 = %h op2 = %h result = %h", bcd1, bcd2, result);
+			//$display("V = %b C = %b D = %b", STATUS[V], STATUS[C], STATUS[D]);
 		end
 			
 		// AND - Logical AND
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: result
                HdlValueId: alu_result
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: N
                HdlOp: INDEX
                    list: ops
                        HdlValueId: alu_status
                        HdlValueId: N
        INS HdlOp@@ASSIGN to body
        INS HdlOp@@ASSIGN to body
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: B
                HdlOp: INDEX
                    list: ops
                        HdlValueId: alu_status
                        HdlValueId: B
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: I
                HdlOp: INDEX
                    list: ops
                        HdlValueId: alu_status
                        HdlValueId: I
        INS HdlOp@@ASSIGN to body
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: Z
                HdlOp: INDEX
                    list: ops
                        HdlValueId: alu_status
                        HdlValueId: Z
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: N
                HdlOp: INDEX
                    list: ops
                        HdlValueId: alu_status
                        HdlValueId: N
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueInt: 5
                HdlOp: INDEX
                    list: ops
                        HdlValueId: alu_status
                        HdlValueInt: 5
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: alu_status
                    HdlValueId: C
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: alu_status
                    HdlValueId: V
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: alu_status
                    HdlValueId: D

UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode

UPD HdlStmCase@@alu_opcode to alu_opcode
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: STATUS
                    HdlValueId: C
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: STATUS
                    HdlValueId: V
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: STATUS
                    HdlValueId: D
            DEL HdlValueId@@$display from ops
            DEL str@@ from ops
            DEL list@@ops from CALL
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: bcd1
                HdlValueId: bcd2
                HdlValueId: result
        DEL HdlOp@@CALL from body
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: bcd1
                HdlValueId: bcd2
                HdlValueId: result
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: D
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: bcd1
                HdlValueId: bcd2
                HdlValueId: result
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: D
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: bcd1
                HdlValueId: bcd2
                HdlValueId: result
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: D
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: bcd1
                HdlValueId: bcd2
                HdlValueId: result
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: D
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: bcd1
                HdlValueId: bcd2
                HdlValueId: result
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: D
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: bcd1
                HdlValueId: bcd2
                HdlValueId: result
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: D
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlValueId: bcd1
                HdlValueId: bcd2
                HdlValueId: result
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: V
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: C
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: D


CommitId: 6bd5e933433891eaf4801c7ad1ca68b6a3f1ecfb
Bug #49: RTI and RTS behavior was recoded.
--- a/rtl/verilog/t6507lp_fsm.v
+++ b/rtl/verilog/t6507lp_fsm.v
@@ -834,9 +834,12 @@ module t6507lp_fsm(clk, reset_n, alu_result, alu_status, data_in, alu_x, alu_y,
 			end
 			PULL_PCL: begin
 				next_state = PULL_PCH;
-				alu_opcode = ir;
-				alu_enable = 1'b1;
-				alu_a = temp_data;
+
+				if (rti) begin
+					alu_opcode = ir;
+					alu_enable = 1'b1;
+					alu_a = temp_data;
+				end
 			end
 			PULL_PCH: begin
 				if (rti) begin
ParseResult:
UPD HdlStmCase@@state to state
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_opcode
                HdlValueId: ir
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_enable
                HdlValueInt: 1
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_a
                HdlValueId: temp_data


CommitId: 699b41207cc9c47154eb06f4cce6e477af164707
Alu bug fixed. Z and N flags depend on result, so they must be attributed after result is assigned.
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -436,8 +434,10 @@ always @ (*) begin
 		end
 
 		default: begin // NON-DEFAULT OPCODES FALL HERE
-		end 
+		end
 	endcase
+	STATUS[Z] = (result == 0) ? 1 : 0;
+	STATUS[N] = result[7];
 end
 
 endmodule
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: Z
                HdlOp: TERNARY
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlValueId: result
                                HdlValueInt: 0
                        HdlValueInt: 1
                        HdlValueInt: 0
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: STATUS
                        HdlValueId: N
                HdlOp: INDEX
                    list: ops
                        HdlValueId: result
                        HdlValueInt: 7


CommitId: 6ee368ddb451d6ef8f075c5042017b9a2ab4dfec
STA, STY and STX fixed
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -130,10 +130,15 @@ begin
 			begin
 				alu_status <= STATUS;
 			end
-			PHA_IMP :
-			begin
+			PHA_IMP, STA_ZPG, STA_ZPX, STA_ABS, STA_ABX, STA_ABY, STA_IDX, STA_IDY : begin
 				alu_result <= result;
 			end
+			STX_ZPG, STX_ZPY, STX_ABS : begin
+				alu_x <= result;
+			end
+			STY_ZPG, STY_ZPX, STY_ABS : begin
+				alu_y <= result;
+			end
 			SEC_IMP :
 			begin
 				alu_status[C] <= 1;

ParseResult:
UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode
    INS tuple@@ to cases
    tuple
        HdlValueId: STA_ZPG
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: result
                    HdlValueId: alu_result
    INS tuple@@ to cases
    tuple
        HdlValueId: STA_ZPX
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: result
                    HdlValueId: alu_result
    INS tuple@@ to cases
    tuple
        HdlValueId: STA_ABS
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: result
                    HdlValueId: alu_result
    INS tuple@@ to cases
    tuple
        HdlValueId: STA_ABX
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: result
                    HdlValueId: alu_result
    INS tuple@@ to cases
    tuple
        HdlValueId: STA_ABY
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: result
                    HdlValueId: alu_result
    INS tuple@@ to cases
    tuple
        HdlValueId: STA_IDX
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: result
                    HdlValueId: alu_result
    INS tuple@@ to cases
    tuple
        HdlValueId: STA_IDY
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: result
                    HdlValueId: alu_result
    INS tuple@@ to cases
    tuple
        HdlValueId: STX_ZPG
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: result
                    HdlValueId: alu_x
    INS tuple@@ to cases
    tuple
        HdlValueId: STX_ZPY
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: result
                    HdlValueId: alu_x
    INS tuple@@ to cases
    tuple
        HdlValueId: STX_ABS
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: result
                    HdlValueId: alu_x
    INS tuple@@ to cases
    tuple
        HdlValueId: STY_ZPG
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: result
                    HdlValueId: alu_y
    INS tuple@@ to cases
    tuple
        HdlValueId: STY_ZPX
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: result
                    HdlValueId: alu_y
    INS tuple@@ to cases
    tuple
        HdlValueId: STY_ABS
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: result
                    HdlValueId: alu_y

UPD HdlStmCase@@alu_opcode to alu_opcode
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode


CommitId: 6ee368ddb451d6ef8f075c5042017b9a2ab4dfec
STA, STY and STX fixed
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -412,11 +417,9 @@ if (alu_enable == 1) begin
 
 		// SBC - Subtract with Carry
 		SBC_IMM, SBC_ZPG, SBC_ZPX, SBC_ABS, SBC_ABX, SBC_ABY, SBC_IDX, SBC_IDY : begin
-			op2 = ~alu_a;
 			if (alu_status[D] == 1) begin
-			
-				bcdl = op1[3:0] + op2[3:0] + alu_status[C];
-				bcdh = op1[7:4] + op2[7:4];
+				bcdl = op1[3:0] - op2[3:0] - (1 - alu_status[C]);
+				bcdh = op1[7:4] - op2[7:4];
 				if (bcdl > 9) begin
 					bcdh = bcdh + bcdl[5:4];
 					bcdl = bcdl % 10;

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode

UPD HdlStmCase@@alu_opcode to alu_opcode
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op2
                HdlOp: NEG
                    list: ops
                        HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op2
                HdlOp: NEG
                    list: ops
                        HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op2
                HdlOp: NEG
                    list: ops
                        HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op2
                HdlOp: NEG
                    list: ops
                        HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op2
                HdlOp: NEG
                    list: ops
                        HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op2
                HdlOp: NEG
                    list: ops
                        HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op2
                HdlOp: NEG
                    list: ops
                        HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op2
                HdlOp: NEG
                    list: ops
                        HdlValueId: alu_a
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: 6ee368ddb451d6ef8f075c5042017b9a2ab4dfec
STA, STY and STX fixed
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -428,7 +431,8 @@ if (alu_enable == 1) begin
 				result = {bcdh[3:0],bcdl[3:0]};
 			end
 			else begin
-				{C_aux,result} = op1 + op2 + alu_status[C];
+				op2 = ~alu_a;
+				result = op1 + op2 + alu_status[C];
 				STATUS[C] = ~result[7];
 			end
 				
ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode

UPD HdlStmCase@@alu_opcode to alu_opcode
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op2
                HdlOp: NEG
                    list: ops
                        HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op2
                HdlOp: NEG
                    list: ops
                        HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op2
                HdlOp: NEG
                    list: ops
                        HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op2
                HdlOp: NEG
                    list: ops
                        HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op2
                HdlOp: NEG
                    list: ops
                        HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op2
                HdlOp: NEG
                    list: ops
                        HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op2
                HdlOp: NEG
                    list: ops
                        HdlValueId: alu_a
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op2
                HdlOp: NEG
                    list: ops
                        HdlValueId: alu_a
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: 71f30ad46487d39312b94f2960fe2b9ff22f3cd4
Bug #24 from trac was fixed.
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -89,9 +88,6 @@ begin
 		alu_y <= 0;
 	end
 	else if ( alu_enable == 1 ) begin
-		//$display("A = %h result = %h", A, result);
-		//$display("V = %b C = %b D = %b", STATUS[V], STATUS[C], STATUS[D]);
-
 		case (alu_opcode)
 			ADC_IMM, ADC_ZPG, ADC_ZPX, ADC_ABS, ADC_ABX, ADC_ABY, ADC_IDX, ADC_IDY,
 			AND_IMM, AND_ZPG, AND_ZPX, AND_ABS, AND_ABX, AND_ABY, AND_IDX, AND_IDY,

ParseResult:
UPD HdlIdDef@@bcd1 to op1

UPD HdlIdDef@@bcd2 to op2


CommitId: 71f30ad46487d39312b94f2960fe2b9ff22f3cd4
Bug #24 from trac was fixed.
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -227,7 +221,6 @@ always @ (*) begin
 		end
 
 		// CLI - Clear Interrupt Disable
-		// TODO: verify if this should be supported by 6507
 		CLI_IMP: begin
 			STATUS[I] = 1'b0;
 		end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op1
                HdlValueId: A
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op2
                HdlValueId: alu_a

UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode

UPD HdlStmCase@@alu_opcode to alu_opcode
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: bcd1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: bcd2
                HdlValueId: alu_a


CommitId: 71f30ad46487d39312b94f2960fe2b9ff22f3cd4
Bug #24 from trac was fixed.
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -317,22 +310,20 @@ always @ (*) begin
 		ADC_IMM, ADC_ZPG, ADC_ZPX, ADC_ABS, ADC_ABX, ADC_ABY, ADC_IDX, ADC_IDY : begin
 			if (alu_status[D] == 1) begin
 				if (A[3:0] > 9) begin
-					bcd1 = A + 6; // A = A - 10 and A = A + 16
+					op1 = A + 6; // A = A - 10 and A = A + 16
 				end
-				if (bcd1[7:4] > 9) begin
-					bcd1 = bcd1[7:4] + 6; // A = A - 10 and A = A + 16
+				if (op1[7:4] > 9) begin
+					op1 = op1[7:4] + 6; // A = A - 10 and A = A + 16
 				end
 				if (alu_a[3:0] > 9) begin
-					bcd2 = alu_a + 6;
+					op2 = alu_a + 6;
 				end
-				if (bcd2[7:4] > 9) begin
-					bcd2 = bcd2[7:4] + 6; // A = A - 10 and A = A + 16
+				if (op2[7:4] > 9) begin
+					op2 = op2[7:4] + 6; // A = A - 10 and A = A + 16
 				end
 			end
-			//$display("op1 = %h op2 = %h result = %h", bcd1, bcd2, result);
-			//$display("V = %b C = %b D = %b", STATUS[V], STATUS[C], STATUS[D]);
-			{STATUS[C],result} = bcd1 + bcd2 + alu_status[C];
-			if ((bcd1[7] == bcd2[7]) && (bcd1[7] != alu_result[7]))
+			{STATUS[C],result} = op1 + op2 + alu_status[C];
+			if ((op1[7] == op2[7]) && (op1[7] != result[7]))
 				STATUS[V] = 1;
 			else
 				STATUS[V] = 0;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op1
                HdlValueId: A
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op2
                HdlValueId: alu_a

UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode

UPD HdlStmCase@@alu_opcode to alu_opcode
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@bcd1 to op1
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@bcd2 to op2
        UPD HdlOp@@NE to NE
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@bcd1 to op1
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@alu_result to result

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@bcd1 to op1
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@bcd2 to op2
        UPD HdlOp@@NE to NE
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@bcd1 to op1
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@alu_result to result

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@bcd1 to op1
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@bcd2 to op2
        UPD HdlOp@@NE to NE
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@bcd1 to op1
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@alu_result to result

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@bcd1 to op1
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@bcd2 to op2
        UPD HdlOp@@NE to NE
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@bcd1 to op1
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@alu_result to result

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@bcd1 to op1
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@bcd2 to op2
        UPD HdlOp@@NE to NE
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@bcd1 to op1
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@alu_result to result

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@bcd1 to op1
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@bcd2 to op2
        UPD HdlOp@@NE to NE
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@bcd1 to op1
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@alu_result to result

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@bcd1 to op1
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@bcd2 to op2
        UPD HdlOp@@NE to NE
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@bcd1 to op1
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@alu_result to result

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@bcd1 to op1
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@bcd2 to op2
        UPD HdlOp@@NE to NE
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@bcd1 to op1
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@alu_result to result

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd1 to op1

UPD HdlStmIf@@ to 
    UPD HdlOp@@GT to GT
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@bcd1 to op1
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd1 to op1
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlValueId@@bcd1 to op1

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd2 to op2

UPD HdlStmIf@@ to 
    UPD HdlOp@@GT to GT
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd2 to op2
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlValueId@@bcd2 to op2

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd1 to op1

UPD HdlStmIf@@ to 
    UPD HdlOp@@GT to GT
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@bcd1 to op1
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd1 to op1
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlValueId@@bcd1 to op1

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd2 to op2

UPD HdlStmIf@@ to 
    UPD HdlOp@@GT to GT
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd2 to op2
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlValueId@@bcd2 to op2

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd1 to op1

UPD HdlStmIf@@ to 
    UPD HdlOp@@GT to GT
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@bcd1 to op1
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd1 to op1
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlValueId@@bcd1 to op1

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd2 to op2

UPD HdlStmIf@@ to 
    UPD HdlOp@@GT to GT
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd2 to op2
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlValueId@@bcd2 to op2

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd1 to op1

UPD HdlStmIf@@ to 
    UPD HdlOp@@GT to GT
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@bcd1 to op1
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd1 to op1
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlValueId@@bcd1 to op1

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd2 to op2

UPD HdlStmIf@@ to 
    UPD HdlOp@@GT to GT
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd2 to op2
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlValueId@@bcd2 to op2

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd1 to op1

UPD HdlStmIf@@ to 
    UPD HdlOp@@GT to GT
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@bcd1 to op1
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd1 to op1
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlValueId@@bcd1 to op1

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd2 to op2

UPD HdlStmIf@@ to 
    UPD HdlOp@@GT to GT
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd2 to op2
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlValueId@@bcd2 to op2

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd1 to op1

UPD HdlStmIf@@ to 
    UPD HdlOp@@GT to GT
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@bcd1 to op1
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd1 to op1
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlValueId@@bcd1 to op1

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd2 to op2

UPD HdlStmIf@@ to 
    UPD HdlOp@@GT to GT
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd2 to op2
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlValueId@@bcd2 to op2

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd1 to op1

UPD HdlStmIf@@ to 
    UPD HdlOp@@GT to GT
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@bcd1 to op1
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd1 to op1
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlValueId@@bcd1 to op1

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd2 to op2

UPD HdlStmIf@@ to 
    UPD HdlOp@@GT to GT
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd2 to op2
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlValueId@@bcd2 to op2

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd1 to op1

UPD HdlStmIf@@ to 
    UPD HdlOp@@GT to GT
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@bcd1 to op1
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd1 to op1
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlValueId@@bcd1 to op1

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd2 to op2

UPD HdlStmIf@@ to 
    UPD HdlOp@@GT to GT
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd2 to op2
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlValueId@@bcd2 to op2

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: bcd1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: bcd2
                HdlValueId: alu_a


CommitId: 71f30ad46487d39312b94f2960fe2b9ff22f3cd4
Bug #24 from trac was fixed.
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -346,8 +337,6 @@ always @ (*) begin
 					STATUS[C] = 1;
 				end
 			end
-			//$display("op1 = %h op2 = %h result = %h", bcd1, bcd2, result);
-			//$display("V = %b C = %b D = %b", STATUS[V], STATUS[C], STATUS[D]);
 		end
 			
 		// AND - Logical AND

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op1
                HdlValueId: A
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op2
                HdlValueId: alu_a

UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode

UPD HdlStmCase@@alu_opcode to alu_opcode
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: bcd1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: bcd2
                HdlValueId: alu_a


CommitId: 71f30ad46487d39312b94f2960fe2b9ff22f3cd4
Bug #24 from trac was fixed.
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -386,21 +375,22 @@ always @ (*) begin
 		SBC_IMM, SBC_ZPG, SBC_ZPX, SBC_ABS, SBC_ABX, SBC_ABY, SBC_IDX, SBC_IDY : begin
 			if (alu_status[D] == 1) begin
 				if (A[3:0] > 9) begin
-					bcd1 = A + 6; // A = A - 10 and A = A + 16
+					op1 = A + 6; // A = A - 10 and A = A + 16
 				end
-				if (bcd1[7:4] > 9) begin
-					bcd1 = bcd1[7:4] + 6; // A = A - 10 and A = A + 16
+				if (op1[7:4] > 9) begin
+					op1 = op1[7:4] + 6; // A = A - 10 and A = A + 16
 				end
 				if (alu_a[3:0] > 9) begin
-					bcd2 = alu_a + 6;
+					op2 = alu_a + 6;
 				end
-				if (bcd2[7:4] > 9) begin
-					bcd2 = bcd2[7:4] + 6; // A = A - 10 and A = A + 16
+				if (op2[7:4] > 9) begin
+					op2 = op2[7:4] + 6; // A = A - 10 and A = A + 16
 				end
 			end
 
-			{STATUS[C],result} = bcd1 - bcd2 - ~alu_status[C];
-			if ((bcd1[7] == bcd2[7]) && (bcd1[7] != alu_result[7]))
+			{STATUS[C],result} = op1 - op2 - ~alu_status[C];
+
+			if ((op1[7] == op2[7]) && (op1[7] != result[7]))
 				STATUS[V] = 1;
 			else
 				STATUS[V] = 0;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op1
                HdlValueId: A
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op2
                HdlValueId: alu_a

UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode

UPD HdlStmCase@@alu_opcode to alu_opcode
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd1 to op1

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd1 to op1

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd1 to op1

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd1 to op1

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd1 to op1

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd1 to op1

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd1 to op1

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@bcd1 to op1

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: bcd1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: bcd2
                HdlValueId: alu_a


CommitId: 71f30ad46487d39312b94f2960fe2b9ff22f3cd4
Bug #24 from trac was fixed.
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -428,13 +418,13 @@ always @ (*) begin
 			
 		// ROL - Rotate Left
 		ROL_ACC : begin
-			{STATUS[C],result} = {A,alu_status[C]}; //TODO: does it really work?
+			{STATUS[C],result} = {A,alu_status[C]};
 		end
 		ROL_ZPG, ROL_ZPX, ROL_ABS, ROL_ABX : begin
 			{STATUS[C],result} = {alu_a,alu_status[C]};
 		end
 
-		// ROR - Rotate Right		
+		// ROR - Rotate Right
 		ROR_ACC : begin
 			{result,STATUS[C]} = {alu_status[C],A};
 		end
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op1
                HdlValueId: A
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op2
                HdlValueId: alu_a

UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode

UPD HdlStmCase@@alu_opcode to alu_opcode
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@bcd1 to op1
                    UPD HdlValueId@@bcd2 to op2
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: bcd1
                HdlValueId: A
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: bcd2
                HdlValueId: alu_a


CommitId: 8da18a2c724af4c6a3e7aeab01c583f8128010c0
Still having bugs on ADC with decimal flag! Is it correct now?
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -331,6 +331,7 @@ always @ (*) begin
 					STATUS[C] = 1;
 					bcdh = bcdh % 10;
 				end
+				result = {bcdh[3:0],bcdl[3:0]};
 			end
 			else
 				{STATUS[C],result} = op1 + op2 + alu_status[C];

ParseResult:
UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode

UPD HdlStmCase@@alu_opcode to alu_opcode
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode


CommitId: 8da18a2c724af4c6a3e7aeab01c583f8128010c0
Still having bugs on ADC with decimal flag! Is it correct now?
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -418,8 +419,8 @@ always @ (*) begin
 				STATUS[V] = 0;
 */
 			if (alu_status[D] == 1) begin
-				bcdl = A[3:0] + alu_a[3:0] + alu_status[C];
-				bcdh = A[7:4] + alu_a[7:4];
+				bcdl = A[3:0] - alu_a[3:0] - ~alu_status[C];
+				bcdh = A[7:4] - alu_a[7:4];
 				if (bcdl > 9) begin
 					bcdh = bcdh + bcdl[5:4];
 					bcdl = bcdl % 10;

ParseResult:
UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode

UPD HdlStmCase@@alu_opcode to alu_opcode
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode


CommitId: 8da18a2c724af4c6a3e7aeab01c583f8128010c0
Still having bugs on ADC with decimal flag! Is it correct now?
--- a/rtl/verilog/t6507lp_alu.v
+++ b/rtl/verilog/t6507lp_alu.v
@@ -428,6 +429,7 @@ always @ (*) begin
 					STATUS[C] = 1;
 					bcdh = bcdh % 10;
 				end
+				result = {bcdh[3:0],bcdl[3:0]};
 			end
 			else
 				{STATUS[C],result} = op1 - op2 - ~alu_status[C];
ParseResult:
UPD HdlStmCase@@alu_opcode to alu_opcode
    INS HdlStmCaseType@@CASE to alu_opcode
    INS HdlValueId@@alu_opcode to alu_opcode

UPD HdlStmCase@@alu_opcode to alu_opcode
    DEL HdlStmCaseType@@CASE from alu_opcode
    DEL HdlValueId@@alu_opcode from alu_opcode


CommitId: cc058c45baac505eac5228f249fedfaa6d141ddb
Bug #48: SP wrong after decrement.
--- a/rtl/verilog/t6507lp_fsm.v
+++ b/rtl/verilog/t6507lp_fsm.v
@@ -150,11 +150,11 @@ module t6507lp_fsm(clk, reset_n, alu_result, alu_status, data_in, alu_x, alu_y,
 	wire [ADDR_SIZE_:0] next_pc;	 // a simple logic to add one to the PC
 	assign next_pc = pc + 13'b0000000000001;
 
-	wire [8:0] sp_plus_one;		// simple adder and subtracter for the stack pointer
-	assign sp_plus_one = sp + 9'b000000001;
+	wire [DATA_SIZE:0] sp_plus_one;		// simple adder and subtracter for the stack pointer
+	assign sp_plus_one = {1'b1, sp[7:0] + 8'b000000001};
 
-	wire [8:0] sp_minus_one;
-	assign sp_minus_one = sp - 9'b000000001;
+	wire [DATA_SIZE:0] sp_minus_one;
+	assign sp_minus_one = {1'b1, sp[7:0] - 8'b000000001};
 
 	reg [ADDR_SIZE_:0] address_plus_index; 	// this two registers are used when the instruction uses indexing.
 	reg page_crossed;			// address_plus_index always adds index to address and page_crossed asserts when the sum creates a carry.

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueInt@@00 to 000


CommitId: cc058c45baac505eac5228f249fedfaa6d141ddb
Bug #48: SP wrong after decrement.
--- a/rtl/verilog/t6507lp_fsm.v
+++ b/rtl/verilog/t6507lp_fsm.v
@@ -163,10 +163,10 @@ module t6507lp_fsm(clk, reset_n, alu_result, alu_status, data_in, alu_x, alu_y,
 
 	// this is the combinational logic related to indexed instructions
 	always @(*) begin
-		address_plus_index = 8'h00;
+		address_plus_index = 13'h000;
 		page_crossed = 1'b0;
 
-		if (state == READ_MEM_CALC_INDEX || state == READ_MEM_FIX_ADDR || state == FETCH_HIGH_CALC_INDEX) begin
+		if ( (state == READ_MEM_CALC_INDEX) || (state == READ_MEM_FIX_ADDR) || (state == FETCH_HIGH_CALC_INDEX) ) begin
 			{page_crossed, address_plus_index[7:0]} = temp_addr[7:0] + index;
 			address_plus_index[12:8] = temp_addr[12:8] + page_crossed;
 		end

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    tuple
        HdlValueId: RESET
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: rst_counter
                            HdlValueInt: 001
                    HdlValueId: rst_counter

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL tuple@@ from cases
    tuple
        HdlValueId: RESET
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: rst_counter
                            HdlValueInt: 1
                    HdlValueId: rst_counter


CommitId: cc058c45baac505eac5228f249fedfaa6d141ddb
Bug #48: SP wrong after decrement.
--- a/rtl/verilog/t6507lp_fsm.v
+++ b/rtl/verilog/t6507lp_fsm.v
@@ -182,7 +182,7 @@ module t6507lp_fsm(clk, reset_n, alu_result, alu_status, data_in, alu_x, alu_y,
 				address_plus_index[12:8] = 5'b00000;
 			end
 			else if (jump_indirect) begin
-				address_plus_index[7:0] = temp_addr[7:0] + 8'h01; // temp_addr should be 7:0?
+				address_plus_index[7:0] = temp_addr[7:0] + 8'h01;
 				address_plus_index[12:8] = 5'b00000;
 			end
 			else begin // indirecty falls here

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    tuple
        HdlValueId: RESET
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: rst_counter
                            HdlValueInt: 001
                    HdlValueId: rst_counter

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL tuple@@ from cases
    tuple
        HdlValueId: RESET
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: rst_counter
                            HdlValueInt: 1
                    HdlValueId: rst_counter


CommitId: cc058c45baac505eac5228f249fedfaa6d141ddb
Bug #48: SP wrong after decrement.
--- a/rtl/verilog/t6507lp_fsm.v
+++ b/rtl/verilog/t6507lp_fsm.v
@@ -205,7 +205,7 @@ module t6507lp_fsm(clk, reset_n, alu_result, alu_status, data_in, alu_x, alu_y,
 	always @ (posedge clk or negedge reset_n) begin // sequencial always block
 		if (reset_n == 1'b0) begin
 			// all registers must assume default values
-			pc <= 0; // TODO: this is written somewhere. something about a reset vector. must be checked.
+			pc <= 13'h0; // TODO: this is written somewhere. something about a reset vector. must be checked.
 			sp <= 9'b111111111; // the default is 'h1FF 
 			ir <= 8'h00;
 			temp_addr <= 13'h0000;

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    tuple
        HdlValueId: RESET
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: rst_counter
                            HdlValueInt: 001
                    HdlValueId: rst_counter

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL tuple@@ from cases
    tuple
        HdlValueId: RESET
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: rst_counter
                            HdlValueInt: 1
                    HdlValueId: rst_counter


CommitId: cc058c45baac505eac5228f249fedfaa6d141ddb
Bug #48: SP wrong after decrement.
--- a/rtl/verilog/t6507lp_fsm.v
+++ b/rtl/verilog/t6507lp_fsm.v
@@ -215,14 +215,14 @@ module t6507lp_fsm(clk, reset_n, alu_result, alu_status, data_in, alu_x, alu_y,
 			address <= 13'h0000;
 			mem_rw <= MEM_READ;
 			data_out <= 8'h00;
-			rst_counter <= 0;
+			rst_counter <= 3'h0;
 		end
 		else begin
 			state <= next_state;
 
 			case (state)
 				RESET: begin	// The processor was reset
-					rst_counter <= rst_counter + 1;
+					rst_counter <= rst_counter + 3'b001;
 					//sp <= 9'b111111111; // this prevents flipflops with different drivers
 					//$write("under reset"); 
 				end

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    tuple
        HdlValueId: RESET
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: rst_counter
                            HdlValueInt: 001
                    HdlValueId: rst_counter

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL tuple@@ from cases
    tuple
        HdlValueId: RESET
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: rst_counter
                            HdlValueInt: 1
                    HdlValueId: rst_counter


CommitId: cc058c45baac505eac5228f249fedfaa6d141ddb
Bug #48: SP wrong after decrement.
--- a/rtl/verilog/t6507lp_fsm.v
+++ b/rtl/verilog/t6507lp_fsm.v
@@ -592,7 +592,7 @@ module t6507lp_fsm(clk, reset_n, alu_result, alu_status, data_in, alu_x, alu_y,
 
 		case (state)
 			RESET: begin
-				if (rst_counter == 6) begin
+				if (rst_counter == 3'd6) begin
 					next_state = FETCH_OP;
 				end
 			end
ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@state to state
    INS HdlStmCaseType@@CASE to state
    INS HdlValueId@@state to state
    INS tuple@@ to cases
    tuple
        HdlValueId: RESET
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: rst_counter
                            HdlValueInt: 001
                    HdlValueId: rst_counter

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@state to state
    DEL HdlStmCaseType@@CASE from state
    DEL HdlValueId@@state from state
    DEL tuple@@ from cases
    tuple
        HdlValueId: RESET
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: rst_counter
                            HdlValueInt: 1
                    HdlValueId: rst_counter


