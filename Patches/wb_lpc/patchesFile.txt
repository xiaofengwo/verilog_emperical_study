CommitId: e376b1665951daab00b531d0c1e7b8880fcc702c
Fix bugs:
--- a/rtl/verilog/wb_regfile.v
+++ b/rtl/verilog/wb_regfile.v
@@ -37,11 +37,11 @@
 //////////////////////////////////////////////////////////////////////
 
 module wb_regfile (clk_i, nrst_i, wb_adr_i, wb_dat_o, wb_dat_i, wb_sel_i, wb_we_i,
-                   wb_stb_i, wb_cyc_i, wb_ack_o, datareg0, datareg1);
+                   wb_stb_i, wb_cyc_i, wb_ack_o, wb_err_o, ws_i, datareg0, datareg1);
 
     input          clk_i;
     input          nrst_i;
-    input    [2:0] wb_adr_i;
+    input    [3:0] wb_adr_i;
     output reg [31:0] wb_dat_o;
     input   [31:0] wb_dat_i;
     input    [3:0] wb_sel_i;

ParseResult:
INS HdlIdDef@@wb_err_o to ports
HdlIdDef: wb_err_o
    HdlDirection: OUT

INS HdlIdDef@@ws_i to ports
HdlIdDef: ws_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlDirection: IN

UPD HdlIdDef@@wb_adr_i to wb_adr_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@2 to 3


CommitId: e376b1665951daab00b531d0c1e7b8880fcc702c
Fix bugs:
--- a/rtl/verilog/wb_regfile.v
+++ b/rtl/verilog/wb_regfile.v
@@ -49,8 +49,11 @@ module wb_regfile (clk_i, nrst_i, wb_adr_i, wb_dat_o, wb_dat_i, wb_sel_i, wb_we_
     input          wb_stb_i;
     input          wb_cyc_i;
     output reg     wb_ack_o;
+    output         wb_err_o;
+    input    [7:0] ws_i;	 
     output  [31:0] datareg0;
     output  [31:0] datareg1;
+    reg      [7:0] waitstate;
 
     //
     // generate wishbone register bank writes

ParseResult:
INS HdlIdDef@@waitstate to objs
HdlIdDef: waitstate
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: e376b1665951daab00b531d0c1e7b8880fcc702c
Fix bugs:
--- a/rtl/verilog/wb_regfile.v
+++ b/rtl/verilog/wb_regfile.v
@@ -78,30 +81,33 @@ module wb_regfile (clk_i, nrst_i, wb_adr_i, wb_dat_o, wb_dat_i, wb_sel_i, wb_we_
                 datareg1_1 <= 8'h11;
                 datareg1_2 <= 8'h12;
                 datareg1_3 <= 8'h13;
+                wb_ack_o <= 1'b0;
+                waitstate <= 4'b0;
+					 wb_dat_o <= 32'h00000000;
             end
         else if(wb_wr)          // wishbone write cycle
             case (wb_sel_i)
                 4'b0000:
                     case (wb_adr_i)         // synopsys full_case parallel_case
-                        3'b000: datareg0_0 <= wb_dat_i[7:0];
-                        3'b001: datareg0_1 <= wb_dat_i[7:0];
-                        3'b010: datareg0_2 <= wb_dat_i[7:0];
-                        3'b011: datareg0_3 <= wb_dat_i[7:0];
-                        3'b100: datareg1_0 <= wb_dat_i[7:0];
-                        3'b101: datareg1_1 <= wb_dat_i[7:0];
-                        3'b110: datareg1_2 <= wb_dat_i[7:0];
-                        3'b111: datareg1_3 <= wb_dat_i[7:0];
+                        4'b0000: datareg0_0 <= wb_dat_i[7:0];
+                        4'b0001: datareg0_1 <= wb_dat_i[7:0];
+                        4'b0010: datareg0_2 <= wb_dat_i[7:0];
+                        4'b0011: datareg0_3 <= wb_dat_i[7:0];
+                        4'b0100: datareg1_0 <= wb_dat_i[7:0];
+                        4'b0101: datareg1_1 <= wb_dat_i[7:0];
+                        4'b0110: datareg1_2 <= wb_dat_i[7:0];
+                        4'b0111: datareg1_3 <= wb_dat_i[7:0];
                     endcase
                 4'b0001:
                     case (wb_adr_i)         // synopsys full_case parallel_case
-                        3'b000: datareg0_0 <= wb_dat_i[7:0];
-                        3'b001: datareg0_1 <= wb_dat_i[7:0];
-                        3'b010: datareg0_2 <= wb_dat_i[7:0];
-                        3'b011: datareg0_3 <= wb_dat_i[7:0];
-                        3'b100: datareg1_0 <= wb_dat_i[7:0];
-                        3'b101: datareg1_1 <= wb_dat_i[7:0];
-                        3'b110: datareg1_2 <= wb_dat_i[7:0];
-                        3'b111: datareg1_3 <= wb_dat_i[7:0];
+                        4'b0000: datareg0_0 <= wb_dat_i[7:0];
+                        4'b0001: datareg0_1 <= wb_dat_i[7:0];
+                        4'b0010: datareg0_2 <= wb_dat_i[7:0];
+                        4'b0011: datareg0_3 <= wb_dat_i[7:0];
+                        4'b0100: datareg1_0 <= wb_dat_i[7:0];
+                        4'b0101: datareg1_1 <= wb_dat_i[7:0];
+                        4'b0110: datareg1_2 <= wb_dat_i[7:0];
+                        4'b0111: datareg1_3 <= wb_dat_i[7:0];
                     endcase
                 4'b0011:
                     {datareg0_1, datareg0_0} <= wb_dat_i[15:0];

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: wb_ack_o

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: waitstate

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 00000000
    HdlValueId: wb_dat_o

UPD HdlStmCase@@wb_adr_i to wb_adr_i
    UPD HdlValueInt@@000 to 0000
    UPD HdlValueInt@@001 to 0001
    UPD HdlValueInt@@010 to 0010
    UPD HdlValueInt@@011 to 0011
    UPD HdlValueInt@@100 to 0100
    UPD HdlValueInt@@101 to 0101
    UPD HdlValueInt@@110 to 0110
    UPD HdlValueInt@@111 to 0111

UPD HdlStmCase@@wb_adr_i to wb_adr_i
    UPD HdlValueInt@@000 to 0000
    UPD HdlValueInt@@001 to 0001
    UPD HdlValueInt@@010 to 0010
    UPD HdlValueInt@@011 to 0011
    UPD HdlValueInt@@100 to 0100
    UPD HdlValueInt@@101 to 0101
    UPD HdlValueInt@@110 to 0110
    UPD HdlValueInt@@111 to 0111


CommitId: e376b1665951daab00b531d0c1e7b8880fcc702c
Fix bugs:
--- a/rtl/verilog/wb_regfile.v
+++ b/rtl/verilog/wb_regfile.v
@@ -120,25 +126,25 @@ module wb_regfile (clk_i, nrst_i, wb_adr_i, wb_dat_o, wb_dat_i, wb_sel_i, wb_we_
         case (wb_sel_i)
             4'b0000:
                 case (wb_adr_i)     // synopsys full_case parallel_case
-                    3'b000: wb_dat_o[7:0] <= datareg0_0;
-                    3'b001: wb_dat_o[7:0] <= datareg0_1;
-                    3'b010: wb_dat_o[7:0] <= datareg0_2;
-                    3'b011: wb_dat_o[7:0] <= datareg0_3;
-                    3'b100: wb_dat_o[7:0] <= datareg1_0;
-                    3'b101: wb_dat_o[7:0] <= datareg1_1;
-                    3'b110: wb_dat_o[7:0] <= datareg1_2;
-                    3'b111: wb_dat_o[7:0] <= datareg1_3;
+                    4'b0000: wb_dat_o[7:0] <= datareg0_0;
+                    4'b0001: wb_dat_o[7:0] <= datareg0_1;
+                    4'b0010: wb_dat_o[7:0] <= datareg0_2;
+                    4'b0011: wb_dat_o[7:0] <= datareg0_3;
+                    4'b0100: wb_dat_o[7:0] <= datareg1_0;
+                    4'b0101: wb_dat_o[7:0] <= datareg1_1;
+                    4'b0110: wb_dat_o[7:0] <= datareg1_2;
+                    4'b0111: wb_dat_o[7:0] <= datareg1_3;
                 endcase
             4'b0001:
                 case (wb_adr_i)     // synopsys full_case parallel_case
-                    3'b000: wb_dat_o[7:0] <= datareg0_0;
-                    3'b001: wb_dat_o[7:0] <= datareg0_1;
-                    3'b010: wb_dat_o[7:0] <= datareg0_2;
-                    3'b011: wb_dat_o[7:0] <= datareg0_3;
-                    3'b100: wb_dat_o[7:0] <= datareg1_0;
-                    3'b101: wb_dat_o[7:0] <= datareg1_1;
-                    3'b110: wb_dat_o[7:0] <= datareg1_2;
-                    3'b111: wb_dat_o[7:0] <= datareg1_3;
+                    4'b0000: wb_dat_o[7:0] <= datareg0_0;
+                    4'b0001: wb_dat_o[7:0] <= datareg0_1;
+                    4'b0010: wb_dat_o[7:0] <= datareg0_2;
+                    4'b0011: wb_dat_o[7:0] <= datareg0_3;
+                    4'b0100: wb_dat_o[7:0] <= datareg1_0;
+                    4'b0101: wb_dat_o[7:0] <= datareg1_1;
+                    4'b0110: wb_dat_o[7:0] <= datareg1_2;
+                    4'b0111: wb_dat_o[7:0] <= datareg1_3;
                 endcase
             4'b0011:
                     wb_dat_o[15:0] <= {datareg0_1, datareg0_0};

ParseResult:
UPD HdlStmCase@@wb_adr_i to wb_adr_i
    UPD HdlValueInt@@000 to 0000
    UPD HdlValueInt@@001 to 0001
    UPD HdlValueInt@@010 to 0010
    UPD HdlValueInt@@011 to 0011
    UPD HdlValueInt@@100 to 0100
    UPD HdlValueInt@@101 to 0101
    UPD HdlValueInt@@110 to 0110
    UPD HdlValueInt@@111 to 0111

UPD HdlStmCase@@wb_adr_i to wb_adr_i
    UPD HdlValueInt@@000 to 0000
    UPD HdlValueInt@@001 to 0001
    UPD HdlValueInt@@010 to 0010
    UPD HdlValueInt@@011 to 0011
    UPD HdlValueInt@@100 to 0100
    UPD HdlValueInt@@101 to 0101
    UPD HdlValueInt@@110 to 0110
    UPD HdlValueInt@@111 to 0111


CommitId: e376b1665951daab00b531d0c1e7b8880fcc702c
Fix bugs:
--- a/rtl/verilog/wb_regfile.v
+++ b/rtl/verilog/wb_regfile.v
@@ -147,10 +153,30 @@ module wb_regfile (clk_i, nrst_i, wb_adr_i, wb_dat_o, wb_dat_i, wb_sel_i, wb_we_
         endcase
         
    // generate ack_o
-    always @(posedge clk_i)
-        wb_ack_o <= #1 wb_acc & !wb_ack_o;
+    always @(posedge clk_i or negedge nrst_i)
+        if (nrst_i) begin            // not in reset
+            if (ws_i == 0) begin
+                wb_ack_o <= wb_acc & !wb_ack_o;
+                end else
+            if((waitstate == 4'b0) && (ws_i != 0)) begin
+                wb_ack_o <= 1'b0;
+                if(wb_acc) begin
+                    waitstate <= waitstate + 1;
+                end
+            end
+            else begin
+                if(wb_acc) waitstate <= waitstate + 1;
+                if(waitstate == ws_i) begin
+                    if(wb_acc) wb_ack_o <= 1'b1;
+                    waitstate <= 1'b0;
+                end
+            end
+        end
 
     assign datareg0 = { datareg0_3, datareg0_2, datareg0_1, datareg0_0 };
     assign datareg1 = { datareg1_3, datareg1_2, datareg1_1, datareg1_0 };
 
+    // Generate an error for registers 0x8-0xF
+    assign wb_err_o = wb_ack_o & wb_adr_i[3];
+
 endmodule
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: wb_ack_o
            HdlOp: INDEX
                list: ops
                    HdlValueId: wb_adr_i
                    HdlValueInt: 3
    HdlValueId: wb_err_o

INS HdlStmIf@@body to 

INS HdlStmIf@@ to body

UPD HdlStmAssign@@body to 

MOV HdlStmAssign@@body to 
HdlStmAssign: body
    HdlOp: AND
        list: ops
            HdlValueId: wb_acc
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: wb_ack_o
    HdlValueId: wb_ack_o
    HdlValueInt: 1

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: wb_ack_o

INS HdlStmIf@@ to body

INS HdlStmAssign@@ to body

UPD HdlStmAssign@@body to body
    MOV HdlValueInt@@1 to body
    HdlValueInt: 1


